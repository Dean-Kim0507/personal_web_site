{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/BlogList.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let splittedImagePaths;\n  let [allBlogs, setAllBlogs] = useState([]); // let show = null;\n\n  const [show, setShow] = useState(false);\n  const [showing, setShowing] = useState(null);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    setShow(true);\n    doing(id);\n  };\n\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(response => {\n      console.log(response.data);\n      setAllBlogs(response.data);\n    });\n  }, []);\n\n  function doing(id) {\n    let i = 0;\n\n    while (i < allBlogs.length) {\n      let blog_id = allBlogs.id;\n      console.log(id);\n\n      if (id === blog_id) {\n        splittedImagePaths = allBlogs.imagePaths.split(',');\n\n        for (let a = 0; a < splittedImagePaths.length; a++) {\n          splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n          console.log(splittedImagePaths[a]);\n        }\n\n        return /*#__PURE__*/React.createElement(ReadBlogList, {\n          key: allBlogs.id,\n          writer: allBlogs.writer,\n          title: allBlogs.title,\n          desc: allBlogs.desc,\n          imagePathArray: splittedImagePaths,\n          createdAt: allBlogs.createdAt,\n          updatedAt: allBlogs.updatedAt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }\n        });\n      }\n\n      i = i + 1;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"blogList_addBlog_button\",\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, allBlogs.map(data => {\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: handleShow(data.id),\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"Launch demo modal\"), /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, doing()));\n  })));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogList.js"],"names":["React","useState","useEffect","Modal","Carousel","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","ReadBlogList","BlogList","props","splittedImagePaths","allBlogs","setAllBlogs","show","setShow","showing","setShowing","handleClose","handleShow","id","doing","res","post","then","response","console","log","data","i","length","blog_id","imagePaths","split","a","substring","writer","title","desc","createdAt","updatedAt","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Modal, Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns} from 'react-bootstrap';\r\nimport '../css/BlogList.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props){\r\n\r\n\tlet splittedImagePaths\r\n\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\t// let show = null;\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [showing, setShowing] = useState(null);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = (id) => {\r\n\t\tsetShow(true);\r\n\t\tdoing(id);\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst res =  axios.post(\"/blog/list\")\r\n\t\t.then ( response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tsetAllBlogs(response.data);\r\n\t\t\t\r\n\t\t})\r\n\t}, []);\r\n\r\n\t\r\n\tfunction doing(id){\r\n\t\tlet i =0;\r\n\t\t  while(i<allBlogs.length){\r\n\t\t\tlet blog_id = allBlogs.id;\r\n\t\t\tconsole.log(id)\r\n\t\t\tif(id === blog_id){\r\n\t\t\tsplittedImagePaths = allBlogs.imagePaths.split(',');\r\n\r\n\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t}\r\n\t\t\t  return (\r\n\t\t\t\t\r\n\t\t\t\t\t\t<ReadBlogList key={allBlogs.id} \r\n\t\t\t\t\t\twriter={allBlogs.writer} \r\n\t\t\t\t\t\ttitle={allBlogs.title} \r\n\t\t\t\t\t\tdesc={allBlogs.desc} \r\n\t\t\t\t\t\timagePathArray={splittedImagePaths} \r\n\t\t\t\t\t\tcreatedAt ={allBlogs.createdAt} \r\n\t\t\t\t\t\tupdatedAt ={allBlogs.updatedAt}>\r\n\t\t\t\t\t\t</ReadBlogList>\r\n\t\t\t\t\r\n\t\t\t\t\t  );\r\n\t\t\t}\r\n\t\t\ti=i+1;\r\n\t\t  }\r\n\t  }\r\n\r\n\treturn(\r\n\t\t<div className=\"blogList_whole\">\r\n\t\t\t<Button className=\"blogList_addBlog_button\" variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t\t\t<br></br>\r\n\t\t\t<div className=\"blogList_list\">\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\tallBlogs.map((data) => {\r\n\r\n\t\t\t\t\t\tsplittedImagePaths = data.imagePaths.split(',');\t\t\r\n\t\t\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleShow(data.id)} key={data.id}>\r\n\t\t\t\t\t\t\tLaunch demo modal\r\n\t\t\t\t\t\t</Button>\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{/* {() => {if(data.id == showingKeyNumber) setShow(true);\r\n\t\t\t\t\t\telse setShow(false)}} */}\r\n\r\n\t\t\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t\t\t{doing()}\t\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t);\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\t}\r\n\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}