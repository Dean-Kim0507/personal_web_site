{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/Blog.css';\nimport axios from 'axios';\n\nfunction BlogList(props) {\n  let [data, setData] = useState(null);\n  let donwloadedData = '';\n  let imagePaths;\n  let writer;\n  let title;\n  let desc;\n  let splittedImagePaths;\n  let [showAllBlogs, setShowAllBlogs] = useState(null);\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(response => {\n      donwloadedData = response.data;\n      console.log(donwloadedData); // for(let i = 0; i<donwloadedData.length; i++){\n\n      writer = donwloadedData[0].writer;\n      title = donwloadedData[0].title;\n      desc = donwloadedData[0].desc;\n      imagePaths = donwloadedData[0].imagePaths;\n\n      if (imagePaths != null) {\n        splittedImagePaths = imagePaths.split(',');\n\n        for (let a = 0; a < splittedImagePaths.length; a++) {\n          splittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length - 1);\n          splittedImagePaths[a] = '../../' + splittedImagePaths[a];\n        }\n      }\n\n      setShowAllBlogs( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CardDeck, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"top\",\n        src: \"../1.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }\n      }, title), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }\n      }, desc)), /*#__PURE__*/React.createElement(Card.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 14\n        }\n      }, \"writer:\", writer)))))); // }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, showAllBlogs, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/BlogList.js"],"names":["React","useState","useEffect","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","BlogList","props","data","setData","donwloadedData","imagePaths","writer","title","desc","splittedImagePaths","showAllBlogs","setShowAllBlogs","res","post","then","response","console","log","split","a","length","substring"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Button, Image, Card, CardDeck, ListGroup, CardColumns} from 'react-bootstrap';\r\nimport '../css/Blog.css'\r\nimport axios from 'axios';\r\n\r\nfunction BlogList(props){\r\n\tlet [data, setData] =  useState(null);\r\n\r\n\tlet donwloadedData='';\r\n\tlet imagePaths;\r\n\tlet writer;\r\n\tlet title;\r\n\tlet desc;\r\n\tlet splittedImagePaths\r\n\r\n\tlet [showAllBlogs, setShowAllBlogs] = useState(null);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst res =  axios.post(\"/blog/list\")\r\n\t\t.then (response => {\r\n\t\t\tdonwloadedData = response.data;\r\n\t\t\tconsole.log(donwloadedData);\r\n\t\t\t\r\n\t\t\t// for(let i = 0; i<donwloadedData.length; i++){\r\n\t\t\t\r\n\t\t\twriter = donwloadedData[0].writer;\r\n\t\t\ttitle = donwloadedData[0].title;\r\n\t\t\tdesc = donwloadedData[0].desc;\r\n\t\t\timagePaths = donwloadedData[0].imagePaths;\r\n\r\n\t\t\tif(imagePaths != null){\r\n\t\t\t\t  splittedImagePaths = imagePaths.split(',');\r\n\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length-1);\r\n\t\t\t\t\tsplittedImagePaths[a] = '../../'+splittedImagePaths[a];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\tsetShowAllBlogs (\r\n\t\t\t\t<div>\r\n\t\t\t\t<CardDeck>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src='../1.jpg' />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t<Card.Footer>\r\n\t\t\t          <small className=\"text-muted\">writer:{writer}</small>\r\n\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t</Card>\r\n\t\t\t\t</CardDeck>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t// }\r\n\t\t})\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<div className=\"blog\">\r\n\t\t\t{showAllBlogs}\r\n\t\t\t\r\n\t\t\t<Button variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}