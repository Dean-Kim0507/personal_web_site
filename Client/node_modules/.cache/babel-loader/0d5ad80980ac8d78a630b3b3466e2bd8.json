{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\ReadBlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardDeck, Carousel } from 'react-bootstrap';\n\nconst format = require('date-format');\n\nfunction ReadBlogList(props) {\n  let title = props.title;\n  let desc = props.desc;\n  let writer = props.writer;\n  let imagePathArray = props.imagePathArray;\n  let createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n  let updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n  let blog_date;\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n  let ReadBlogList_keyValue = -1;\n  let carousel_control_indicators = true;\n  let image_path; //Decision of showing arrow in the pictures\n\n  if (imagePathArray.length > 1) carousel_control_indicators = true;else carousel_control_indicators = false; // Showing the time, blog was added or editted\n\n  if (createdAt === updatedAt) blog_date = createdAt;else if (createdAt === nowDate) blog_date = format.asString('hh:mm', new Date(props.createdAt));else if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm', new Date(props.updatedAt));else blog_date = updatedAt;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"readBlogList_eachCard\",\n    style: {\n      width: '20rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    controls: carousel_control_indicators,\n    indicators: carousel_control_indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, imagePathArray.map(data => {\n    ReadBlogList_keyValue = ReadBlogList_keyValue + 1; // If user doesn't add a image, show the No_Image.jpg\n\n    if (imagePathArray[0] === \"\") {\n      image_path = \"/uploadImages/No_Image.jpg\";\n    } else image_path = data;\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: ReadBlogList_keyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"readBlogList_blogImages\",\n      src: image_path,\n      alt: \"BlogImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, desc), \"Writer: \", writer), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, \"Date: \", blog_date))));\n}\n\nexport default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.js"],"names":["React","useState","useEffect","Card","CardDeck","Carousel","format","require","ReadBlogList","props","title","desc","writer","imagePathArray","createdAt","asString","Date","updatedAt","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","length","width","map","data"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Card, CardDeck, Carousel} from 'react-bootstrap';\r\nconst format = require('date-format');\r\n\r\nfunction ReadBlogList(props) {\r\n\r\n\tlet title = props.title;\r\n\tlet desc = props.desc;\r\n\tlet writer = props.writer;\r\n\tlet imagePathArray = props.imagePathArray;\r\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\r\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\r\n\tlet blog_date;\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\tlet ReadBlogList_keyValue =-1;\r\n\tlet carousel_control_indicators = true\r\n\tlet image_path;\r\n\t//Decision of showing arrow in the pictures\r\n\tif(imagePathArray.length > 1) carousel_control_indicators = true;\r\n\telse carousel_control_indicators = false;\r\n\r\n\t// Showing the time, blog was added or editted\r\n\t\r\n\tif(createdAt === updatedAt) blog_date = createdAt;\r\n\telse if (createdAt === nowDate) blog_date = format.asString('hh:mm', new Date(props.createdAt));\r\n\telse if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm', new Date(props.updatedAt));\r\n\telse blog_date = updatedAt ;\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\r\n\t\t\t<Card className=\"readBlogList_eachCard\" style={{ width: '20rem' }}>\r\n\r\n\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators ={carousel_control_indicators}>\r\n\t\t\t\t{\r\n\t\t\t\t\timagePathArray.map((data)=>{\r\n\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue+1;\r\n\t\t\t\t\t\t// If user doesn't add a image, show the No_Image.jpg\r\n\t\t\t\t\t\tif(imagePathArray[0]===\"\"){\r\n\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse image_path = data;\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Carousel.Item key = {ReadBlogList_keyValue}>\r\n\t\t\t\t\t\t\t\t<img\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\r\n\t\t\t\t\t\t\t\tsrc={image_path}\r\n\t\t\t\t\t\t\t\talt='BlogImages'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t\t)\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Carousel>\t\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t\t\r\n\t\t\t\t</Card.Text>\r\n\t\t\t\t\tWriter: {writer}\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}