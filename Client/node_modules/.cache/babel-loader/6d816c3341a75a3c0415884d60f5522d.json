{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\CommunityComponents\\\\Components\\\\TOC.js\";\n// import '../../../node_modules/react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nconst {\n  SearchBar\n} = Search;\n\nconst format = require('date-format');\n\nclass TOC extends Component {\n  /*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n  concat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\n  shouldComponentUpdate(newProps, newState) {\n    console.log('===>TOC render shouldComponentUpdate', newProps.data, this.props.data);\n\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('===>TOC render');\n    let lists = [];\n    let data = this.props.data;\n    let i = 0;\n    const columns = [{\n      dataField: \"id\",\n      text: \"NO\",\n      sort: true\n    }, {\n      dataField: \"title\",\n      text: \"TITLE\"\n    }, {\n      dataField: \"writer\",\n      text: \"NAME\"\n    }, {\n      dataField: \"date\",\n      text: \"DATE\"\n    }];\n\n    while (i < data.length) {\n      let date = data[i].date;\n      let nowDate = format.asString('MM-dd-yyyy', new Date());\n\n      if (date === nowDate) {\n        date = data[i].time;\n      } else date = data[i].date;\n\n      let title = /*#__PURE__*/React.createElement(\"a\", {\n        key: data[i].id,\n        href: \"/contents/\" + data[i].id,\n        \"data-id\": data[i].id // e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\n        ,\n        onClick: function (id, e) {\n          e.preventDefault();\n          this.props.onChangePage(id);\n        }.bind(this, data[i].id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, data[i].title);\n      lists.push({\n        id: data[i].id,\n        title: title,\n        writer: data[i].writer,\n        date: date\n      });\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n      keyField: \"id\",\n      data: lists,\n      columns: columns,\n      search: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, props => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      keyField: \"id\",\n      data: lists,\n      columns: columns,\n      pagination: paginationFactory(),\n      sort: {\n        dataField: 'id',\n        order: 'desc'\n      }\n    }, props.baseProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }))))) // <Table striped bordered hover size=\"sm\">\n    // \t<thead>\n    // \t\t<tr>\n    // \t\t\t<th>#</th>\n    // \t\t\t<th>Title</th>\n    // \t\t\t<th>Name</th>\n    // \t\t\t<th>Date</th>\n    // \t\t</tr>\n    // \t</thead>\n    // \t<tbody>\n    // \t\t{lists}\n    // \t</tbody>\t\n    // </Table>\n    // <nav>\n    //   <ul>\n    // \t{lists}\n    //   </ul>\n    // </nav>\n    ;\n  }\n\n}\n\nexport default TOC;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/CommunityComponents/Components/TOC.js"],"names":["React","Component","BootstrapTable","paginationFactory","ToolkitProvider","Search","SearchBar","format","require","TOC","shouldComponentUpdate","newProps","newState","console","log","data","props","render","lists","i","columns","dataField","text","sort","length","date","nowDate","asString","Date","time","title","id","e","preventDefault","onChangePage","bind","push","writer","searchProps","order","baseProps"],"mappings":"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","sourcesContent":["// import '../../../node_modules/react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport React, {Component} from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\nconst { SearchBar } = Search;\r\nconst format = require('date-format');\r\n\r\n\r\nclass TOC extends Component{\r\n\t/*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n\tconcat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\r\n\tshouldComponentUpdate(newProps, newState) {\r\n\t\tconsole.log('===>TOC render shouldComponentUpdate',newProps.data, this.props.data);\r\n\t\r\n\tif(this.props.data === newProps.data){\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n\trender() {\r\n\t\r\n\tconsole.log('===>TOC render');\r\n\tlet lists =[];\r\n\tlet data = this.props.data;\r\n\tlet i =0;\r\n\t\r\n\tconst columns =[\r\n\t\t{dataField:\"id\", text: \"NO\", sort: true},\r\n\t\t{dataField:\"title\", text: \"TITLE\"},\r\n\t\t{dataField:\"writer\", text: \"NAME\"},\r\n\t\t{dataField:\"date\", text: \"DATE\"}\r\n\t]\r\n\r\n\twhile(i< data.length){\r\n\t\tlet date = data[i].date;\r\n\t\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\t\tif(date === nowDate){\r\n\t\t\tdate = data[i].time\r\n\t\t}\r\n\t\telse date = data[i].date;\r\n\t\tlet title = <a key={data[i].id}\r\n\t\t\t\thref={\"/contents/\"+data[i].id}\r\n\t\t\t\tdata-id ={data[i].id}// e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\r\n\t\t\t\tonClick = {function(id, e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis.props.onChangePage(id); \r\n\t\t\t\t}.bind(this, data[i].id)}\r\n\t\t\t\t>{data[i].title}</a>\r\n\t   lists.push({id:data[i].id, title:title, writer:data[i].writer, date:date});\r\n\t\t   i=i+1;\r\n\t   }\r\n\r\n\t  return(\r\n\t\t<div className=\"Table\">\r\n\r\n\t\t\t<ToolkitProvider\r\n\t\t\tkeyField=\"id\"\r\n\t\t\tdata={ lists }\r\n\t\t\tcolumns={ columns }\r\n\t\t\tsearch\r\n\t\t\t>\r\n\t\t\t{props => (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<SearchBar { ...props.searchProps } />\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<BootstrapTable\r\n\t\t\t\t\tkeyField =\"id\"\r\n\t\t\t\t\tdata={lists}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tpagination={paginationFactory()}\r\n\t\t\t\t\tsort={ { dataField: 'id', order: 'desc' } }\r\n\t\t\t\t\t{ ...props.baseProps }\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t</ToolkitProvider>\r\n\t\t</div>\r\n\r\n\t\t// <Table striped bordered hover size=\"sm\">\r\n\t\t// \t<thead>\r\n\t\t// \t\t<tr>\r\n\t\t// \t\t\t<th>#</th>\r\n\t\t// \t\t\t<th>Title</th>\r\n\t\t// \t\t\t<th>Name</th>\r\n\t\t// \t\t\t<th>Date</th>\r\n\t\t// \t\t</tr>\r\n\t\t// \t</thead>\r\n\t\t// \t<tbody>\r\n\t\t// \t\t{lists}\r\n\t\t// \t</tbody>\t\r\n\t\t// </Table>\r\n\t\t// <nav>\r\n\t\t//   <ul>\r\n\t\t// \t{lists}\r\n\t\t//   </ul>\r\n\t\t// </nav>\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default TOC;"]},"metadata":{},"sourceType":"module"}