{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\Board.js\";\nimport React, { Component } from 'react';\nimport TOC from \"./BoardComponents/TOC\";\nimport ReadContent from \"./BoardComponents/ReadContent\";\nimport Subject from \"./BoardComponents/Subject\";\nimport Control from \"./BoardComponents/Control\";\nimport UpdateContent from \"./BoardComponents/UpdateContent\";\nimport CreateContent from './BoardComponents/CreateContent';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'welcome',\n      selected_content_id: 2,\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      subject: {\n        title: 'WEB',\n        sub: \"World wide Web\"\n      },\n      contents: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/api').then(res => res.json()).then(data => this.setState({\n      contents: data.rows\n    }));\n  }\n\n  getReadContent() {\n    var i = 0;\n\n    while (i < this.state.contents.length) {\n      var data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n        break;\n      }\n\n      i = i + 1;\n    }\n  }\n\n  getContent() {\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {\n      _title = this.state.welcome.title;\n      _desc = this.state.welcome.desc;\n      _article = /*#__PURE__*/React.createElement(ReadContent, {\n        title: _title,\n        desc: _desc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }\n      });\n    } //read\n    else if (this.state.mode === 'read') {\n        var _content = this.getReadContent();\n\n        _article = /*#__PURE__*/React.createElement(ReadContent, {\n          title: _content.title,\n          desc: _content.desc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 16\n          }\n        });\n      } // Create\n      else if (this.state.mode === 'create') {\n          _article = /*#__PURE__*/React.createElement(CreateContent, {\n            onSubmit: function (_title, _desc) {\n              //add content to this.state.cotnents\n              this.max_content_id = this.max_content_id + 1; //방법1)push를 쓰는 방법은 Original data인 state.contents를 바꾼다\n              // this.state.contents.push(\n              // {id:this.max_content_id, title:_title, desc:_desc});\n              //방법2)퍼포먼스 측면에서 concat이 더 효율적\n              // var _contents = this.state.contents.concat (\n              //   {id:this.max_content_id, title:_title, desc:_desc}\n              // );\n              //방법3)새로운 Array를 Array.from(복사하고싶은배열)/Object.assign({추가하고싶은내용},복사하고싶은객체) api 이용해서 만들어줘서 넣는 방법도 있음\n\n              var _contents = Array.from(this.state.contents);\n\n              _contents.push({\n                id: this.max_content_id,\n                title: _title,\n                desc: _desc\n              });\n\n              this.setState({\n                contents: _contents,\n                mode: 'read',\n                selected_content_id: this.max_content_id\n              });\n              console.log(_title, _desc);\n            }.bind(this),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 16\n            }\n          });\n        } // Update\n        else if (this.state.mode === 'update') {\n            _content = this.getReadContent();\n            _article = /*#__PURE__*/React.createElement(UpdateContent, {\n              data: _content,\n              onSubmit: function (_id, _title, _desc) {\n                console.log(_id); //add content to this.state.cotnents\n                //immutable(불변) 성능이고 성능을 컨트롤 할때 좋음\n\n                var _contents = Array.from(this.state.contents);\n\n                var i = 0;\n\n                while (i < _contents.length) {\n                  if (_contents[i].id === _id) {\n                    _contents[i] = {\n                      id: _id,\n                      title: _title,\n                      desc: _desc\n                    };\n                    break;\n                  }\n\n                  i = i + 1;\n                }\n\n                this.setState({\n                  contents: _contents,\n                  mode: 'read'\n                });\n              }.bind(this),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 16\n              }\n            });\n          }\n\n    return _article;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        this.setState({\n          mode: 'welcome'\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(TOC, {\n      onChangePage: function (id) {\n        this.setState({\n          mode: 'read',\n          selected_content_id: Number(id) //문자를 숫자로 변경해주는 함수 Number\n\n        });\n      }.bind(this),\n      data: this.state.contents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(Control, {\n      onChangeMode: function (_mode) {\n        if (_mode === 'delete') {\n          if (window.confirm('really?')) {\n            var _content = Array.from(this.state.contents);\n\n            var i = 0;\n\n            while (i < this.state.contents.length) {\n              if (_content[i].id === this.state.selected_content_id) {\n                _content.splice(i, 1);\n\n                break;\n              }\n\n              i = i + 1;\n            }\n\n            this.setState({\n              mode: 'welcome',\n              contents: _content,\n              selected_content_id: 1\n            });\n            alert('deleted!');\n          }\n        } else {\n          this.setState({\n            mode: _mode\n          });\n        }\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }\n    }), this.getContent());\n  }\n\n} // \trender() {\n// \t\t// {var result = this.state.array.map(\n// \t\t// \tfunction(ab){\n// \t\t// \t<p key={index}>\n// \t\t// \t{ab.writer}\n// \t\t// \t</p>\n// \t\t// \t}\n// \t\t// )}\n// \t\treturn(\n// \t\t\t<div>\n// \t\t\t\t{console.log(this.state.contents)}\n// \t\t\t\t  <h2>Board</h2>\n// \t\t\t\t  <form action=\"/create_process\" method=\"post\" onSubmit={function(e){\n// \t\t\t\t\t//   e.preventDefault();\n// \t\t\t\t\t  this.props.onSubmit(\n// \t\t\t\t\t\t  e.target.writer.value,\n// \t\t\t\t\t\t  e.target.title.value,\n// \t\t\t\t\t\t  e.target.desc.value\n// \t\t\t\t\t  );\n// \t\t\t\t  }.bind(this)}>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t<input type=\"text\" name=\"writer\" placeholder=\"Writer\"></input>\n// \t\t\t\t\t</p>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\"></input>\n// \t\t\t\t\t</p>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t<textarea  name=\"desc\" placeholder=\"description\"></textarea>\n// \t\t\t\t\t</p>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t<input type=\"submit\"></input>\n// \t\t\t\t\t</p>\n// \t\t\t\t  </form>\n// \t\t\t\t {/* {result} */}\n// \t\t\t\t  {/* {var i = 0;\n// \t\t\t\t  \twhile(i<this.state.array.length){\n// \t\t\t\t\t'\n// \t\t\t\t\tWriter: '+ this.state.array[i].writer+\n// \t\t\t\t\t'Title: '+ this.state.array[i].title +\n// \t\t\t\t\tDescription: ${this.state.array[i].description} \n// \t\t\t\t\t'\n// \t\t\t\t\ti=i+1;\n// \t\t  \t\t};} */}\n// \t\t\t  </div>\n// \t\t  );\n// \t}\n// }\n\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/Board.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","UpdateContent","CreateContent","Board","constructor","props","state","mode","selected_content_id","welcome","title","desc","subject","sub","contents","componentDidMount","fetch","then","res","json","data","setState","rows","getReadContent","i","length","id","getContent","_title","_desc","_article","_content","max_content_id","_contents","Array","from","push","console","log","bind","_id","render","Number","_mode","window","confirm","splice","alert"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport TOC from \"./BoardComponents/TOC\"\r\nimport ReadContent from \"./BoardComponents/ReadContent\"\r\nimport Subject from \"./BoardComponents/Subject\"\r\nimport Control from \"./BoardComponents/Control\"\r\nimport UpdateContent from \"./BoardComponents/UpdateContent\"\r\nimport CreateContent from './BoardComponents/CreateContent';\r\nclass Board extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\tmode:'welcome',\r\n      \tselected_content_id:2,\r\n      \twelcome:{title:'Welcome', desc:'Hello, React!!'},\r\n      \tsubject:{title:'WEB', sub:\"World wide Web\"},\r\n\t\tcontents:[] \r\n\t}\r\n}\t\r\n\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tfetch('http://localhost:3001/api')\r\n\t\t.then (res => res.json())\r\n\t\t.then (data => this.setState({contents: data.rows}));\r\n\t}\r\n\r\n\tgetReadContent(){\r\n\t\tvar i =0;\r\n\t\t  while(i<this.state.contents.length){\r\n\t\t\tvar data = this.state.contents[i];\r\n\t\t\tif(data.id === this.state.selected_content_id){\r\n\t\t\t  return data;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t\ti=i+1;\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\t  getContent(){\r\n\t\tvar _title, _desc,_article = null;\r\n\t\tif(this.state.mode ==='welcome'){\r\n\t\t  _title = this.state.welcome.title;\r\n\t\t  _desc = this.state.welcome.desc;\r\n\t\t  _article = <ReadContent title= {_title} desc= {_desc} ></ReadContent>\r\n\t\t}\r\n\t\t//read\r\n\t\telse if (this.state.mode ==='read'){\r\n\t\t  var _content = this.getReadContent();\r\n\t\r\n\t\t  _article = <ReadContent title= {_content.title} desc= {_content.desc} ></ReadContent>\r\n\t\t}\r\n\t\t// Create\r\n\t\telse if(this.state.mode ==='create'){\r\n\t\t  _article = <CreateContent onSubmit={\r\n\t\t\tfunction(_title,_desc){\r\n\t\t\t  //add content to this.state.cotnents\r\n\t\t\t  this.max_content_id = this.max_content_id+1;\r\n\t\t\t  //방법1)push를 쓰는 방법은 Original data인 state.contents를 바꾼다\r\n\t\t\t  // this.state.contents.push(\r\n\t\t\t  // {id:this.max_content_id, title:_title, desc:_desc});\r\n\t\t\t  //방법2)퍼포먼스 측면에서 concat이 더 효율적\r\n\t\t\t  // var _contents = this.state.contents.concat (\r\n\t\t\t  //   {id:this.max_content_id, title:_title, desc:_desc}\r\n\t\t\t  // );\r\n\t\t\t  //방법3)새로운 Array를 Array.from(복사하고싶은배열)/Object.assign({추가하고싶은내용},복사하고싶은객체) api 이용해서 만들어줘서 넣는 방법도 있음\r\n\t\t\t  var _contents = Array.from(this.state.contents);\r\n\t\t\t  _contents.push({id:this.max_content_id, title:_title, desc:_desc});\r\n\t\t\t  this.setState({\r\n\t\t\t\tcontents:_contents,\r\n\t\t\t\tmode:'read',\r\n\t\t\t\tselected_content_id:this.max_content_id\r\n\t\t\t  });\r\n\t\t\t  console.log(_title, _desc)\r\n\t\t\t}.bind(this)\r\n\t\t  }></CreateContent>\r\n\t\t}\r\n\t\t// Update\r\n\t\telse if(this.state.mode ==='update'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t  _article = <UpdateContent data = {_content} onSubmit={\r\n\t\t\tfunction(_id, _title,_desc){\r\n\t\t\t  console.log(_id);\r\n\t\t\t  //add content to this.state.cotnents\r\n\t\t\t  //immutable(불변) 성능이고 성능을 컨트롤 할때 좋음\r\n\t\t\t  var _contents = Array.from(this.state.contents);\r\n\t\t\t  var i =0;\r\n\t\t\t  while(i<_contents.length){\r\n\t\t\t\tif(_contents[i].id ===_id){\r\n\t\t\t\t  _contents[i] = {id:_id, title:_title, desc:_desc};\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\ti=i+1;\r\n\t\t\t  }\r\n\t\t\t  this.setState({\r\n\t\t\t\tcontents:_contents,\r\n\t\t\t\tmode:'read'\r\n\t\t\t  });\r\n\t\t\t}.bind(this)\r\n\t\t  }></UpdateContent>\r\n\t\t}\r\n\t\treturn _article;\r\n\t  }\r\n\r\n\t  render(){\r\n    \r\n\t\treturn(\r\n\t\t<div className=\"App\">\r\n\t\t<Subject title={this.state.subject.title} \r\n\t\tsub={this.state.subject.sub}\r\n\t\tonChangePage={function(){\r\n\t\t  this.setState({mode:'welcome'});\r\n\t\t}.bind(this)}\r\n\t\t></Subject>\r\n\t\t{/* <header>\r\n\t\t  <h1><a href=\"/\" onClick={function(e){\r\n\t\t\tconsole.log(e);\r\n\t\t\te.preventDefault();\r\n\t\t\t// this.state.mode = 'welcome';\r\n\t\t\t//위와같이 걍 값을 넣는게 아니라 이미 컴포넌트 생성후에는 setState 메소드를 써서 집어넣어야함\r\n\t\t\tthis.setState({\r\n\t\t\t  mode:'welcome'\r\n\t\t\t})\r\n\t\t\t//onClick안에 this값은 자기자신이 아닌 아무값도 셋팅되지 않는다(원리는모름), 그래서 bind 함수를 써야한다\r\n\t\t  }.bind(this)}>{this.state.subject.title}</a></h1>\r\n\t\t  {this.state.subject.sub}\r\n\t\t  </header> */}\r\n\t\t<TOC onChangePage = {\r\n\t\t  function(id){ \r\n\t\t\tthis.setState({\r\n\t\t\t  mode:'read',\r\n\t\t\t  selected_content_id:Number(id)//문자를 숫자로 변경해주는 함수 Number\r\n\t\t\t});\r\n\t\t  }.bind(this)\r\n\t\t}data={this.state.contents}></TOC>\r\n\t\t<Control onChangeMode={function(_mode){\r\n\t\t  if(_mode === 'delete'){\r\n\t\t\tif(window.confirm('really?')){\r\n\t\t\t  var _content = Array.from(this.state.contents);\r\n\t\t\t  var i = 0;\r\n\t\t\t  while(i<this.state.contents.length){\r\n\t\t\t\tif(_content[i].id === this.state.selected_content_id){\r\n\t\t\t\t  _content.splice(i,1);\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\ti =i+1\r\n\t\t\t  }\r\n\t\t\t  this.setState({\r\n\t\t\t\tmode:'welcome',\r\n\t\t\t\tcontents:_content,\r\n\t\t\t\tselected_content_id:1\r\n\t\t\t  });\r\n\t\t\t  alert('deleted!');\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  else{\r\n\t\t  this.setState({\r\n\t\t\tmode:_mode\r\n\t\t  });\r\n\t\t  \r\n\t\t}\r\n\t\t}.bind(this)}></Control>\r\n\t\r\n\t\t{this.getContent()}\r\n\t\t</div>\r\n\t\t);\r\n\t  }\r\n\t}\r\n\r\n// \trender() {\r\n// \t\t// {var result = this.state.array.map(\r\n// \t\t// \tfunction(ab){\r\n// \t\t// \t<p key={index}>\r\n// \t\t// \t{ab.writer}\r\n// \t\t// \t</p>\r\n// \t\t// \t}\r\n// \t\t// )}\r\n// \t\treturn(\r\n// \t\t\t<div>\r\n// \t\t\t\t{console.log(this.state.contents)}\r\n// \t\t\t\t  <h2>Board</h2>\r\n// \t\t\t\t  <form action=\"/create_process\" method=\"post\" onSubmit={function(e){\r\n// \t\t\t\t\t//   e.preventDefault();\r\n// \t\t\t\t\t  this.props.onSubmit(\r\n// \t\t\t\t\t\t  e.target.writer.value,\r\n// \t\t\t\t\t\t  e.target.title.value,\r\n// \t\t\t\t\t\t  e.target.desc.value\r\n// \t\t\t\t\t  );\r\n\t\t\t\t\t  \r\n// \t\t\t\t  }.bind(this)}>\r\n// \t\t\t\t\t<p>\r\n// \t\t\t\t\t\t<input type=\"text\" name=\"writer\" placeholder=\"Writer\"></input>\r\n// \t\t\t\t\t</p>\r\n// \t\t\t\t\t<p>\r\n// \t\t\t\t\t\t<input type=\"text\" name=\"title\" placeholder=\"title\"></input>\r\n// \t\t\t\t\t</p>\r\n// \t\t\t\t\t<p>\r\n// \t\t\t\t\t\t<textarea  name=\"desc\" placeholder=\"description\"></textarea>\r\n// \t\t\t\t\t</p>\r\n// \t\t\t\t\t<p>\r\n// \t\t\t\t\t\t<input type=\"submit\"></input>\r\n// \t\t\t\t\t</p>\r\n// \t\t\t\t  </form>\r\n\r\n// \t\t\t\t {/* {result} */}\r\n// \t\t\t\t  {/* {var i = 0;\r\n// \t\t\t\t  \twhile(i<this.state.array.length){\r\n// \t\t\t\t\t'\r\n// \t\t\t\t\tWriter: '+ this.state.array[i].writer+\r\n// \t\t\t\t\t'Title: '+ this.state.array[i].title +\r\n// \t\t\t\t\tDescription: ${this.state.array[i].description} \r\n// \t\t\t\t\t'\r\n// \t\t\t\t\ti=i+1;\r\n// \t\t  \t\t};} */}\r\n// \t\t\t  </div>\r\n// \t\t  );\r\n// \t}\r\n// }\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}