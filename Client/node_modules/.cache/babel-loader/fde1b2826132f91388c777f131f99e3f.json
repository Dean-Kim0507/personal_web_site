{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\Register.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\n\nfunction Register(props) {\n  const [validated, setValidated] = useState(false);\n  const [userID, setUserId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [confirmPassword_invalid, setConfirmPassword_invalid] = useState();\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [userIdFeedBack, setUserIdFeedBack] = useState(null);\n  const [userIdInvalid, setUserIdInvalid] = useState();\n  const [passwordInvalid, setPasswordInvalid] = useState();\n\n  let _userID;\n\n  let _password;\n\n  let _confirm_password;\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    } else {}\n  };\n\n  const onChangeUserID = e => {\n    _userID = e.target.value;\n\n    if (_userID === undefined || _userID.length < 8 || _userID.length > 20) {\n      setUserIdInvalid(true);\n      setUserIdFeedBack(\"Please choose a user ID with 8 to 20 characters.\");\n    } else {\n      setUserIdInvalid(false);\n      setUserId(_userID);\n    }\n\n    console.log(userIdInvalid, ' ', confirmPassword_invalid, ' ', passwordInvalid);\n  }; //validating password, password must be between 8 and 20 letter.\n\n\n  const onChangePassword = e => {\n    _password = e.target.value;\n\n    if (_password === undefined || _password.length < 8 || _password.length > 20) {\n      setPasswordInvalid(true);\n      setPassword(_password);\n    } else if (confirmPassword != null && _password != confirmPassword) {\n      setPasswordInvalid(false);\n      setConfirmPassword_invalid(true);\n      setPassword(_password);\n    } else if (confirmPassword != null && _password === confirmPassword) {\n      setPasswordInvalid(false);\n      setConfirmPassword_invalid(false);\n      setPassword(_password);\n    } else {\n      setPasswordInvalid(() => false);\n      setPassword(_password);\n\n      if (_password != confirmPassword) {\n        setConfirmPassword_invalid(true);\n      }\n    }\n  }; //validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\n\n\n  const onChangeConfirmPassword = e => {\n    _confirm_password = e.target.value;\n\n    if (_confirm_password === undefined || _confirm_password.length < 8 || _confirm_password.length > 20) {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    } else if (password != null && _confirm_password != password) {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    } else if (password != null && _confirm_password === password) {\n      setConfirmPassword_invalid(false);\n      setConfirmPassword(_confirm_password);\n    } else {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    }\n  }; //First name, last name, email are required\n\n\n  const onChangeFirstName = e => {\n    const first_Name = e.target.value;\n    setFirstName(firstName);\n  };\n\n  const onChangeLastName = e => {\n    const last_Name = e.target.value;\n    setLastName(last_Name);\n  };\n\n  const onChangeEmail = e => {\n    const e_mail = e.target.value;\n    setEmail(e_mail);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"userId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"User ID\",\n    onChange: onChangeUserID,\n    isInvalid: userIdInvalid,\n    minLength: \"8\",\n    maxLength: \"20\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, userIdFeedBack)), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: onChangePassword,\n    isInvalid: passwordInvalid,\n    minLength: \"8\",\n    maxLength: \"20\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, \"Please choose a new password with at least 8 characters\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"confirm_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    isInvalid: confirmPassword_invalid,\n    onChange: onChangeConfirmPassword,\n    minLength: \"8\",\n    maxLength: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, \"Please choose a new password with at least 8 characters and make sure this matches your password.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name\",\n    onChange: onChangeFirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid First Name.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Last name\",\n    onChange: onChangeLastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid Last Name.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email address\",\n    onChange: onChangeEmail,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid Email.\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/Register.jsx"],"names":["React","useState","Button","Form","Col","InputGroup","Register","props","validated","setValidated","userID","setUserId","password","setPassword","confirmPassword","setConfirmPassword","confirmPassword_invalid","setConfirmPassword_invalid","firstName","setFirstName","lastName","setLastName","email","setEmail","userIdFeedBack","setUserIdFeedBack","userIdInvalid","setUserIdInvalid","passwordInvalid","setPasswordInvalid","_userID","_password","_confirm_password","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","onChangeUserID","e","target","value","undefined","length","console","log","onChangePassword","onChangeConfirmPassword","onChangeFirstName","first_Name","onChangeLastName","last_Name","onChangeEmail","e_mail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,UAA5B,QAA8C,iBAA9C;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACe,uBAAD,EAA0BC,0BAA1B,IAAwDhB,QAAQ,EAAtE;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,EAAlD;AACA,QAAM,CAAC2B,eAAD,EAAkBC,kBAAlB,IAAwC5B,QAAQ,EAAtD;;AAEA,MAAI6B,OAAJ;;AACA,MAAIC,SAAJ;;AACA,MAAIC,iBAAJ;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/B,UAAMC,IAAI,GAAGD,KAAK,CAACE,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AACnCH,MAAAA,KAAK,CAACI,cAAN;AACAJ,MAAAA,KAAK,CAACK,eAAN;AACA9B,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAJD,MAKK,CAEJ;AAED,GAXD;;AAaA,QAAM+B,cAAc,GAAIC,CAAD,IAAO;AAC7BX,IAAAA,OAAO,GAAGW,CAAC,CAACC,MAAF,CAASC,KAAnB;;AACA,QAAIb,OAAO,KAAKc,SAAZ,IAAyBd,OAAO,CAACe,MAAR,GAAiB,CAA1C,IAA+Cf,OAAO,CAACe,MAAR,GAAiB,EAApE,EAAwE;AACvElB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAF,MAAAA,iBAAiB,CAAC,kDAAD,CAAjB;AACA,KAHD,MAIK;AACJE,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAhB,MAAAA,SAAS,CAACmB,OAAD,CAAT;AACA;;AACDgB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,aAAZ,EAA2B,GAA3B,EAAgCV,uBAAhC,EAAyD,GAAzD,EAA8DY,eAA9D;AAEA,GAZD,CA9BwB,CA4CxB;;;AACA,QAAMoB,gBAAgB,GAAIP,CAAD,IAAO;AAC/BV,IAAAA,SAAS,GAAGU,CAAC,CAACC,MAAF,CAASC,KAArB;;AACA,QAAIZ,SAAS,KAAKa,SAAd,IAA2Bb,SAAS,CAACc,MAAV,GAAmB,CAA9C,IAAmDd,SAAS,CAACc,MAAV,GAAmB,EAA1E,EAA8E;AAC7EhB,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAhB,MAAAA,WAAW,CAACkB,SAAD,CAAX;AACA,KAHD,MAIK,IAAIjB,eAAe,IAAI,IAAnB,IAA2BiB,SAAS,IAAIjB,eAA5C,EAA6D;AACjEe,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAZ,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAJ,MAAAA,WAAW,CAACkB,SAAD,CAAX;AACA,KAJI,MAKA,IAAIjB,eAAe,IAAI,IAAnB,IAA2BiB,SAAS,KAAKjB,eAA7C,EAA8D;AAClEe,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAZ,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAJ,MAAAA,WAAW,CAACkB,SAAD,CAAX;AACA,KAJI,MAKA;AACJF,MAAAA,kBAAkB,CAAC,MAAM,KAAP,CAAlB;AACAhB,MAAAA,WAAW,CAACkB,SAAD,CAAX;;AACA,UAAIA,SAAS,IAAIjB,eAAjB,EAAkC;AACjCG,QAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACA;AACD;AACD,GAvBD,CA7CwB,CAqExB;;;AACA,QAAMgC,uBAAuB,GAAIR,CAAD,IAAO;AAEtCT,IAAAA,iBAAiB,GAAGS,CAAC,CAACC,MAAF,CAASC,KAA7B;;AACA,QAAIX,iBAAiB,KAAKY,SAAtB,IAAmCZ,iBAAiB,CAACa,MAAlB,GAA2B,CAA9D,IAAmEb,iBAAiB,CAACa,MAAlB,GAA2B,EAAlG,EAAsG;AACrG5B,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAF,MAAAA,kBAAkB,CAACiB,iBAAD,CAAlB;AACA,KAHD,MAIK,IAAIpB,QAAQ,IAAI,IAAZ,IAAoBoB,iBAAiB,IAAIpB,QAA7C,EAAuD;AAC3DK,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAF,MAAAA,kBAAkB,CAACiB,iBAAD,CAAlB;AACA,KAHI,MAIA,IAAIpB,QAAQ,IAAI,IAAZ,IAAoBoB,iBAAiB,KAAKpB,QAA9C,EAAwD;AAC5DK,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAF,MAAAA,kBAAkB,CAACiB,iBAAD,CAAlB;AACA,KAHI,MAIA;AACJf,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAF,MAAAA,kBAAkB,CAACiB,iBAAD,CAAlB;AACA;AACD,GAnBD,CAtEwB,CA0FxB;;;AACA,QAAMkB,iBAAiB,GAAIT,CAAD,IAAO;AAChC,UAAMU,UAAU,GAAGV,CAAC,CAACC,MAAF,CAASC,KAA5B;AACAxB,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACA,GAHD;;AAKA,QAAMkC,gBAAgB,GAAIX,CAAD,IAAO;AAC/B,UAAMY,SAAS,GAAGZ,CAAC,CAACC,MAAF,CAASC,KAA3B;AACAtB,IAAAA,WAAW,CAACgC,SAAD,CAAX;AACA,GAHD;;AAKA,QAAMC,aAAa,GAAIb,CAAD,IAAO;AAC5B,UAAMc,MAAM,GAAGd,CAAC,CAACC,MAAF,CAASC,KAAxB;AACApB,IAAAA,QAAQ,CAACgC,MAAD,CAAR;AACA,GAHD;;AAKA,sBACC,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAE/C,SAA5B;AAAuC,IAAA,QAAQ,EAAEyB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE7B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,SAAtC;AAAgD,IAAA,QAAQ,EAAEoC,cAA1D;AAA0E,IAAA,SAAS,EAAEd,aAArF;AAAoG,IAAA,SAAS,EAAC,GAA9G;AAAkH,IAAA,SAAS,EAAC,IAA5H;AAAiI,IAAA,QAAQ,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,cADF,CAHD,CADD,eASC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEpB,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAqD,IAAA,QAAQ,EAAE4C,gBAA/D;AAAiF,IAAA,SAAS,EAAEpB,eAA5F;AAA6G,IAAA,SAAS,EAAC,GAAvH;AAA2H,IAAA,SAAS,EAAC,IAArI;AAA0I,IAAA,QAAQ,MAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAHD,CATD,eAiBC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAExB,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,WAAW,EAAC,kBAFb;AAGC,IAAA,QAAQ,MAHT;AAIC,IAAA,SAAS,EAAEY,uBAJZ;AAKC,IAAA,QAAQ,EAAEiC,uBALX;AAMC,IAAA,SAAS,EAAC,GANX;AAMe,IAAA,SAAS,EAAC,IANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAUC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAVD,CAjBD,eAgCC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE7C,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,YAHb;AAIC,IAAA,QAAQ,EAAE8C,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAQC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CARD,CAhCD,eA6CC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE9C,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,WAHb;AAIC,IAAA,QAAQ,EAAEgD,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAQC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCARD,CA7CD,eA2DC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhD,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,eAAvC;AAAuD,IAAA,QAAQ,EAAEkD,aAAjE;AAAgF,IAAA,QAAQ,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHD,CA3DD,eAkEC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlED,CADD;AAuEA;;AAED,eAAehD,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nfunction Register(props) {\r\n\tconst [validated, setValidated] = useState(false);\r\n\tconst [userID, setUserId] = useState(null);\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [confirmPassword, setConfirmPassword] = useState(null);\r\n\tconst [confirmPassword_invalid, setConfirmPassword_invalid] = useState();\r\n\tconst [firstName, setFirstName] = useState(null);\r\n\tconst [lastName, setLastName] = useState(null);\r\n\tconst [email, setEmail] = useState(null);\r\n\tconst [userIdFeedBack, setUserIdFeedBack] = useState(null);\r\n\tconst [userIdInvalid, setUserIdInvalid] = useState();\r\n\tconst [passwordInvalid, setPasswordInvalid] = useState();\r\n\r\n\tlet _userID;\r\n\tlet _password;\r\n\tlet _confirm_password;\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tconst form = event.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tconst onChangeUserID = (e) => {\r\n\t\t_userID = e.target.value;\r\n\t\tif (_userID === undefined || _userID.length < 8 || _userID.length > 20) {\r\n\t\t\tsetUserIdInvalid(true);\r\n\t\t\tsetUserIdFeedBack(\"Please choose a user ID with 8 to 20 characters.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetUserIdInvalid(false);\r\n\t\t\tsetUserId(_userID);\r\n\t\t}\r\n\t\tconsole.log(userIdInvalid, ' ', confirmPassword_invalid, ' ', passwordInvalid)\r\n\r\n\t};\r\n\r\n\t//validating password, password must be between 8 and 20 letter.\r\n\tconst onChangePassword = (e) => {\r\n\t\t_password = e.target.value;\r\n\t\tif (_password === undefined || _password.length < 8 || _password.length > 20) {\r\n\t\t\tsetPasswordInvalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password != confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password === confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordInvalid(() => false);\r\n\t\t\tsetPassword(_password);\r\n\t\t\tif (_password != confirmPassword) {\r\n\t\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\r\n\tconst onChangeConfirmPassword = (e) => {\r\n\r\n\t\t_confirm_password = e.target.value;\r\n\t\tif (_confirm_password === undefined || _confirm_password.length < 8 || _confirm_password.length > 20) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password != password) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password === password) {\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t};\r\n\t//First name, last name, email are required\r\n\tconst onChangeFirstName = (e) => {\r\n\t\tconst first_Name = e.target.value;\r\n\t\tsetFirstName(firstName);\r\n\t};\r\n\r\n\tconst onChangeLastName = (e) => {\r\n\t\tconst last_Name = e.target.value;\r\n\t\tsetLastName(last_Name);\r\n\t};\r\n\r\n\tconst onChangeEmail = (e) => {\r\n\t\tconst e_mail = e.target.value;\r\n\t\tsetEmail(e_mail);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"userId\">\r\n\t\t\t\t<Form.Label>User ID</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" placeholder=\"User ID\" onChange={onChangeUserID} isInvalid={userIdInvalid} minLength=\"8\" maxLength=\"20\" required />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{userIdFeedBack}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"password\">\r\n\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" onChange={onChangePassword} isInvalid={passwordInvalid} minLength=\"8\" maxLength=\"20\" required />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease choose a new password with at least 8 characters\r\n          \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"confirm_password\">\r\n\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tisInvalid={confirmPassword_invalid}\r\n\t\t\t\t\tonChange={onChangeConfirmPassword}\r\n\t\t\t\t\tminLength=\"8\" maxLength=\"20\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease choose a new password with at least 8 characters and make sure this matches your password.\r\n          \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"firstName\">\r\n\t\t\t\t<Form.Label>First name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\trequired\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"First name\"\r\n\t\t\t\t\tonChange={onChangeFirstName}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid First Name.\r\n\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"lastName\">\r\n\t\t\t\t<Form.Label>Last name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\trequired\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Last name\"\r\n\t\t\t\t\tonChange={onChangeLastName}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid Last Name.\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"email\">\r\n\t\t\t\t<Form.Label>Email address</Form.Label>\r\n\t\t\t\t<Form.Control type=\"email\" placeholder=\"Email address\" onChange={onChangeEmail} required />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid Email.\r\n         \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button type=\"submit\">Submit</Button>\r\n\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}