{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\ReadBlogList.jsx\";\n\n/**\n * last updated: Nov 26 2020\n * Author: Dean Kim (dean.kim0507@gmail.com)\n *\n * This page return the selected blog images and information to Modal in blogList page.\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \n * \n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\n */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Carousel, Image, Button, Modal } from 'react-bootstrap';\nimport BlogComments from './BlogComments';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction ReadBlogList(props) {\n  const id = props.id;\n  const title = props.title;\n  const desc = props.desc;\n  const writer = props.writer;\n  const userID = props.userID;\n  const isLogedIn = props.isLogedIn;\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [show, setShow] = useState(false);\n  const [showEditButton, setShowEditButton] = useState(true);\n  const [updatePath, setUpdatePath] = useState(null);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const format = require('date-format');\n\n  let imagePathArray = props.imagePathArray;\n  let createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n  let updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n  let blog_date;\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n  let ReadBlogList_keyValue = -1;\n  let carousel_control_indicators = true;\n  let image_path;\n  useEffect(() => {\n    if (isLogedIn) {\n      setUpdatePath(`/blogupdate/${id}/${writer}`);\n\n      if (user != null) {\n        if (user.userID != userID) {\n          setShowEditButton(false);\n        } else {\n          setShowEditButton(true);\n        }\n      } else {\n        setShowEditButton(false);\n      }\n    } else setUpdatePath(`/blogupdate/${id}/${userID}`);\n  }, []); //Decision of showing arrow in the pictures\n\n  if (imagePathArray.length > 1) carousel_control_indicators = true;else carousel_control_indicators = false; // Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\n\n  if (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));else if (updatedAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy (Edited)', new Date(props.updatedAt));else if (createdAt === updatedAt) blog_date = createdAt;else blog_date = updatedAt + ' (Edited)';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    className: \"readBlogList_eachCard\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    controls: carousel_control_indicators,\n    indicators: carousel_control_indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, imagePathArray.map(data => {\n    ReadBlogList_keyValue = ReadBlogList_keyValue + 1; // If user doesn't add any image, show the No_Image.jpg\n\n    if (imagePathArray[0] === \"\") {\n      image_path = \"/uploadImages/No_Image.jpg\";\n    } else image_path = data;\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: ReadBlogList_keyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: \"readBlogList_blogImages\",\n      src: image_path,\n      alt: \"BlogImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, desc), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, \"Date: \", blog_date)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlogComments, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }\n  }, \"Delete it ?\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \" Delete this comment, permanently ?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: `/bloglist/delete/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  }, \"Delete\"))), showEditButton ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_update_button\",\n    variant: \"light\",\n    href: updatePath,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 8\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_delete_button\",\n    variant: \"light\",\n    onClick: handleShow,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }\n  }, \"Delete\")) : null)));\n}\n\nexport default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.jsx"],"names":["React","useState","useEffect","Card","Carousel","Image","Button","Modal","BlogComments","useDispatch","useSelector","ReadBlogList","props","id","title","desc","writer","userID","isLogedIn","isLoggedIn","user","state","auth","message","show","setShow","showEditButton","setShowEditButton","updatePath","setUpdatePath","handleClose","handleShow","format","require","imagePathArray","createdAt","asString","Date","updatedAt","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","length","width","map","data"],"mappings":"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","sourcesContent":["/**\n * last updated: Nov 26 2020\n * Author: Dean Kim (dean.kim0507@gmail.com)\n *\n * This page return the selected blog images and information to Modal in blogList page.\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \n * \n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Carousel, Image, Button, Modal } from 'react-bootstrap';\nimport BlogComments from './BlogComments'\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction ReadBlogList(props) {\n\tconst id = props.id;\n\tconst title = props.title;\n\tconst desc = props.desc;\n\tconst writer = props.writer;\n\tconst userID = props.userID;\n\tconst isLogedIn = props.isLogedIn;\n\tconst { isLoggedIn, user } = useSelector(state => state.auth);\n\tconst { message } = useSelector(state => state.message);\n\tconst [show, setShow] = useState(false);\n\tconst [showEditButton, setShowEditButton] = useState(true);\n\tconst [updatePath, setUpdatePath] = useState(null);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\tconst format = require('date-format');\n\tlet imagePathArray = props.imagePathArray;\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n\tlet blog_date;\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\n\tlet ReadBlogList_keyValue = -1;\n\tlet carousel_control_indicators = true\n\tlet image_path;\n\n\tuseEffect(() => {\n\t\tif (isLogedIn) {\n\t\t\tsetUpdatePath(`/blogupdate/${id}/${writer}`);\n\t\t\tif (user != null) {\n\t\t\t\tif (user.userID != userID) {\n\t\t\t\t\tsetShowEditButton(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetShowEditButton(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetShowEditButton(false)\n\t\t\t}\n\t\t}\n\t\telse setUpdatePath(`/blogupdate/${id}/${userID}`);\n\t}, [])\n\n\t//Decision of showing arrow in the pictures\n\tif (imagePathArray.length > 1) carousel_control_indicators = true;\n\telse carousel_control_indicators = false;\n\n\t// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\n\tif (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));\n\telse if (updatedAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy (Edited)', new Date(props.updatedAt));\n\telse if (createdAt === updatedAt) blog_date = createdAt;\n\telse blog_date = updatedAt + ' (Edited)';\n\n\treturn (\n\t\t<div>\n\t\t\t<Card key={id} className=\"readBlogList_eachCard\" style={{ width: '100%' }}>\n\t\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators={carousel_control_indicators}>\n\t\t\t\t\t{\n\t\t\t\t\t\timagePathArray.map((data) => {\n\t\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue + 1;\n\t\t\t\t\t\t\t// If user doesn't add any image, show the No_Image.jpg\n\t\t\t\t\t\t\tif (imagePathArray[0] === \"\") {\n\t\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse image_path = data;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Carousel.Item key={ReadBlogList_keyValue}>\n\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\n\t\t\t\t\t\t\t\t\t\tsrc={image_path}\n\t\t\t\t\t\t\t\t\t\talt='BlogImages'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Carousel.Item>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</Carousel>\n\t\t\t\t<Card.Body >\n\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Card.Title>\n\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</Card.Text>\n\t\t\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\n\t\t\t\t</Card.Body>\n\t\t\t\t<Card.Footer>\n\n\t\t\t\t\t<BlogComments id={id} />\n\t\t\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title>Delete it ?</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body> Delete this comment, permanently ?</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t\t\t\t\t\tCancel\n          \t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"primary\" href={`/bloglist/delete/${id}/${writer}`} key={id}>\n\t\t\t\t\t\t\t\tDelete\n          \t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Modal>\n\n\t\t\t\t\t{showEditButton ?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Button className=\"ReadBlogList_update_button\" variant=\"light\" href={updatePath} key={id}>Edit</Button>\n\t\t\t\t\t\t\t<Button className=\"ReadBlogList_delete_button\" variant=\"light\" onClick={handleShow} key={id}>Delete</Button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t</Card.Footer>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}