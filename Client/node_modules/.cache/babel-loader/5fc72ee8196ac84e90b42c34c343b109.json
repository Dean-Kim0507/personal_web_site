{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/Blog.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let [data, setData] = useState(null);\n  let donwloadedData = '';\n  let imagePaths;\n  let writer;\n  let title;\n  let desc;\n  let splittedImagePaths;\n  let allBlogs = [];\n  let [showAllBlogs, setShowAllBlogs] = useState(null);\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(response => {\n      donwloadedData = response.data;\n      console.log(donwloadedData);\n\n      for (let i = 0; i < donwloadedData.length; i++) {\n        writer = donwloadedData[i].writer;\n        title = donwloadedData[i].title;\n        desc = donwloadedData[i].desc;\n        imagePaths = donwloadedData[i].imagePaths;\n\n        if (imagePaths != null) {\n          splittedImagePaths = imagePaths.split(',');\n\n          for (let a = 0; a < splittedImagePaths.length; a++) {\n            splittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length);\n            splittedImagePaths[a] = '../..' + splittedImagePaths[a];\n            console.log(splittedImagePaths[a]);\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, allBlogs, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/BlogList.js"],"names":["React","useState","useEffect","Carousel","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","ReadBlogList","BlogList","props","data","setData","donwloadedData","imagePaths","writer","title","desc","splittedImagePaths","allBlogs","showAllBlogs","setShowAllBlogs","res","post","then","response","console","log","i","length","split","a","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,WAA5D,QAA8E,iBAA9E;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACvB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAmBd,QAAQ,CAAC,IAAD,CAA/B;AAEA,MAAIe,cAAc,GAAC,EAAnB;AACA,MAAIC,UAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,kBAAJ;AACA,MAAIC,QAAQ,GAAC,EAAb;AAEA,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,IAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMuB,GAAG,GAAIf,KAAK,CAACgB,IAAN,CAAW,YAAX,EACZC,IADY,CACNC,QAAQ,IAAI;AAClBZ,MAAAA,cAAc,GAAGY,QAAQ,CAACd,IAA1B;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYd,cAAZ;;AAEA,WAAI,IAAIe,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACf,cAAc,CAACgB,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAE5Cb,QAAAA,MAAM,GAAGF,cAAc,CAACe,CAAD,CAAd,CAAkBb,MAA3B;AACAC,QAAAA,KAAK,GAAGH,cAAc,CAACe,CAAD,CAAd,CAAkBZ,KAA1B;AACAC,QAAAA,IAAI,GAAGJ,cAAc,CAACe,CAAD,CAAd,CAAkBX,IAAzB;AACAH,QAAAA,UAAU,GAAGD,cAAc,CAACe,CAAD,CAAd,CAAkBd,UAA/B;;AAEA,YAAGA,UAAU,IAAI,IAAjB,EAAsB;AACnBI,UAAAA,kBAAkB,GAAGJ,UAAU,CAACgB,KAAX,CAAiB,GAAjB,CAArB;;AACF,eAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGb,kBAAkB,CAACW,MAArC,EAA6CE,CAAC,EAA9C,EAAiD;AAChDb,YAAAA,kBAAkB,CAACa,CAAD,CAAlB,GAAwBb,kBAAkB,CAACa,CAAD,CAAlB,CAAsBC,SAAtB,CAAgC,CAAhC,EAAmCd,kBAAkB,CAACa,CAAD,CAAlB,CAAsBF,MAAzD,CAAxB;AACAX,YAAAA,kBAAkB,CAACa,CAAD,CAAlB,GAAwB,UAAQb,kBAAkB,CAACa,CAAD,CAAlD;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAkB,CAACa,CAAD,CAA9B;AACA;AACA;AACD;AACD,KArBY,CAAb;AAsBA,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,QADF,eAGC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AASA;;AAED,eAAeV,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns} from 'react-bootstrap';\r\nimport '../css/Blog.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props){\r\n\tlet [data, setData] =  useState(null);\r\n\r\n\tlet donwloadedData='';\r\n\tlet imagePaths;\r\n\tlet writer;\r\n\tlet title;\r\n\tlet desc;\r\n\tlet splittedImagePaths\r\n\tlet allBlogs=[];\r\n\r\n\tlet [showAllBlogs, setShowAllBlogs] = useState(null);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst res =  axios.post(\"/blog/list\")\r\n\t\t.then (response => {\r\n\t\t\tdonwloadedData = response.data;\r\n\t\t\tconsole.log(donwloadedData);\r\n\t\t\t\r\n\t\t\tfor(let i = 0; i<donwloadedData.length; i++){\r\n\t\t\t\r\n\t\t\twriter = donwloadedData[i].writer;\r\n\t\t\ttitle = donwloadedData[i].title;\r\n\t\t\tdesc = donwloadedData[i].desc;\r\n\t\t\timagePaths = donwloadedData[i].imagePaths;\r\n\r\n\t\t\tif(imagePaths != null){\r\n\t\t\t\t  splittedImagePaths = imagePaths.split(',');\r\n\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length);\r\n\t\t\t\t\tsplittedImagePaths[a] = '../..'+splittedImagePaths[a];\r\n\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<div className=\"blog\">\r\n\t\t\t{allBlogs}\r\n\t\t\t\r\n\t\t\t<Button variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}