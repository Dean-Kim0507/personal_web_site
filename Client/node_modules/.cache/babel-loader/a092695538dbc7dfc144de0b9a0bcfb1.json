{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\UpdateBlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\nimport { Form } from 'react-bootstrap';\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UpdateBlogList(props) {\n  const [pictures, setPictures] = useState([]);\n  const [imgUploader, setImgUploader] = useState(false);\n  const [imgButton, setImgButton] = useState(true);\n\n  const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n\n  let [retrievedData, setRetrievedData] = useState(null);\n  let [title, setTitle] = useState('Ddd');\n  const formData = new FormData();\n  let temp_data;\n  let info = {\n    id: props.match.params.id,\n    writer: props.match.params.author\n  };\n  let history = useHistory();\n  let splittedImagePaths = [];\n  let _uploadResult = '';\n  let errNum;\n  let errPage;\n  useEffect(() => {\n    axios.post(\"/blog/retrieveblog\", info).then(response => {\n      temp_data = response.data;\n\n      if (temp_data != null) {\n        splittedImagePaths = temp_data.imagespath.split(',');\n\n        for (let a = 0; a < splittedImagePaths.length; a++) {\n          splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n        }\n\n        temp_data.imagespath = splittedImagePaths;\n      }\n\n      console.log(temp_data);\n      setRetrievedData(temp_data);\n    });\n  }, []);\n\n  const showImgUploader = () => {\n    setImgUploader(true);\n    setImgButton(false);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    formData.append('id', retrievedData.id);\n    formData.append('writer', e.target.writer.value);\n    formData.append('title', e.target.title.value);\n    formData.append('desc', e.target.desc.value); //The case, user update Image in blog\n\n    if (pictures.length > 0) {\n      for (let i = 0; i < pictures[pictures.length - 1].length; i++) {\n        formData.append('images', pictures[pictures.length - 1][i]);\n      }\n\n      formData.append('mode', 'update_images');\n    } //The case, user update without image\n    else if (pictures.length === 0 && imgUploader) {\n        formData.append('mode', 'update_nonImages');\n      } // The case, user just want to update text info\n      else formData.append('mode', 'update_text');\n\n    console.log(formData);\n    await axios.post(\"/blog/update\", formData).then(response => {\n      _uploadResult = response.data;\n      if (_uploadResult === 'Upload success') history.push('/bloglist');else {\n        errNum = '100';\n        errPage = 'UpdateBlogList.js';\n        history.push(`/errorpage/${errNum}/${errPage}`);\n      }\n    }).catch(function (error) {\n      errNum = '101';\n      errPage = 'UpdateBlogList.js';\n      history.push(`/errorpage/${errNum}/${errPage}`);\n      console.log(error);\n    });\n  };\n\n  async function handleChange(event) {\n    // let temp_retrievedData = retrievedData;\n    // let targetName = event.target.name;\n    // console.log();\n    // temp_retrievedData.title = event.target.value;\n    // setRetrievedData(temp_retrievedData);\n    setTitle(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"updateBlogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    encType: \"multipart/form-data\" // send the images to Backend Node js express\n    ,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }, retrievedData && /*#__PURE__*/React.createElement(React.Fragment, null, console.log('return: ' + retrievedData.title), console.log('return: ' + temp_data), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"TITLE\",\n    value: title,\n    onChange: setTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 8\n    }\n  }, \"Writer\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"writer\",\n    placeholder: \"NAME\",\n    value: retrievedData.writer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }\n  }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"desc\",\n    placeholder: \"TEXT\",\n    value: retrievedData.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  }))), imgButton ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: showImgUploader,\n    size: \"lg\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"Update Image\") : null, imgUploader ? /*#__PURE__*/React.createElement(ImageUploader, Object.assign({\n    name: \"imageUploader\"\n  }, props, {\n    withIcon: true,\n    onChange: onDrop,\n    imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n    maxFileSize: 5242880,\n    withPreview: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  })) : null, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n}\n\nexport default UpdateBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/UpdateBlogList.js"],"names":["React","useState","useEffect","axios","Button","FormGroup","Label","Input","Form","ImageUploader","useHistory","UpdateBlogList","props","pictures","setPictures","imgUploader","setImgUploader","imgButton","setImgButton","onDrop","picture","retrievedData","setRetrievedData","title","setTitle","formData","FormData","temp_data","info","id","match","params","writer","author","history","splittedImagePaths","_uploadResult","errNum","errPage","post","then","response","data","imagespath","split","a","length","substring","console","log","showImgUploader","onSubmit","e","preventDefault","append","target","value","desc","i","push","catch","error","handleChange","event","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction UpdateBlogList(props) {\r\n\r\n\tconst [pictures, setPictures] = useState([]);\r\n\tconst [imgUploader, setImgUploader] = useState(false);\r\n\tconst [imgButton, setImgButton] = useState(true);\r\n\tconst onDrop = picture => {\r\n\t\tsetPictures([...pictures, picture]);\r\n\t};\r\n\tlet [retrievedData, setRetrievedData] = useState(null);\r\n\tlet [title, setTitle] = useState('Ddd');\r\n\tconst formData = new FormData();\r\n\tlet temp_data;\r\n\tlet info =\r\n\t{\r\n\t\tid: props.match.params.id,\r\n\t\twriter: props.match.params.author\r\n\t}\r\n\tlet history = useHistory();\r\n\tlet splittedImagePaths = [];\r\n\tlet _uploadResult = '';\r\n\tlet errNum;\r\n\tlet errPage;\r\n\r\n\tuseEffect(() => {\r\n\t\taxios.post(\"/blog/retrieveblog\", info)\r\n\t\t\t.then(response => {\r\n\t\t\t\ttemp_data = response.data;\r\n\t\t\t\tif (temp_data != null) {\r\n\t\t\t\t\tsplittedImagePaths = temp_data.imagespath.split(',');\r\n\t\t\t\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp_data.imagespath = splittedImagePaths;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(temp_data)\r\n\t\t\t\tsetRetrievedData(temp_data)\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\tconst showImgUploader = () => {\r\n\t\tsetImgUploader(true);\r\n\t\tsetImgButton(false);\r\n\t}\r\n\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tformData.append('id', retrievedData.id)\r\n\t\tformData.append('writer', e.target.writer.value);\r\n\t\tformData.append('title', e.target.title.value);\r\n\t\tformData.append('desc', e.target.desc.value);\r\n\t\t//The case, user update Image in blog\r\n\t\tif (pictures.length > 0) {\r\n\t\t\tfor (let i = 0; i < pictures[pictures.length - 1].length; i++) {\r\n\t\t\t\tformData.append('images', pictures[pictures.length - 1][i]);\r\n\t\t\t}\r\n\t\t\tformData.append('mode', 'update_images');\r\n\t\t}\r\n\t\t//The case, user update without image\r\n\t\telse if (pictures.length === 0 && imgUploader) {\r\n\t\t\tformData.append('mode', 'update_nonImages');\r\n\t\t}\r\n\t\t// The case, user just want to update text info\r\n\t\telse formData.append('mode', 'update_text');\r\n\r\n\t\tconsole.log(formData);\r\n\t\tawait axios.post(\"/blog/update\", formData)\r\n\t\t\t.then(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t_uploadResult = response.data;\r\n\t\t\t\t\tif (_uploadResult === 'Upload success') history.push('/bloglist');\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\terrNum = '100';\r\n\t\t\t\t\t\terrPage = 'UpdateBlogList.js'\r\n\t\t\t\t\t\thistory.push(`/errorpage/${errNum}/${errPage}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\terrNum = '101';\r\n\t\t\t\terrPage = 'UpdateBlogList.js'\r\n\t\t\t\thistory.push(`/errorpage/${errNum}/${errPage}`);\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tasync function handleChange(event) {\r\n\t\t// let temp_retrievedData = retrievedData;\r\n\t\t// let targetName = event.target.name;\r\n\t\t// console.log();\r\n\r\n\t\t// temp_retrievedData.title = event.target.value;\r\n\t\t// setRetrievedData(temp_retrievedData);\r\n\t\tsetTitle(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='updateBlogList_whole'>\r\n\t\t\t<form action='' method=\"post\" encType=\"multipart/form-data\"\r\n\t\t\t\t// send the images to Backend Node js express\r\n\t\t\t\tonSubmit={onSubmit}>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tretrievedData &&\r\n\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{console.log('return: ' + retrievedData.title)}\r\n\t\t\t\t\t\t{console.log('return: ' + temp_data)}\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"title\">Title</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"title\" placeholder=\"TITLE\" value={title} onChange={setTitle(event.target.value)} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"writer\">Writer</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"writer\" placeholder=\"NAME\" value={retrievedData.writer} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"desc\">Text Area</Label>\r\n\t\t\t\t\t\t\t<Input type=\"textarea\" name=\"desc\" placeholder=\"TEXT\" value={retrievedData.description} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t{/* <FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"title\">Title</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"title\" placeholder=\"TITLE\" value={retrievedData.title} contentEditable />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"writer\">Writer</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"writer\" placeholder=\"NAME\" value={retrievedData.writer} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"desc\">Text Area</Label>\r\n\t\t\t\t\t\t\t<Input type=\"textarea\" name=\"desc\" placeholder=\"TEXT\" value={retrievedData.description} />\r\n\t\t\t\t\t\t</FormGroup> */}\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\timgButton ?\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={showImgUploader} size=\"lg\" block>\r\n\t\t\t\t\t\t\tUpdate Image\r\n  \t\t\t\t\t</Button>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\timgUploader ?\r\n\t\t\t\t\t\t<ImageUploader\r\n\t\t\t\t\t\t\tname=\"imageUploader\"\r\n\t\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\t\twithIcon={true}\r\n\t\t\t\t\t\t\tonChange={onDrop}\r\n\t\t\t\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n\t\t\t\t\t\t\tmaxFileSize={5242880}\r\n\t\t\t\t\t\t\twithPreview={true}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<Button color=\"primary\" type=\"submit\">Submit</Button>\r\n\t\t\t</form>\r\n\t\t</div >\r\n\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default UpdateBlogList;"]},"metadata":{},"sourceType":"module"}