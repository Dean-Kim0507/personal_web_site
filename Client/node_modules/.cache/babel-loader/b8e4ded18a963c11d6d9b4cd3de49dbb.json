{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\ReadBlogList.jsx\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Carousel, Image, Button, Modal } from 'react-bootstrap';\nimport BlogComments from './BlogComments';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction ReadBlogList(props) {\n  const id = props.id;\n  const title = props.title;\n  const desc = props.desc;\n  const writer = props.writer;\n  const userID = props.userID;\n  const isLogedIn = props.isLogedIn;\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [show, setShow] = useState(false);\n  const [showEditButton, setShowEditButton] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const format = require('date-format');\n\n  let imagePathArray = props.imagePathArray;\n  let createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n  let updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n  let blog_date;\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n  let ReadBlogList_keyValue = -1;\n  let carousel_control_indicators = true;\n  let image_path;\n  let updatePath;\n  console.log('userID: ', userID);\n\n  if (isLogedIn) {\n    updatePath = `/blogupdate/${id}/${writer}`;\n\n    if (user != null) {\n      if (user.userID != userID) {\n        setShowEditButton(true);\n      }\n    } else {\n      setShowEditButton(false);\n    }\n  } else updatePath = `/blogupdate/${id}/${userID}`; //Decision of showing arrow in the pictures\n\n\n  if (imagePathArray.length > 1) carousel_control_indicators = true;else carousel_control_indicators = false; // Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\n\n  if (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));else if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));else if (createdAt === updatedAt) blog_date = createdAt;else blog_date = '(updated) ' + updatedAt;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    className: \"readBlogList_eachCard\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    controls: carousel_control_indicators,\n    indicators: carousel_control_indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, imagePathArray.map(data => {\n    ReadBlogList_keyValue = ReadBlogList_keyValue + 1; // If user doesn't add any image, show the No_Image.jpg\n\n    if (imagePathArray[0] === \"\") {\n      image_path = \"/uploadImages/No_Image.jpg\";\n    } else image_path = data;\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: ReadBlogList_keyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: \"readBlogList_blogImages\",\n      src: image_path,\n      alt: \"BlogImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, desc), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, \"Date: \", blog_date)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BlogComments, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }\n  }, \"Delete it ?\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \" Delete this comment, permanently ?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: `/bloglist/delete/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_delete_button\",\n    variant: \"light\",\n    onClick: handleShow,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, \"Delete\"), showEditButton ? /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_update_button\",\n    variant: \"light\",\n    href: updatePath,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Edit\") : null)));\n}\n\nexport default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.jsx"],"names":["React","useState","useEffect","Card","Carousel","Image","Button","Modal","BlogComments","useDispatch","useSelector","ReadBlogList","props","id","title","desc","writer","userID","isLogedIn","isLoggedIn","user","state","auth","message","show","setShow","showEditButton","setShowEditButton","handleClose","handleShow","format","require","imagePathArray","createdAt","asString","Date","updatedAt","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","updatePath","console","log","length","width","map","data"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Carousel, Image, Button, Modal } from 'react-bootstrap';\r\nimport BlogComments from './BlogComments'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction ReadBlogList(props) {\r\n\tconst id = props.id;\r\n\tconst title = props.title;\r\n\tconst desc = props.desc;\r\n\tconst writer = props.writer;\r\n\tconst userID = props.userID;\r\n\tconst isLogedIn = props.isLogedIn;\r\n\tconst { isLoggedIn, user } = useSelector(state => state.auth);\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [showEditButton, setShowEditButton] = useState(false);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst format = require('date-format');\r\n\tlet imagePathArray = props.imagePathArray;\r\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\r\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\r\n\tlet blog_date;\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\tlet ReadBlogList_keyValue = -1;\r\n\tlet carousel_control_indicators = true\r\n\tlet image_path;\r\n\tlet updatePath;\r\n\tconsole.log('userID: ', userID)\r\n\r\n\tif (isLogedIn) {\r\n\t\tupdatePath = `/blogupdate/${id}/${writer}`;\r\n\t\tif (user != null) {\r\n\t\t\tif (user.userID != userID) {\r\n\t\t\t\tsetShowEditButton(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowEditButton(false)\r\n\t\t}\r\n\t}\r\n\telse updatePath = `/blogupdate/${id}/${userID}`\r\n\r\n\t//Decision of showing arrow in the pictures\r\n\tif (imagePathArray.length > 1) carousel_control_indicators = true;\r\n\telse carousel_control_indicators = false;\r\n\r\n\t// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\r\n\tif (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));\r\n\telse if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));\r\n\telse if (createdAt === updatedAt) blog_date = createdAt;\r\n\telse blog_date = '(updated) ' + updatedAt;\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card key={id} className=\"readBlogList_eachCard\" style={{ width: '100%' }}>\r\n\t\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators={carousel_control_indicators}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timagePathArray.map((data) => {\r\n\t\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue + 1;\r\n\t\t\t\t\t\t\t// If user doesn't add any image, show the No_Image.jpg\r\n\t\t\t\t\t\t\tif (imagePathArray[0] === \"\") {\r\n\t\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse image_path = data;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Carousel.Item key={ReadBlogList_keyValue}>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={image_path}\r\n\t\t\t\t\t\t\t\t\t\talt='BlogImages'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<Card.Body >\r\n\t\t\t\t\t<Card.Title>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer>\r\n\r\n\t\t\t\t\t<BlogComments id={id} />\r\n\t\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete it ?</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body> Delete this comment, permanently ?</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\t\t\tCancel\r\n          \t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" href={`/bloglist/delete/${id}/${writer}`} key={id}>\r\n\t\t\t\t\t\t\t\tDelete\r\n          \t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t<Button className=\"ReadBlogList_delete_button\" variant=\"light\" onClick={handleShow} key={id}>Delete</Button>\r\n\t\t\t\t\t{showEditButton ?\r\n\t\t\t\t\t\t<Button className=\"ReadBlogList_update_button\" variant=\"light\" href={updatePath} key={id}>Edit</Button>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}