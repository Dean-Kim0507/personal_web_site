{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogList.jsx\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n * \r\n * This page shows the bloglist by using modal in bootstrap.\r\n * modal get the card that is included images and blog information from the Read Blog List.\r\n * user can click the thumbnails that's the first picture of pictures, user upladed\r\n * If user didn't upload any image, No Image file will be uploaded\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Card, CardColumns, Badge, Image } from 'react-bootstrap';\nimport '../css/BlogList.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UNAUTHORIZED } from \"./type\";\nimport { SET_MESSAGE } from \"../Actions/types\";\n\nconst format = require('date-format');\n\nfunction BlogList(props) {\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState(null);\n  const [images, setImages] = useState(null);\n  const [addBlogShow, setAddBlogShow] = useState(null);\n  const basicProfileImgPath = \"./uploadImages/icon/img_user.jpg\";\n  const IMG_WIDTH = 35;\n  const IMG_LENGTH = 40;\n  let history = useHistory();\n  let splittedImagePaths;\n  let splittedImagePaths_preview;\n  let temp_allBlogs = [];\n  let [allBlogs, setAllBlogs] = useState([]);\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n\n  const handleClose = () => setShow(false);\n\n  const handleAddBlogClose = () => setAddBlogShow(false);\n\n  useEffect(() => {\n    if (message == UNAUTHORIZED) {\n      dispatch({\n        type: SET_MESSAGE,\n        payload: null\n      });\n      history.push('/login');\n    }\n  }, [message]); // When user select the thumbnail, that function will be worked for retrieving the selected blog,\n\n  const handleShow = data => {\n    setShow(true);\n    setData(data); //If over two images, it splits the images' paths\n\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    setImages(splittedImagePaths);\n  }; //Integreate two object (blog information, blog comments)\n\n\n  useEffect(() => {\n    axios.post(\"/blog/list\").then(response => {\n      console.log(response.data); //to show current blog at the first.\n\n      for (let i = response.data.length - 1; i >= 0; i--) {\n        let temp_data = {\n          id: Number,\n          writer: String,\n          title: String,\n          desc: String,\n          userID: String,\n          isLogedIn: Boolean,\n          imagePaths: String,\n          createdAt: String,\n          updatedAt: String,\n          userImg: String\n        };\n        temp_data.id = Number.parseInt(response.data[i].id);\n        temp_data.writer = response.data[i].writer;\n        temp_data.title = response.data[i].title;\n        temp_data.desc = response.data[i].desc;\n        temp_data.userID = response.data[i].userID;\n        temp_data.isLogedIn = response.data[i].isLogedIn;\n        temp_data.imagePaths = response.data[i].imagePaths;\n        temp_data.createdAt = response.data[i].createdAt;\n        temp_data.updatedAt = response.data[i].updatedAt;\n\n        if (response.data[i].userImg) {\n          temp_data.userImg = response.data[i].userImg.substring(16, response.data[i].userImg.length);\n        } else temp_data.userImg = basicProfileImgPath;\n\n        temp_allBlogs.push(temp_data);\n      }\n\n      setAllBlogs(temp_allBlogs);\n    });\n  }, []);\n  console.log(temp_allBlogs);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"blogList_addBlog_button\",\n    variant: \"primary\",\n    onClick: setAddBlogShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: addBlogShow,\n    onHide: handleAddBlogClose,\n    className: \"blogList_addBlogModal\",\n    centered: true,\n    size: 'sm',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, allBlogs.map(data => {\n    splittedImagePaths_preview = data.imagePaths.split(',');\n    splittedImagePaths_preview[0] = splittedImagePaths_preview[0].substring(16, splittedImagePaths_preview[0].length);\n    console.log(splittedImagePaths_preview[0]);\n    if (splittedImagePaths_preview[0] === \"\") splittedImagePaths_preview[0] = \"/uploadImages/No_Image.jpg\";\n    return splittedImagePaths_preview[0] && /*#__PURE__*/React.createElement(Card, {\n      className: \"blogList_thumbnail\",\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }\n    }, data.title, format.asString('MM-dd-yyyy', new Date(data.createdAt)) === nowDate ? /*#__PURE__*/React.createElement(Badge, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"New\") : null), /*#__PURE__*/React.createElement(Card.Img, {\n      alt: \"171x180\",\n      src: splittedImagePaths_preview[0],\n      onClick: () => handleShow(data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 10\n      }\n    }));\n  })), data && /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    className: \"blogList_modal\",\n    centered: true,\n    size: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, data.isLogedIn ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Image, {\n    className: \"blogList_userProfileImages\",\n    src: data.userImg,\n    width: IMG_WIDTH,\n    height: IMG_LENGTH,\n    alt: \"45x50\",\n    roundedCircle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, data.userID)) : data.writer), /*#__PURE__*/React.createElement(ReadBlogList, {\n    id: data.id,\n    writer: data.writer,\n    userID: data.userID,\n    title: data.title,\n    desc: data.desc,\n    imagePathArray: images,\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt,\n    isLogedIn: data.isLogedIn,\n    className: \"blogList_detailedBlog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogList.jsx"],"names":["React","useState","useEffect","Modal","Button","Card","CardColumns","Badge","Image","axios","ReadBlogList","useHistory","useDispatch","useSelector","UNAUTHORIZED","SET_MESSAGE","format","require","BlogList","props","message","state","dispatch","show","setShow","data","setData","images","setImages","addBlogShow","setAddBlogShow","basicProfileImgPath","IMG_WIDTH","IMG_LENGTH","history","splittedImagePaths","splittedImagePaths_preview","temp_allBlogs","allBlogs","setAllBlogs","nowDate","asString","Date","handleClose","handleAddBlogClose","type","payload","push","handleShow","imagePaths","split","a","length","substring","console","log","post","then","response","i","temp_data","id","Number","writer","String","title","desc","userID","isLogedIn","Boolean","createdAt","updatedAt","userImg","parseInt","map"],"mappings":";;AAAA;;;;;;;;;;;;;AAaA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,WAA9B,EAA2CC,KAA3C,EAAkDC,KAAlD,QAA+D,iBAA/D;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACCC,YADD,QAEO,QAFP;AAGA,SACCC,WADD,QAEO,kBAFP;;AAGA,MAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA/B;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAC0B,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM8B,mBAAmB,GAAG,kCAA5B;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAGvB,UAAU,EAAxB;AACA,MAAIwB,kBAAJ;AACA,MAAIC,0BAAJ;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BtC,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAIuC,OAAO,GAAGxB,MAAM,CAACyB,QAAP,CAAgB,YAAhB,EAA8B,IAAIC,IAAJ,EAA9B,CAAd;;AAEA,QAAMC,WAAW,GAAG,MAAMnB,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMoB,kBAAkB,GAAG,MAAMd,cAAc,CAAC,KAAD,CAA/C;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,OAAO,IAAIN,YAAf,EAA6B;AAC5BQ,MAAAA,QAAQ,CAAC;AACRuB,QAAAA,IAAI,EAAE9B,WADE;AAER+B,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAR;AAIAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACA;AACD,GARQ,EAQN,CAAC3B,OAAD,CARM,CAAT,CAnBwB,CA4BxB;;AACA,QAAM4B,UAAU,GAAIvB,IAAD,IAAU;AAC5BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,OAAO,CAACD,IAAD,CAAP,CAF4B,CAI5B;;AACAU,IAAAA,kBAAkB,GAAGV,IAAI,CAACwB,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,kBAAkB,CAACiB,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnDhB,MAAAA,kBAAkB,CAACgB,CAAD,CAAlB,GAAwBhB,kBAAkB,CAACgB,CAAD,CAAlB,CAAsBE,SAAtB,CAAgC,EAAhC,EAAoClB,kBAAkB,CAACgB,CAAD,CAAlB,CAAsBC,MAA1D,CAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYpB,kBAAkB,CAACgB,CAAD,CAA9B;AACA;;AACDvB,IAAAA,SAAS,CAACO,kBAAD,CAAT;AACA,GAXD,CA7BwB,CAyCxB;;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,KAAK,CAAC+C,IAAN,CAAW,YAAX,EACEC,IADF,CACOC,QAAQ,IAAI;AACjBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACjC,IAArB,EADiB,CAEjB;;AACA,WAAK,IAAIkC,CAAC,GAAGD,QAAQ,CAACjC,IAAT,CAAc2B,MAAd,GAAuB,CAApC,EAAuCO,CAAC,IAAI,CAA5C,EAA+CA,CAAC,EAAhD,EAAoD;AACnD,YAAIC,SAAS,GAAG;AACfC,UAAAA,EAAE,EAAEC,MADW;AAEfC,UAAAA,MAAM,EAAEC,MAFO;AAGfC,UAAAA,KAAK,EAAED,MAHQ;AAIfE,UAAAA,IAAI,EAAEF,MAJS;AAKfG,UAAAA,MAAM,EAAEH,MALO;AAMfI,UAAAA,SAAS,EAAEC,OANI;AAOfpB,UAAAA,UAAU,EAAEe,MAPG;AAQfM,UAAAA,SAAS,EAAEN,MARI;AASfO,UAAAA,SAAS,EAAEP,MATI;AAUfQ,UAAAA,OAAO,EAAER;AAVM,SAAhB;AAYAJ,QAAAA,SAAS,CAACC,EAAV,GAAeC,MAAM,CAACW,QAAP,CAAgBf,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBE,EAAjC,CAAf;AACAD,QAAAA,SAAS,CAACG,MAAV,GAAmBL,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBI,MAApC;AACAH,QAAAA,SAAS,CAACK,KAAV,GAAkBP,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBM,KAAnC;AACAL,QAAAA,SAAS,CAACM,IAAV,GAAiBR,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBO,IAAlC;AACAN,QAAAA,SAAS,CAACO,MAAV,GAAmBT,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBQ,MAApC;AACAP,QAAAA,SAAS,CAACQ,SAAV,GAAsBV,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBS,SAAvC;AACAR,QAAAA,SAAS,CAACX,UAAV,GAAuBS,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBV,UAAxC;AACAW,QAAAA,SAAS,CAACU,SAAV,GAAsBZ,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBW,SAAvC;AACAV,QAAAA,SAAS,CAACW,SAAV,GAAsBb,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBY,SAAvC;;AACA,YAAIb,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBa,OAArB,EAA8B;AAC7BZ,UAAAA,SAAS,CAACY,OAAV,GAAoBd,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBa,OAAjB,CAAyBnB,SAAzB,CAAmC,EAAnC,EAAuCK,QAAQ,CAACjC,IAAT,CAAckC,CAAd,EAAiBa,OAAjB,CAAyBpB,MAAhE,CAApB;AACA,SAFD,MAEOQ,SAAS,CAACY,OAAV,GAAoBzC,mBAApB;;AACPM,QAAAA,aAAa,CAACU,IAAd,CAAmBa,SAAnB;AACA;;AACDrB,MAAAA,WAAW,CAACF,aAAD,CAAX;AACA,KAhCF;AAiCA,GAlCQ,EAkCN,EAlCM,CAAT;AAmCAiB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,aAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAEP,cAAc,CAAC,IAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAE,KAAF;AAAQ,IAAA,IAAI,EAAED,WAAd;AAA2B,IAAA,MAAM,EAAEe,kBAAnC;AAAuD,IAAA,SAAS,EAAC,uBAAjE;AACC,IAAA,QAAQ,EAAE,IADX;AACiB,IAAA,IAAI,EAAE,IADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAOC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEN,QAAQ,CAACoC,GAAT,CAAcjD,IAAD,IAAU;AACtBW,IAAAA,0BAA0B,GAAGX,IAAI,CAACwB,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,CAA7B;AACAd,IAAAA,0BAA0B,CAAC,CAAD,CAA1B,GAAgCA,0BAA0B,CAAC,CAAD,CAA1B,CAA8BiB,SAA9B,CAAwC,EAAxC,EAA4CjB,0BAA0B,CAAC,CAAD,CAA1B,CAA8BgB,MAA1E,CAAhC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,0BAA0B,CAAC,CAAD,CAAtC;AACA,QAAIA,0BAA0B,CAAC,CAAD,CAA1B,KAAkC,EAAtC,EAA0CA,0BAA0B,CAAC,CAAD,CAA1B,GAAgC,4BAAhC;AAE1C,WACCA,0BAA0B,CAAC,CAAD,CAA1B,iBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,GAAG,EAAEX,IAAI,CAACoC,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEpC,IAAI,CAACwC,KADP,EAGEjD,MAAM,CAACyB,QAAP,CAAgB,YAAhB,EAA8B,IAAIC,IAAJ,CAASjB,IAAI,CAAC6C,SAAd,CAA9B,MAA4D9B,OAA5D,gBACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,GAEG,IALL,CADD,eASC,oBAAC,IAAD,CAAM,GAAN;AACC,MAAA,GAAG,EAAC,SADL;AAEC,MAAA,GAAG,EAAEJ,0BAA0B,CAAC,CAAD,CAFhC;AAGC,MAAA,OAAO,EAAE,MAAMY,UAAU,CAACvB,IAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CAFD;AAkBA,GAxBD,CAFF,CADD,EA+BEA,IAAI,iBACJ,oBAAE,KAAF;AAAQ,IAAA,IAAI,EAAEF,IAAd;AAAoB,IAAA,MAAM,EAAEoB,WAA5B;AAAyC,IAAA,SAAS,EAAC,gBAAnD;AACC,IAAA,QAAQ,EAAE,IADX;AACiB,IAAA,IAAI,EAAE,IADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGC,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACClB,IAAI,CAAC2C,SAAL,gBACC,uDACC,oBAAC,KAAD;AACC,IAAA,SAAS,EAAC,4BADX;AAEC,IAAA,GAAG,EAAE3C,IAAI,CAAC+C,OAFX;AAGC,IAAA,KAAK,EAAExC,SAHR;AAIC,IAAA,MAAM,EAAEC,UAJT;AAKC,IAAA,GAAG,EAAC,OALL;AAMC,IAAA,aAAa,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,IAAI,CAAC0C,MAAV,CATF,CADD,GAYG1C,IAAI,CAACsC,MAbT,CAHD,eAkBC,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEtC,IAAI,CAACoC,EAAvB;AACC,IAAA,MAAM,EAAEpC,IAAI,CAACsC,MADd;AAEC,IAAA,MAAM,EAAEtC,IAAI,CAAC0C,MAFd;AAGC,IAAA,KAAK,EAAE1C,IAAI,CAACwC,KAHb;AAIC,IAAA,IAAI,EAAExC,IAAI,CAACyC,IAJZ;AAKC,IAAA,cAAc,EAAEvC,MALjB;AAMC,IAAA,SAAS,EAAEF,IAAI,CAAC6C,SANjB;AAOC,IAAA,SAAS,EAAE7C,IAAI,CAAC8C,SAPjB;AAQC,IAAA,SAAS,EAAE9C,IAAI,CAAC2C,SARjB;AASC,IAAA,SAAS,EAAC,uBATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBD,CAhCF,CAPD,CADD;AA2EA;;AAED,eAAelD,QAAf","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n * \r\n * This page shows the bloglist by using modal in bootstrap.\r\n * modal get the card that is included images and blog information from the Read Blog List.\r\n * user can click the thumbnails that's the first picture of pictures, user upladed\r\n * If user didn't upload any image, No Image file will be uploaded\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Card, CardColumns, Badge, Image } from 'react-bootstrap';\r\nimport '../css/BlogList.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tUNAUTHORIZED\r\n} from \"./type\";\r\nimport {\r\n\tSET_MESSAGE\r\n} from \"../Actions/types\";\r\nconst format = require('date-format');\r\nfunction BlogList(props) {\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [data, setData] = useState(null);\r\n\tconst [images, setImages] = useState(null);\r\n\tconst [addBlogShow, setAddBlogShow] = useState(null);\r\n\tconst basicProfileImgPath = \"./uploadImages/icon/img_user.jpg\";\r\n\tconst IMG_WIDTH = 35;\r\n\tconst IMG_LENGTH = 40;\r\n\tlet history = useHistory();\r\n\tlet splittedImagePaths;\r\n\tlet splittedImagePaths_preview;\r\n\tlet temp_allBlogs = [];\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleAddBlogClose = () => setAddBlogShow(false);\r\n\tuseEffect(() => {\r\n\t\tif (message == UNAUTHORIZED) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SET_MESSAGE,\r\n\t\t\t\tpayload: null,\r\n\t\t\t});\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t}, [message])\r\n\t// When user select the thumbnail, that function will be worked for retrieving the selected blog,\r\n\tconst handleShow = (data) => {\r\n\t\tsetShow(true);\r\n\t\tsetData(data);\r\n\r\n\t\t//If over two images, it splits the images' paths\r\n\t\tsplittedImagePaths = data.imagePaths.split(',');\r\n\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t}\r\n\t\tsetImages(splittedImagePaths);\r\n\t}\r\n\t//Integreate two object (blog information, blog comments)\r\n\tuseEffect(() => {\r\n\t\taxios.post(\"/blog/list\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t//to show current blog at the first.\r\n\t\t\t\tfor (let i = response.data.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet temp_data = {\r\n\t\t\t\t\t\tid: Number,\r\n\t\t\t\t\t\twriter: String,\r\n\t\t\t\t\t\ttitle: String,\r\n\t\t\t\t\t\tdesc: String,\r\n\t\t\t\t\t\tuserID: String,\r\n\t\t\t\t\t\tisLogedIn: Boolean,\r\n\t\t\t\t\t\timagePaths: String,\r\n\t\t\t\t\t\tcreatedAt: String,\r\n\t\t\t\t\t\tupdatedAt: String,\r\n\t\t\t\t\t\tuserImg: String\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp_data.id = Number.parseInt(response.data[i].id);\r\n\t\t\t\t\ttemp_data.writer = response.data[i].writer;\r\n\t\t\t\t\ttemp_data.title = response.data[i].title;\r\n\t\t\t\t\ttemp_data.desc = response.data[i].desc;\r\n\t\t\t\t\ttemp_data.userID = response.data[i].userID;\r\n\t\t\t\t\ttemp_data.isLogedIn = response.data[i].isLogedIn;\r\n\t\t\t\t\ttemp_data.imagePaths = response.data[i].imagePaths;\r\n\t\t\t\t\ttemp_data.createdAt = response.data[i].createdAt;\r\n\t\t\t\t\ttemp_data.updatedAt = response.data[i].updatedAt;\r\n\t\t\t\t\tif (response.data[i].userImg) {\r\n\t\t\t\t\t\ttemp_data.userImg = response.data[i].userImg.substring(16, response.data[i].userImg.length);\r\n\t\t\t\t\t} else temp_data.userImg = basicProfileImgPath;\r\n\t\t\t\t\ttemp_allBlogs.push(temp_data);\r\n\t\t\t\t}\r\n\t\t\t\tsetAllBlogs(temp_allBlogs);\r\n\t\t\t})\r\n\t}, []);\r\n\tconsole.log(temp_allBlogs)\r\n\treturn (\r\n\t\t<div className=\"blogList_whole\">\r\n\t\t\t<Button className=\"blogList_addBlog_button\" variant=\"primary\" onClick={setAddBlogShow(true)}>Add Blog</Button>\r\n\t\t\t<hr />\r\n\t\t\t< Modal show={addBlogShow} onHide={handleAddBlogClose} className=\"blogList_addBlogModal\"\r\n\t\t\t\tcentered={true} size={'sm'}\r\n\t\t\t>\r\n\t\t\t</Modal>\r\n\t\t\t<div className=\"blogList_list\">\r\n\t\t\t\t<CardColumns>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tallBlogs.map((data) => {\r\n\t\t\t\t\t\t\tsplittedImagePaths_preview = data.imagePaths.split(',');\r\n\t\t\t\t\t\t\tsplittedImagePaths_preview[0] = splittedImagePaths_preview[0].substring(16, splittedImagePaths_preview[0].length);\r\n\t\t\t\t\t\t\tconsole.log(splittedImagePaths_preview[0])\r\n\t\t\t\t\t\t\tif (splittedImagePaths_preview[0] === \"\") splittedImagePaths_preview[0] = \"/uploadImages/No_Image.jpg\";\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tsplittedImagePaths_preview[0] &&\r\n\t\t\t\t\t\t\t\t<Card className=\"blogList_thumbnail\" key={data.id}>\r\n\t\t\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t\t\t{data.title}\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tformat.asString('MM-dd-yyyy', new Date(data.createdAt)) === nowDate ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Badge variant=\"secondary\">New</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Img\r\n\t\t\t\t\t\t\t\t\t\talt=\"171x180\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={splittedImagePaths_preview[0]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleShow(data)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardColumns>\r\n\r\n\t\t\t\t{data &&\r\n\t\t\t\t\t< Modal show={show} onHide={handleClose} className=\"blogList_modal\"\r\n\t\t\t\t\t\tcentered={true} size={'lg'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Modal.Header closeButton>{\r\n\t\t\t\t\t\t\tdata.isLogedIn ?\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"blogList_userProfileImages\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={data.userImg}\r\n\t\t\t\t\t\t\t\t\t\twidth={IMG_WIDTH}\r\n\t\t\t\t\t\t\t\t\t\theight={IMG_LENGTH}\r\n\t\t\t\t\t\t\t\t\t\talt=\"45x50\"\r\n\t\t\t\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{<h4>{data.userID}</h4>}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t: data.writer\r\n\t\t\t\t\t\t}</Modal.Header>\r\n\t\t\t\t\t\t<ReadBlogList id={data.id}\r\n\t\t\t\t\t\t\twriter={data.writer}\r\n\t\t\t\t\t\t\tuserID={data.userID}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tdesc={data.desc}\r\n\t\t\t\t\t\t\timagePathArray={images}\r\n\t\t\t\t\t\t\tcreatedAt={data.createdAt}\r\n\t\t\t\t\t\t\tupdatedAt={data.updatedAt}\r\n\t\t\t\t\t\t\tisLogedIn={data.isLogedIn}\r\n\t\t\t\t\t\t\tclassName=\"blogList_detailedBlog\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</ReadBlogList>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}