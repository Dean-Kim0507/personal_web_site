{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */import React,{useState,useEffect}from'react';import{Card,Carousel,Image,Button,Modal}from'react-bootstrap';import BlogComments from'./BlogComments';import{useDispatch,useSelector}from\"react-redux\";function ReadBlogList(props){var id=props.id;var title=props.title;var desc=props.desc;var writer=props.writer;var userID=props.userID;var isLogedIn=props.isLogedIn;var _useSelector=useSelector(function(state){return state.auth;}),isLoggedIn=_useSelector.isLoggedIn,user=_useSelector.user;var _useSelector2=useSelector(function(state){return state.message;}),message=_useSelector2.message;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showEditButton=_useState4[0],setShowEditButton=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),updatePath=_useState6[0],setUpdatePath=_useState6[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};var format=require('date-format');var imagePathArray=props.imagePathArray;var createdAt=format.asString('MM-dd-yyyy',new Date(props.createdAt));var updatedAt=format.asString('MM-dd-yyyy',new Date(props.updatedAt));var blog_date;var nowDate=format.asString('MM-dd-yyyy',new Date());var ReadBlogList_keyValue=-1;var carousel_control_indicators=true;var image_path;useEffect(function(){if(isLogedIn){setUpdatePath(\"/blogupdate/\".concat(id,\"/\").concat(writer));if(user!=null){if(user.userID!=userID){setShowEditButton(false);}else{setShowEditButton(true);}}else{setShowEditButton(false);}}else setUpdatePath(\"/blogupdate/\".concat(id,\"/\").concat(userID));},[]);//Decision of showing arrow in the pictures\nif(imagePathArray.length>1)carousel_control_indicators=true;else carousel_control_indicators=false;// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\nif(createdAt===nowDate)blog_date=format.asString('hh:mm MM-dd-yyyy',new Date(props.createdAt));else if(updatedAt===nowDate)blog_date=format.asString('hh:mm MM-dd-yyyy (Edited)',new Date(props.updatedAt));else if(createdAt===updatedAt)blog_date=createdAt;else blog_date=updatedAt+' (Edited)';return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,{key:id,className:\"readBlogList_eachCard\",style:{width:'100%'}},/*#__PURE__*/React.createElement(Carousel,{interval:null,controls:carousel_control_indicators,indicators:carousel_control_indicators},imagePathArray.map(function(data){ReadBlogList_keyValue=ReadBlogList_keyValue+1;// If user doesn't add any image, show the No_Image.jpg\nif(imagePathArray[0]===\"\"){image_path=\"/uploadImages/No_Image.jpg\";}else image_path=data;return/*#__PURE__*/React.createElement(Carousel.Item,{key:ReadBlogList_keyValue},/*#__PURE__*/React.createElement(Image,{className:\"readBlogList_blogImages\",src:image_path,alt:\"BlogImages\"}));})),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,title),/*#__PURE__*/React.createElement(Card.Text,null,desc),/*#__PURE__*/React.createElement(\"small\",{className:\"text-muted\"},\"Date: \",blog_date)),/*#__PURE__*/React.createElement(Card.Footer,null,/*#__PURE__*/React.createElement(BlogComments,{id:id}),/*#__PURE__*/React.createElement(Modal,{show:show,onHide:handleClose},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,\"Delete it ?\")),/*#__PURE__*/React.createElement(Modal.Body,null,\" Delete this comment, permanently ?\"),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(Button,{variant:\"secondary\",onClick:handleClose},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",href:\"/bloglist/delete/\".concat(id,\"/\").concat(writer),key:id},\"Delete\"))),showEditButton?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"ReadBlogList_update_button\",variant:\"light\",href:updatePath,key:id},\"Edit\"),/*#__PURE__*/React.createElement(Button,{className:\"ReadBlogList_delete_button\",variant:\"light\",onClick:handleShow,key:id},\"Delete\")):null)));}export default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.jsx"],"names":["React","useState","useEffect","Card","Carousel","Image","Button","Modal","BlogComments","useDispatch","useSelector","ReadBlogList","props","id","title","desc","writer","userID","isLogedIn","state","auth","isLoggedIn","user","message","show","setShow","showEditButton","setShowEditButton","updatePath","setUpdatePath","handleClose","handleShow","format","require","imagePathArray","createdAt","asString","Date","updatedAt","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","length","width","map","data"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Carousel, Image, Button, Modal } from 'react-bootstrap';\r\nimport BlogComments from './BlogComments'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction ReadBlogList(props) {\r\n\tconst id = props.id;\r\n\tconst title = props.title;\r\n\tconst desc = props.desc;\r\n\tconst writer = props.writer;\r\n\tconst userID = props.userID;\r\n\tconst isLogedIn = props.isLogedIn;\r\n\tconst { isLoggedIn, user } = useSelector(state => state.auth);\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [showEditButton, setShowEditButton] = useState(true);\r\n\tconst [updatePath, setUpdatePath] = useState(null);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = () => setShow(true);\r\n\tconst format = require('date-format');\r\n\tlet imagePathArray = props.imagePathArray;\r\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\r\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\r\n\tlet blog_date;\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\tlet ReadBlogList_keyValue = -1;\r\n\tlet carousel_control_indicators = true\r\n\tlet image_path;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLogedIn) {\r\n\t\t\tsetUpdatePath(`/blogupdate/${id}/${writer}`);\r\n\t\t\tif (user != null) {\r\n\t\t\t\tif (user.userID != userID) {\r\n\t\t\t\t\tsetShowEditButton(false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsetShowEditButton(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsetShowEditButton(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse setUpdatePath(`/blogupdate/${id}/${userID}`);\r\n\t}, [])\r\n\r\n\t//Decision of showing arrow in the pictures\r\n\tif (imagePathArray.length > 1) carousel_control_indicators = true;\r\n\telse carousel_control_indicators = false;\r\n\r\n\t// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\r\n\tif (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));\r\n\telse if (updatedAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy (Edited)', new Date(props.updatedAt));\r\n\telse if (createdAt === updatedAt) blog_date = createdAt;\r\n\telse blog_date = updatedAt + ' (Edited)';\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card key={id} className=\"readBlogList_eachCard\" style={{ width: '100%' }}>\r\n\t\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators={carousel_control_indicators}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timagePathArray.map((data) => {\r\n\t\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue + 1;\r\n\t\t\t\t\t\t\t// If user doesn't add any image, show the No_Image.jpg\r\n\t\t\t\t\t\t\tif (imagePathArray[0] === \"\") {\r\n\t\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse image_path = data;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Carousel.Item key={ReadBlogList_keyValue}>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={image_path}\r\n\t\t\t\t\t\t\t\t\t\talt='BlogImages'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<Card.Body >\r\n\t\t\t\t\t<Card.Title>\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer>\r\n\r\n\t\t\t\t\t<BlogComments id={id} />\r\n\t\t\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete it ?</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body> Delete this comment, permanently ?</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\t\t\tCancel\r\n          \t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" href={`/bloglist/delete/${id}/${writer}`} key={id}>\r\n\t\t\t\t\t\t\t\tDelete\r\n          \t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t{showEditButton ?\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Button className=\"ReadBlogList_update_button\" variant=\"light\" href={updatePath} key={id}>Edit</Button>\r\n\t\t\t\t\t\t\t<Button className=\"ReadBlogList_delete_button\" variant=\"light\" onClick={handleShow} key={id}>Delete</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}