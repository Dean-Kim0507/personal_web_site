{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogList.js\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n * \r\n * This page shows the bloglist by using modal in bootstrap.\r\n * modal get the card that is included images and blog information from the Read Blog List.\r\n * user can click the thumbnails that's the first picture of pictures, user upladed\r\n * If user didn't upload any image, No Image file will be uploaded\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, Card, CardColumns } from 'react-bootstrap';\nimport '../css/BlogList.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let splittedImagePaths;\n  let splittedImagePaths_preview;\n  let temp_allBlogs = [];\n  let temp_comments = [];\n  let [allBlogs, setAllBlogs] = useState([]); // let show = null;\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState(null);\n  const [images, setImages] = useState(null);\n\n  const handleClose = () => setShow(false); // When user select the thumbnail, that function will be worked for retrieving the selected blog,\n\n\n  const handleShow = data => {\n    setShow(true);\n    setData(data); //If over two images, it splits the images' paths\n\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    setImages(splittedImagePaths);\n  }; //Integreate two object (blog information, blog comments)\n\n\n  useEffect(() => {\n    axios.post(\"/blog/list\").then(response => {\n      console.log(response.data); //to show current blog at the first.\n\n      for (let i = response.data[0].length - 1; i >= 0; i--) {\n        let temp_data = {\n          id: Number,\n          writer: String,\n          title: String,\n          desc: String,\n          imagePaths: String,\n          comments: Array,\n          createdAt: String,\n          updatedAt: String\n        };\n        temp_data.id = Number.parseInt(response.data[0][i].id);\n        temp_data.writer = response.data[0][i].writer;\n        temp_data.title = response.data[0][i].title;\n        temp_data.desc = response.data[0][i].desc;\n        temp_data.imagePaths = response.data[0][i].imagePaths;\n        temp_data.createdAt = response.data[0][i].createdAt;\n        temp_data.updatedAt = response.data[0][i].updatedAt;\n        temp_comments = [];\n\n        for (let i = response.data[1].length - 1; i >= 0; i--) {\n          if (temp_data.id === response.data[1][i].blog_id) {\n            temp_comments.push(response.data[1][i].blog_comment);\n          }\n        }\n\n        temp_data.comments = temp_comments;\n        temp_allBlogs.push(temp_data);\n      }\n\n      setAllBlogs(temp_allBlogs);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"blogList_addBlog_button\",\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, allBlogs.map(data => {\n    splittedImagePaths_preview = data.imagePaths.split(',');\n    splittedImagePaths_preview[0] = splittedImagePaths_preview[0].substring(16, splittedImagePaths_preview[0].length);\n    console.log(splittedImagePaths_preview[0]);\n    if (splittedImagePaths_preview[0] === \"\") splittedImagePaths_preview[0] = \"/uploadImages/No_Image.jpg\";\n    return splittedImagePaths_preview[0] && /*#__PURE__*/React.createElement(Card, {\n      className: \"blogList_thumbnail\",\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, data.title), /*#__PURE__*/React.createElement(Card.Img, {\n      alt: \"171x180\",\n      src: splittedImagePaths_preview[0],\n      onClick: () => handleShow(data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }));\n  })), data && /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    className: \"blogList_modal\",\n    centered: true,\n    size: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, data.writer), /*#__PURE__*/React.createElement(ReadBlogList, {\n    id: data.id,\n    title: data.title,\n    desc: data.desc,\n    imagePathArray: images,\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt,\n    comments: data.comments,\n    className: \"blogList_detailedBlog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogList.js"],"names":["React","useState","useEffect","Modal","Button","Card","CardColumns","axios","ReadBlogList","BlogList","props","splittedImagePaths","splittedImagePaths_preview","temp_allBlogs","temp_comments","allBlogs","setAllBlogs","show","setShow","data","setData","images","setImages","handleClose","handleShow","imagePaths","split","a","length","substring","console","log","post","then","response","i","temp_data","id","Number","writer","String","title","desc","comments","Array","createdAt","updatedAt","parseInt","blog_id","push","blog_comment","map"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n * \r\n * This page shows the bloglist by using modal in bootstrap.\r\n * modal get the card that is included images and blog information from the Read Blog List.\r\n * user can click the thumbnails that's the first picture of pictures, user upladed\r\n * If user didn't upload any image, No Image file will be uploaded\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport '../css/BlogList.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props) {\r\n\r\n\tlet splittedImagePaths;\r\n\tlet splittedImagePaths_preview;\r\n\tlet temp_allBlogs = [];\r\n\tlet temp_comments = [];\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\t// let show = null;\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [data, setData] = useState(null);\r\n\tconst [images, setImages] = useState(null);\r\n\tconst handleClose = () => setShow(false);\r\n\t// When user select the thumbnail, that function will be worked for retrieving the selected blog,\r\n\tconst handleShow = (data) => {\r\n\t\tsetShow(true);\r\n\t\tsetData(data);\r\n\r\n\t\t//If over two images, it splits the images' paths\r\n\t\tsplittedImagePaths = data.imagePaths.split(',');\r\n\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t}\r\n\t\tsetImages(splittedImagePaths);\r\n\t}\r\n\t//Integreate two object (blog information, blog comments)\r\n\tuseEffect(() => {\r\n\t\taxios.post(\"/blog/list\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t//to show current blog at the first.\r\n\t\t\t\tfor (let i = response.data[0].length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet temp_data = {\r\n\t\t\t\t\t\tid: Number,\r\n\t\t\t\t\t\twriter: String,\r\n\t\t\t\t\t\ttitle: String,\r\n\t\t\t\t\t\tdesc: String,\r\n\t\t\t\t\t\timagePaths: String,\r\n\t\t\t\t\t\tcomments: Array,\r\n\t\t\t\t\t\tcreatedAt: String,\r\n\t\t\t\t\t\tupdatedAt: String\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp_data.id = Number.parseInt(response.data[0].[i].id);\r\n\t\t\t\t\ttemp_data.writer = response.data[0].[i].writer;\r\n\t\t\t\t\ttemp_data.title = response.data[0].[i].title;\r\n\t\t\t\t\ttemp_data.desc = response.data[0].[i].desc;\r\n\t\t\t\t\ttemp_data.imagePaths = response.data[0].[i].imagePaths;\r\n\t\t\t\t\ttemp_data.createdAt = response.data[0].[i].createdAt;\r\n\t\t\t\t\ttemp_data.updatedAt = response.data[0].[i].updatedAt;\r\n\t\t\t\t\ttemp_comments = [];\r\n\t\t\t\t\tfor (let i = response.data[1].length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tif (temp_data.id === response.data[1].[i].blog_id) {\r\n\t\t\t\t\t\t\ttemp_comments.push(response.data[1].[i].blog_comment);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttemp_data.comments = temp_comments;\r\n\t\t\t\t\ttemp_allBlogs.push(temp_data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetAllBlogs(temp_allBlogs);\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"blogList_whole\">\r\n\t\t\t<Button className=\"blogList_addBlog_button\" variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t\t<hr />\r\n\t\t\t<div className=\"blogList_list\">\r\n\t\t\t\t<CardColumns>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tallBlogs.map((data) => {\r\n\t\t\t\t\t\t\tsplittedImagePaths_preview = data.imagePaths.split(',');\r\n\t\t\t\t\t\t\tsplittedImagePaths_preview[0] = splittedImagePaths_preview[0].substring(16, splittedImagePaths_preview[0].length);\r\n\t\t\t\t\t\t\tconsole.log(splittedImagePaths_preview[0])\r\n\t\t\t\t\t\t\tif (splittedImagePaths_preview[0] === \"\") splittedImagePaths_preview[0] = \"/uploadImages/No_Image.jpg\";\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tsplittedImagePaths_preview[0] &&\r\n\t\t\t\t\t\t\t\t<Card className=\"blogList_thumbnail\" key={data.id}>\r\n\t\t\t\t\t\t\t\t\t<Card.Header>{data.title}</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Img\r\n\t\t\t\t\t\t\t\t\t\talt=\"171x180\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={splittedImagePaths_preview[0]}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleShow(data)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardColumns>\r\n\r\n\t\t\t\t{data &&\r\n\t\t\t\t\t< Modal show={show} onHide={handleClose} className=\"blogList_modal\"\r\n\t\t\t\t\t\tcentered={true} size={'lg'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Modal.Header closeButton>{data.writer}</Modal.Header>\r\n\t\t\t\t\t\t<ReadBlogList id={data.id}\r\n\t\t\t\t\t\t\ttitle={data.title}\r\n\t\t\t\t\t\t\tdesc={data.desc}\r\n\t\t\t\t\t\t\timagePathArray={images}\r\n\t\t\t\t\t\t\tcreatedAt={data.createdAt}\r\n\t\t\t\t\t\t\tupdatedAt={data.updatedAt}\r\n\t\t\t\t\t\t\tcomments={data.comments}\r\n\t\t\t\t\t\t\tclassName=\"blogList_detailedBlog\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</ReadBlogList>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}