{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\ReadBlogList.js\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Carousel, Image, Button, Accordion, ListGroup } from 'react-bootstrap';\n\nconst format = require('date-format');\n\nfunction ReadBlogList(props) {\n  let id = props.id;\n  let title = props.title;\n  let desc = props.desc;\n  let writer = props.writer;\n  let imagePathArray = props.imagePathArray;\n  let createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n  let updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n  let blog_date;\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n  let ReadBlogList_keyValue = -1;\n  let carousel_control_indicators = true;\n  let image_path; //Decision of showing arrow in the pictures\n\n  if (imagePathArray.length > 1) carousel_control_indicators = true;else carousel_control_indicators = false;\n  console.log(createdAt, updatedAt, nowDate); // Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\n\n  if (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));else if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));else if (createdAt === updatedAt) blog_date = createdAt;else blog_date = '(updated) ' + updatedAt;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"readBlogList_eachCard\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    controls: carousel_control_indicators,\n    indicators: carousel_control_indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, imagePathArray.map(data => {\n    ReadBlogList_keyValue = ReadBlogList_keyValue + 1; // If user doesn't add any image, show the No_Image.jpg\n\n    if (imagePathArray[0] === \"\") {\n      image_path = \"/uploadImages/No_Image.jpg\";\n    } else image_path = data;\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: ReadBlogList_keyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: \"readBlogList_blogImages\",\n      src: image_path,\n      alt: \"BlogImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, desc), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, \"Date: \", blog_date)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Comment\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, \"Cras justo odio\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }, \"Dapibus ac facilisis in\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }, \"Vestibulum at eros\")), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Recipient's username\",\n    \"aria-label\": \"Recipient's username\",\n    \"aria-describedby\": \"basic-addon2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Button\")))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_delete_button\",\n    variant: \"light\",\n    href: `/bloglist/delete/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_update_button\",\n    variant: \"light\",\n    href: `/bloglist/update/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, \"Edit\"))));\n}\n\nexport default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.js"],"names":["React","useState","useEffect","Card","Carousel","Image","Button","Accordion","ListGroup","format","require","ReadBlogList","props","id","title","desc","writer","imagePathArray","createdAt","asString","Date","updatedAt","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","length","console","log","width","map","data"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Carousel, Image, Button, Accordion, ListGroup } from 'react-bootstrap';\r\nconst format = require('date-format');\r\n\r\nfunction ReadBlogList(props) {\r\n\tlet id = props.id;\r\n\tlet title = props.title;\r\n\tlet desc = props.desc;\r\n\tlet writer = props.writer;\r\n\tlet imagePathArray = props.imagePathArray;\r\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\r\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\r\n\tlet blog_date;\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\tlet ReadBlogList_keyValue = -1;\r\n\tlet carousel_control_indicators = true\r\n\tlet image_path;\r\n\r\n\t//Decision of showing arrow in the pictures\r\n\tif (imagePathArray.length > 1) carousel_control_indicators = true;\r\n\telse carousel_control_indicators = false;\r\n\tconsole.log(createdAt, updatedAt, nowDate)\r\n\r\n\t// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\r\n\tif (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));\r\n\telse if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));\r\n\telse if (createdAt === updatedAt) blog_date = createdAt;\r\n\telse blog_date = '(updated) ' + updatedAt;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"readBlogList_eachCard\" style={{ width: '100%' }}>\r\n\t\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators={carousel_control_indicators}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timagePathArray.map((data) => {\r\n\t\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue + 1;\r\n\t\t\t\t\t\t\t// If user doesn't add any image, show the No_Image.jpg\r\n\t\t\t\t\t\t\tif (imagePathArray[0] === \"\") {\r\n\t\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse image_path = data;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Carousel.Item key={ReadBlogList_keyValue}>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={image_path}\r\n\t\t\t\t\t\t\t\t\t\talt='BlogImages'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\tComment\r\n      \t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t<ListGroup variant=\"flush\">\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t<ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Recipient's username\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Recipient's username\"\r\n\t\t\t\t\t\t\t\t\t\taria-describedby=\"basic-addon2\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\">Button</Button>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t<Button className=\"ReadBlogList_delete_button\" variant=\"light\" href={`/bloglist/delete/${id}/${writer}`} key={id}>Delete</Button>\r\n\t\t\t\t\t<Button className=\"ReadBlogList_update_button\" variant=\"light\" href={`/bloglist/update/${id}/${writer}`} key={id}>Edit</Button>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}