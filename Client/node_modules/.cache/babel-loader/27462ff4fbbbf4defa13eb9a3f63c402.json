{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\ResetAccount.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Link } from 'react-router-dom';\nimport ForgotService from '../Services/Forgot.service';\nimport '../css/ResetAccount.css';\nimport { v_passwordMessage, v_confirmPasswordMessage } from \"./message\";\n\nfunction ResetAccount(props) {\n  const [validated, setValidated] = useState(false);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [confirmPassword_invalid, setConfirmPassword_invalid] = useState();\n  const [passwordInvalid, setPasswordInvalid] = useState();\n  const token = props.match.params.token;\n\n  let _password;\n\n  let _confirm_password;\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    } else {\n      event.preventDefault();\n      ForgotService.reset_password({\n        token: token,\n        password: password\n      });\n    }\n  };\n\n  useEffect(() => {//token 유효하지않으면 팅기게 하기, 로그인하면 팅기게하기\n  }); //validating password, password must be between 8 and 20 letter.\n\n  const onChangePassword = e => {\n    _password = e.target.value;\n\n    if (_password === undefined || _password.length < 8 || _password.length > 20) {\n      setPasswordInvalid(true);\n      setPassword(_password);\n    } else if (confirmPassword != null && _password != confirmPassword) {\n      setPasswordInvalid(false);\n      setConfirmPassword_invalid(true);\n      setPassword(_password);\n    } else if (confirmPassword != null && _password === confirmPassword) {\n      setPasswordInvalid(false);\n      setConfirmPassword_invalid(false);\n      setPassword(_password);\n    } else {\n      setPasswordInvalid(() => false);\n      setPassword(_password);\n\n      if (_password != confirmPassword) {\n        setConfirmPassword_invalid(true);\n      }\n    }\n  }; //validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\n\n\n  const onChangeConfirmPassword = e => {\n    _confirm_password = e.target.value;\n\n    if (_confirm_password === undefined || _confirm_password.length < 8 || _confirm_password.length > 20) {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    } else if (password != null && _confirm_password != password) {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    } else if (password != null && _confirm_password === password) {\n      setConfirmPassword_invalid(false);\n      setConfirmPassword(_confirm_password);\n    } else {\n      setConfirmPassword_invalid(true);\n      setConfirmPassword(_confirm_password);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"resetAccount_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    className: \"resetAccount_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: {\n      offset: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    className: \"resetAccount_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"resetAccount_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: onChangePassword,\n    isInvalid: passwordInvalid,\n    minLength: \"8\",\n    maxLength: \"20\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, v_passwordMessage)), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    className: \"registration_form_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"registration_form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    isInvalid: confirmPassword_invalid,\n    onChange: onChangeConfirmPassword,\n    minLength: \"8\",\n    maxLength: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, v_confirmPasswordMessage)), /*#__PURE__*/React.createElement(Button, {\n    className: \"resetAccount_button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }\n  }, \"Set Password\"))));\n}\n\nexport default ResetAccount;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/ResetAccount.jsx"],"names":["React","useState","useRef","useEffect","Form","Col","Button","useDispatch","useSelector","useHistory","Link","ForgotService","v_passwordMessage","v_confirmPasswordMessage","ResetAccount","props","validated","setValidated","password","setPassword","confirmPassword","setConfirmPassword","confirmPassword_invalid","setConfirmPassword_invalid","passwordInvalid","setPasswordInvalid","token","match","params","_password","_confirm_password","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","reset_password","onChangePassword","e","target","value","undefined","length","onChangeConfirmPassword","offset"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport ForgotService from '../Services/Forgot.service';\r\nimport '../css/ResetAccount.css';\r\nimport {\r\n\tv_passwordMessage,\r\n\tv_confirmPasswordMessage,\r\n} from \"./message\";\r\n\r\nfunction ResetAccount(props) {\r\n\r\n\tconst [validated, setValidated] = useState(false);\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [confirmPassword, setConfirmPassword] = useState(null);\r\n\tconst [confirmPassword_invalid, setConfirmPassword_invalid] = useState();\r\n\tconst [passwordInvalid, setPasswordInvalid] = useState();\r\n\tconst token = props.match.params.token;\r\n\tlet _password;\r\n\tlet _confirm_password;\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tconst form = event.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tForgotService.reset_password({\r\n\t\t\t\ttoken: token,\r\n\t\t\t\tpassword: password\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\r\n\t\t//token 유효하지않으면 팅기게 하기, 로그인하면 팅기게하기\r\n\t})\r\n\r\n\t//validating password, password must be between 8 and 20 letter.\r\n\tconst onChangePassword = (e) => {\r\n\t\t_password = e.target.value;\r\n\t\tif (_password === undefined || _password.length < 8 || _password.length > 20) {\r\n\t\t\tsetPasswordInvalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password != confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password === confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordInvalid(() => false);\r\n\t\t\tsetPassword(_password);\r\n\t\t\tif (_password != confirmPassword) {\r\n\t\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\r\n\tconst onChangeConfirmPassword = (e) => {\r\n\r\n\t\t_confirm_password = e.target.value;\r\n\t\tif (_confirm_password === undefined || _confirm_password.length < 8 || _confirm_password.length > 20) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password != password) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password === password) {\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"resetAccount_whole\">\r\n\t\t\t< Form\r\n\t\t\t\tnoValidate validated={validated}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\tclassName=\"resetAccount_form\"\r\n\t\t\t>\r\n\t\t\t\t<h1>Reset Password</h1>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Col md={{ offset: 4 }}>\r\n\t\t\t\t\t<Form.Group as={Col} md=\"4\" className=\"resetAccount_password\">\r\n\t\t\t\t\t\t<Form.Label className=\"resetAccount_label\">Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tonChange={onChangePassword}\r\n\t\t\t\t\t\t\tisInvalid={passwordInvalid}\r\n\t\t\t\t\t\t\tminLength=\"8\"\r\n\t\t\t\t\t\t\tmaxLength=\"20\"\r\n\t\t\t\t\t\t\trequired />\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t{v_passwordMessage}\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group as={Col} md=\"4\" className=\"registration_form_group\">\r\n\t\t\t\t\t\t<Form.Label className=\"registration_form_label\">Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tisInvalid={confirmPassword_invalid}\r\n\t\t\t\t\t\t\tonChange={onChangeConfirmPassword}\r\n\t\t\t\t\t\t\tminLength=\"8\" maxLength=\"20\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t{v_confirmPasswordMessage}\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button className=\"resetAccount_button\" type=\"submit\">Set Password</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Form >\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResetAccount;"]},"metadata":{},"sourceType":"module"}