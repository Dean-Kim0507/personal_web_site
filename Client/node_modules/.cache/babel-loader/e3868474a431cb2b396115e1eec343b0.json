{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/BlogList.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let splittedImagePaths;\n  let readBloglist_KeyValue = -1;\n  let [allBlogs, setAllBlogs] = useState([]);\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(async response => {\n      await console.log(response.data);\n      await setAllBlogs(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, allBlogs.map(data => {\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    readBloglist_KeyValue = readBloglist_KeyValue + 1;\n    return /*#__PURE__*/React.createElement(ReadBlogList, {\n      key: readBloglist_KeyValue,\n      writer: data.writer,\n      title: data.title,\n      desc: data.desc,\n      imagePathArray: splittedImagePaths,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }\n    });\n  }), console.log(allBlogs), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogList.js"],"names":["React","useState","useEffect","Carousel","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","ReadBlogList","BlogList","props","splittedImagePaths","readBloglist_KeyValue","allBlogs","setAllBlogs","res","post","then","response","console","log","data","map","imagePaths","split","a","length","substring","writer","title","desc"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,WAA5D,QAA8E,iBAA9E;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEvB,MAAIC,kBAAJ;AACA,MAAIC,qBAAqB,GAAG,CAAC,CAA7B;AAEA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMgB,GAAG,GAAIR,KAAK,CAACS,IAAN,CAAW,YAAX,EACZC,IADY,CACN,MAAMC,QAAN,IAAkB;AACxB,YAAMC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAN;AACA,YAAMP,WAAW,CAACI,QAAQ,CAACG,IAAV,CAAjB;AAEA,KALY,CAAb;AAMA,GAPQ,EAON,EAPM,CAAT;AASA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEER,QAAQ,CAACS,GAAT,CAAcD,IAAD,IAAU;AAEtBV,IAAAA,kBAAkB,GAAGU,IAAI,CAACE,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,CAArB;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGd,kBAAkB,CAACe,MAArC,EAA6CD,CAAC,EAA9C,EAAiD;AAChDd,MAAAA,kBAAkB,CAACc,CAAD,CAAlB,GAAwBd,kBAAkB,CAACc,CAAD,CAAlB,CAAsBE,SAAtB,CAAgC,EAAhC,EAAoChB,kBAAkB,CAACc,CAAD,CAAlB,CAAsBC,MAA1D,CAAxB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYT,kBAAkB,CAACc,CAAD,CAA9B;AACA;;AACDb,IAAAA,qBAAqB,GAAGA,qBAAqB,GAAC,CAA9C;AACA,wBACA,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,qBAAnB;AAA0C,MAAA,MAAM,EAAES,IAAI,CAACO,MAAvD;AAA+D,MAAA,KAAK,EAAEP,IAAI,CAACQ,KAA3E;AAAkF,MAAA,IAAI,EAAER,IAAI,CAACS,IAA7F;AAAmG,MAAA,cAAc,EAAEnB,kBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAIA,GAZD,CAFF,EAiBEQ,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAjBF,eAkBC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBD,CADD;AAwBA;;AAED,eAAeJ,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns} from 'react-bootstrap';\r\nimport '../css/BlogList.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props){\r\n\r\n\tlet splittedImagePaths\r\n\tlet readBloglist_KeyValue = -1;\r\n\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst res =  axios.post(\"/blog/list\")\r\n\t\t.then (async response => {\r\n\t\t\tawait console.log(response.data);\r\n\t\t\tawait setAllBlogs(response.data);\r\n\t\t\t\r\n\t\t})\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<div className=\"blogList\">\r\n\t\t\t{\r\n\t\t\t\tallBlogs.map((data) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tsplittedImagePaths = data.imagePaths.split(',');\r\n\t\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadBloglist_KeyValue = readBloglist_KeyValue+1;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t<ReadBlogList key={readBloglist_KeyValue} writer={data.writer} title={data.title} desc={data.desc} imagePathArray={splittedImagePaths}></ReadBlogList>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t{console.log(allBlogs)}\r\n\t\t\t<Button variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}