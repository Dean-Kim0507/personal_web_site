{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\Post.js\";\nimport React, { Component } from 'react';\nimport TOC from \"./PostComponents/TOC\";\nimport ReadContent from \"./PostComponents/ReadContent\";\nimport Subject from \"./PostComponents/Subject\";\nimport Control from \"./PostComponents/Control\";\nimport UpdateContent from \"./PostComponents/UpdateContent\";\nimport CreateContent from './PostComponents/CreateContent';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\nimport { render } from '@testing-library/react';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'list',\n      selected_content_id: 0,\n      subject: {\n        title: 'Welcome to My project1',\n        sub: \"Developing Board...\"\n      },\n      contents: []\n    };\n    this.max_content_id = this.max_content_id;\n  } // receive data by using fetch\n\n\n  componentDidMount() {\n    console.log('componentDidMount()');\n    fetch('/board/senddata', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(data => this.setState({\n      contents: data.rows\n    }));\n  } // receive data by using axios (don't need to convert)\n\n\n  async setData(_id, _writer, _title, _desc, _mode) {\n    console.log('setData()');\n    let data = {\n      id: _id,\n      writer: _writer,\n      title: _title,\n      description: _desc,\n      mode: _mode\n    };\n    await axios.post('/board/receivedata', data).then(response => this.setState(response => {\n      return {\n        contents: response.data.rows[1]\n      };\n    }).bind(response)) // {this.setState({contents: response.data.rows[1]})})\n    .then(console.log(this.state.contents)).catch(function (error) {\n      console.log(error);\n    }); // \tfetch('http://localhost:4000/board/giveresult'\n    // \t,{\n    // \tmethod: 'POST',\n    // \theaders:{\n    // \t\t'Content-Type': 'application/json',\n    // \t\t'Accept': 'application/json'\n    // \t},\n    // \tbody:JSON.stringify(data)\n    // \t})\n    // \t.then (console.log(data))\n    // \t.then (res => res.json())\n    // \t.then (data => console.log(data));\n  }\n\n  getReadContent() {\n    console.log('getReadContent()');\n    let i = 0;\n\n    while (i < this.state.contents.length) {\n      let data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n        break;\n      }\n\n      i = i + 1;\n    }\n  }\n\n  getContent() {\n    console.log('getContent()');\n\n    let _article,\n        _content = null;\n\n    if (this.state.mode === 'list') {\n      _article = /*#__PURE__*/React.createElement(TOC, {\n        onChangePage: async function (id) {\n          await this.setState({\n            mode: 'read',\n            selected_content_id: Number(id) //문자를 숫자로 변경해주는 함수 Number\n\n          });\n        }.bind(this),\n        data: this.state.contents,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      });\n      return _article;\n    } //read\n    else if (this.state.mode === 'read') {\n        _content = this.getReadContent();\n        console.log(_content);\n        _article = /*#__PURE__*/React.createElement(ReadContent, {\n          writer: _content.writer,\n          title: _content.title,\n          desc: _content.description,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 16\n          }\n        });\n      } // Update\n      else if (this.state.mode === 'update') {\n          _content = this.getReadContent();\n          _article = /*#__PURE__*/React.createElement(UpdateContent, {\n            data: _content,\n            onSubmit: function (_id, _writer, _title, _desc) {\n              //add content to this.state.cotnents\n              let _contents = Array.from(this.state.contents);\n\n              let i = 0;\n\n              while (i < _contents.length) {\n                if (_contents[i].id === _id) {\n                  _contents[i] = {\n                    id: _id,\n                    writer: _writer,\n                    title: _title,\n                    description: _desc\n                  };\n                  break;\n                }\n\n                i = i + 1;\n              }\n\n              this.setState({\n                contents: _contents,\n                mode: 'read'\n              });\n              this.setData();\n            }.bind(this),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }\n          });\n        } //create\n        else if (this.state.mode === 'create') {\n            _article = /*#__PURE__*/React.createElement(CreateContent, {\n              onSubmit: async function (_writer, _title, _desc) {\n                //add content to this.state.cotnents\n                // this.max_content_id= this.state.contents[this.state.contents.length-1].id+1;\n                // var _contents = Array.from(this.state.contents);\n                // _contents.push({id:this.max_content_id, writer: _writer, title:_title, description:_desc});\n                await this.setData(0, _writer, _title, _desc, 'create');\n                await this.setState({\n                  selected_content_id: this.state.contents[this.state.contents.length - 1].id,\n                  mode: 'read'\n                });\n              }.bind(this),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }\n            });\n          }\n\n    return _article;\n  }\n\n  createController() {\n    let _button;\n\n    if (this.state.mode === 'read' || this.state.mode === 'update') {\n      console.log('createController()');\n      _button = /*#__PURE__*/React.createElement(Control, {\n        onChangeMode: async function (_mode) {\n          if (_mode === 'delete') {\n            if (window.confirm('really?')) {\n              // let _content = Array.from(this.state.contents);\n              // let i = 0;\n              // while(i<this.state.contents.length){\n              // if(_content[i].id === this.state.selected_content_id){\n              // \t_content.splice(i,1);\n              // \tbreak;\n              // }\n              // i =i+1\n              // }\n              console.log(this.state.selected_content_id);\n              await this.setData(this.state.selected_content_id, '', '', '', 'delete');\n              await this.setState(state => {\n                return {\n                  mode: 'list'\n                };\n              });\n              await this.setState(state => {\n                return {\n                  selected_content_id: 0\n                };\n              }); // await this.setState({\n              // mode:'list',\n              // selected_content_id:0\n              // });\n\n              await alert('deleted!');\n            }\n          } else {\n            this.setState({\n              mode: _mode\n            });\n          }\n        }.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 14\n        }\n      });\n      return _button;\n    } else {\n      return null;\n    }\n  }\n\n  createPost() {\n    let _post;\n\n    if (this.state.mode !== 'create') {\n      console.log('createPost()');\n      _post = /*#__PURE__*/React.createElement(Button, {\n        onClick: function (e) {\n          e.preventDefault();\n          this.setState({\n            mode: 'create'\n          });\n        }.bind(this),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 12\n        }\n      }, \"Add New Post\");\n      return _post;\n    } else return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        this.setState({\n          mode: 'list'\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 4\n      }\n    }), this.getContent(), this.createController(), this.createPost());\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/Post.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","UpdateContent","CreateContent","axios","Button","render","Board","constructor","props","state","mode","selected_content_id","subject","title","sub","contents","max_content_id","componentDidMount","console","log","fetch","method","headers","then","res","json","data","setState","rows","setData","_id","_writer","_title","_desc","_mode","id","writer","description","post","response","bind","catch","error","getReadContent","i","length","getContent","_article","_content","Number","_contents","Array","from","createController","_button","window","confirm","alert","createPost","_post","e","preventDefault"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport TOC from \"./PostComponents/TOC\"\r\nimport ReadContent from \"./PostComponents/ReadContent\"\r\nimport Subject from \"./PostComponents/Subject\"\r\nimport Control from \"./PostComponents/Control\"\r\nimport UpdateContent from \"./PostComponents/UpdateContent\"\r\nimport CreateContent from './PostComponents/CreateContent';\r\nimport axios from 'axios';\r\nimport { Button } from 'reactstrap';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\nclass Board extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\t\r\n\t\tthis.state ={\r\n\t\tmode:'list',\r\n      \tselected_content_id:0,\r\n      \tsubject:{title:'Welcome to My project1', sub:\"Developing Board...\"},\r\n\t\tcontents:[]\r\n\t}\r\n\tthis.max_content_id=this.max_content_id;\r\n\r\n}\t\r\n\t// receive data by using fetch\r\n\tcomponentDidMount() {\r\n\t\tconsole.log('componentDidMount()');\r\n\t\t\r\n\t\tfetch('/board/senddata',\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders:{\r\n\t\t\t\t'Accept': 'application/json'\r\n\t\t\t}\r\n\t\t\t})\r\n\t\t.then (res => res.json())\r\n\t\t.then (data => this.setState({contents: data.rows}))\r\n\t}\r\n\r\n\t// receive data by using axios (don't need to convert)\r\n\tasync setData(_id, _writer,_title,_desc,_mode) {\r\n\t\tconsole.log('setData()');\r\n\t\tlet data = {\r\n\t\t\tid:_id,\r\n\t\t\twriter:_writer,\r\n\t\t\ttitle:_title,\r\n\t\t\tdescription:_desc,\r\n\t\t\tmode:_mode\r\n\t\t}\r\n\r\n\t\tawait axios.post('/board/receivedata',data)\r\n\t\t.then(response => \r\n\t\t\tthis.setState(  (response) => {return{contents: response.data.rows[1]}}).bind(response))\r\n\t\t\t// {this.setState({contents: response.data.rows[1]})})\r\n\t\t.then(console.log(this.state.contents))\r\n\t\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t// \tfetch('http://localhost:4000/board/giveresult'\r\n\t// \t,{\r\n\t// \tmethod: 'POST',\r\n\t// \theaders:{\r\n\t// \t\t'Content-Type': 'application/json',\r\n    // \t\t'Accept': 'application/json'\r\n\t// \t},\r\n\t// \tbody:JSON.stringify(data)\r\n\t\t\r\n\t// \t})\r\n\t// \t.then (console.log(data))\r\n\t// \t.then (res => res.json())\r\n\t// \t.then (data => console.log(data));\r\n  \t}\r\n\t\r\n\tgetReadContent(){\r\n\t\tconsole.log('getReadContent()');\r\n\t\tlet i =0;\r\n\t\t  while(i<this.state.contents.length){\r\n\t\t\tlet data = this.state.contents[i];\r\n\t\t\tif(data.id === this.state.selected_content_id){\r\n\t\t\t  return data;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t\ti=i+1;\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\tgetContent(){\r\n\t\tconsole.log('getContent()');\r\n\t\tlet _article,_content = null;\r\n\t\tif(this.state.mode ==='list'){\r\n\t\t\t_article = <TOC onChangePage = {\r\n\t\t\t\tasync function(id){ \r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tmode:'read',\r\n\t\t\t\t\tselected_content_id:Number(id)//문자를 숫자로 변경해주는 함수 Number\r\n\t\t\t\t});\r\n\t\t\t\t}.bind(this)\r\n\t\t\t} data={this.state.contents}></TOC>\r\n\t\t\treturn _article\r\n\t\t}\r\n\r\n\t\t//read\r\n\t\telse if (this.state.mode ==='read'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t\tconsole.log(_content);\r\n\t\t  _article = <ReadContent writer={_content.writer} title= {_content.title} desc= {_content.description} ></ReadContent>\r\n\t\t}\r\n\r\n\t\t// Update\r\n\t\telse if(this.state.mode ==='update'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t  _article = <UpdateContent data = {_content} onSubmit={\r\n\t\t\tfunction(_id, _writer, _title, _desc){\r\n\t\t\t  //add content to this.state.cotnents\r\n\t\t\t  let _contents = Array.from(this.state.contents);\r\n\t\t\t  let i =0;\r\n\t\t\t  while(i<_contents.length){\r\n\t\t\t\tif(_contents[i].id ===_id){\r\n\t\t\t\t  _contents[i] = {id:_id, writer:_writer, title:_title, description:_desc};\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\ti=i+1;\r\n\t\t\t  }\r\n\t\t\t  this.setState({\r\n\t\t\t\tcontents:_contents,\r\n\t\t\t\tmode:'read'\r\n\t\t\t  });\r\n\t\t\tthis.setData();\r\n\t\t\t}.bind(this)\r\n\t\t  }></UpdateContent>\r\n\t\t \r\n\t\t}\r\n\r\n\t\t//create\r\n\r\n\t\telse if (this.state.mode ==='create'){\r\n\t\t\t_article = <CreateContent onSubmit={\r\n\t\t\t\t async function(_writer,_title,_desc){\r\n\t\t\t\t//add content to this.state.cotnents\r\n\t\t\t\t// this.max_content_id= this.state.contents[this.state.contents.length-1].id+1;\r\n\t\t\t\t// var _contents = Array.from(this.state.contents);\r\n\t\t\t\t// _contents.push({id:this.max_content_id, writer: _writer, title:_title, description:_desc});\r\n\t\t\t\tawait this.setData(0,_writer,_title,_desc,'create');\r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tselected_content_id:this.state.contents[this.state.contents.length-1].id,\r\n\t\t\t\t\tmode:'read'\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this)\r\n\t\t\t}></CreateContent>\r\n\t\t}\r\n\t\treturn _article;\r\n\t  }\r\n\r\n\t  createController() {\r\n\t\t\r\n\t\t  let _button;\r\n\t\tif(this.state.mode ==='read' || this.state.mode === 'update'){\r\n\t\t\tconsole.log('createController()');\r\n\t\t\t_button = <Control onChangeMode={async function(_mode){\r\n\t\t\t\tif(_mode === 'delete'){\r\n\t\t\t\t\tif(window.confirm('really?')){\r\n\t\t\t\t\t\t// let _content = Array.from(this.state.contents);\r\n\t\t\t\t\t\t// let i = 0;\r\n\t\t\t\t\t\t// while(i<this.state.contents.length){\r\n\t\t\t\t\t\t// if(_content[i].id === this.state.selected_content_id){\r\n\t\t\t\t\t\t// \t_content.splice(i,1);\r\n\t\t\t\t\t\t// \tbreak;\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t// i =i+1\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tconsole.log(this.state.selected_content_id);\r\n\t\t\t\t\t\tawait this.setData(this.state.selected_content_id,'','','','delete');\r\n\t\t\t\t\t\tawait this.setState((state) =>{return {mode:'list'}});\r\n\t\t\t\t\t\tawait this.setState((state) =>{return {selected_content_id:0}});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// await this.setState({\r\n\t\t\t\t\t\t// mode:'list',\r\n\t\t\t\t\t\t// selected_content_id:0\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t\tawait alert('deleted!');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tmode:_mode\r\n\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t\t}.bind(this)}></Control>\r\n\t\t\treturn _button;\r\n\t\t} \t\r\n\t\telse {return null;}\r\n\t  }\r\n\r\n\t  createPost() {\r\n\t\t  let _post;\r\n\t\tif (this.state.mode !=='create') {\r\n\t\t\tconsole.log('createPost()');\r\n\t\t\t_post = <Button onClick = {function(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.setState({mode: 'create'})\r\n\t\t\t}.bind(this)}type=\"button\">Add New Post</Button>\r\n\r\n\t\t\treturn _post;\r\n\t\t}\r\n\t\telse return null;\r\n\t  }\r\n\r\n\t  render(){\r\n    \r\n\t\treturn(\r\n\t\t<div className=\"Board\">\r\n\t\t\t<Subject title={this.state.subject.title} \r\n\t\t\tsub={this.state.subject.sub}\r\n\t\t\tonChangePage={function(){\r\n\t\t\tthis.setState({mode:'list'});\r\n\t\t\t\r\n\t\t\t}.bind(this)}\r\n\t\t\t></Subject>\r\n\r\n\t\t\t{this.getContent()}\r\n\t\t\t\r\n\t\t\t{this.createController()}\r\n\r\n\t\t\t{this.createPost()}\t\t\t\r\n\r\n\t\t</div>\r\n\t\t);\r\n\t  }\r\n\t}\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}