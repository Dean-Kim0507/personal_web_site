{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\BoardComponents\\\\TOC.js\";\nimport React, { Component } from 'react';\n\nclass TOC extends Component {\n  /*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n  concat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\n  shouldComponentUpdate(newProps, newState) {\n    console.log('===>TOC render shouldComponentUpdate', newProps.data, this.props.data);\n\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    console.log('===>TOC render');\n    var lists = [];\n    var data = this.props.data;\n    var i = 0;\n\n    while (i < data.length) {\n      lists.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: data[i].id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/contents/\" + data[i].id,\n        \"data-id\": data[i].id // e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\n        ,\n        onClick: function (id, e) {\n          e.preventDefault();\n          this.props.onChangePage(id);\n        }.bind(this, data[i].id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 3\n        }\n      }, data[i].title), \"`writer:\", data[i].writer));\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, lists));\n  }\n\n}\n\nexport default TOC;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/BoardComponents/TOC.js"],"names":["React","Component","TOC","shouldComponentUpdate","newProps","newState","console","log","data","props","render","lists","i","length","push","id","e","preventDefault","onChangePage","bind","title","writer"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA2B;AAC1B;;AAEAE,EAAAA,qBAAqB,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAmDH,QAAQ,CAACI,IAA5D,EAAkE,KAAKC,KAAL,CAAWD,IAA7E;;AAED,QAAG,KAAKC,KAAL,CAAWD,IAAX,KAAoBJ,QAAQ,CAACI,IAAhC,EAAqC;AACpC,aAAO,KAAP;AACA;;AACD,WAAO,IAAP;AACA;;AACAE,EAAAA,MAAM,GAAG;AACTJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAII,KAAK,GAAE,EAAX;AACA,QAAIH,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,QAAII,CAAC,GAAE,CAAP;;AACA,WAAMA,CAAC,GAAEJ,IAAI,CAACK,MAAd,EAAqB;AACrBF,MAAAA,KAAK,CAACG,IAAN,eACA;AAAI,QAAA,GAAG,EAAEN,IAAI,CAACI,CAAD,CAAJ,CAAQG,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AACA,QAAA,IAAI,EAAE,eAAaP,IAAI,CAACI,CAAD,CAAJ,CAAQG,EAD3B;AAEA,mBAAUP,IAAI,CAACI,CAAD,CAAJ,CAAQG,EAFlB,CAEqB;AAFrB;AAGA,QAAA,OAAO,EAAI,UAASA,EAAT,EAAaC,CAAb,EAAgB;AAC1BA,UAAAA,CAAC,CAACC,cAAF;AACA,eAAKR,KAAL,CAAWS,YAAX,CAAwBH,EAAxB;AACA,SAHU,CAGTI,IAHS,CAGJ,IAHI,EAGEX,IAAI,CAACI,CAAD,CAAJ,CAAQG,EAHV,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOCP,IAAI,CAACI,CAAD,CAAJ,CAAQQ,KAPT,CADD,cASSZ,IAAI,CAACI,CAAD,CAAJ,CAAQS,MATjB,CADA;AAYCT,MAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AACA;;AACC,wBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACAD,KADA,CADF,CADC;AAOD;;AAtCyB;;AAyCzB,eAAeT,GAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass TOC extends Component{\r\n\t/*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n\tconcat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\r\n\tshouldComponentUpdate(newProps, newState) {\r\n\t\tconsole.log('===>TOC render shouldComponentUpdate',newProps.data, this.props.data);\r\n\t\r\n\tif(this.props.data === newProps.data){\r\n\t\treturn false;\r\n\t}\r\n\treturn true;\r\n}\r\n\trender() {\r\n\tconsole.log('===>TOC render');\r\n\tvar lists =[];\r\n\tvar data = this.props.data;\r\n\tvar i =0;\r\n\twhile(i< data.length){\r\n\tlists.push(\r\n\t<li key={data[i].id}>\r\n\t\t<a \r\n\t\thref={\"/contents/\"+data[i].id}\r\n\t\tdata-id ={data[i].id}// e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\r\n\t\tonClick = {function(id, e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.props.onChangePage(id); \r\n\t\t}.bind(this, data[i].id)}\r\n\t>{data[i].title}</a>\r\n\t`writer:{data[i].writer}\r\n\t</li>);\r\n\t\ti=i+1;\r\n\t}\r\n\t  return(\r\n\t\t<nav>\r\n\t\t  <ul>\r\n\t\t\t{lists}\r\n\t\t  </ul>\r\n\t\t\t</nav>\r\n\t  );\r\n\t}\r\n  }\r\n\r\n  export default TOC;"]},"metadata":{},"sourceType":"module"}