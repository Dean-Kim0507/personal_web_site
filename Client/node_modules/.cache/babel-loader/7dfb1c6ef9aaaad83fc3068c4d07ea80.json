{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\CreateBlogList.jsx\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page is the form to create the blog and to send the data to server(blogDataController.js)\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\nimport { Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport ImageUploader from \"react-images-upload\";\nimport '../../css/CreateBlogList.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UNAUTHORIZED } from \"../type\";\nimport { SET_MESSAGE } from \"../../Actions/types\";\n\nfunction CreateBlogList(props) {\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [pictures, setPictures] = useState([]);\n  const formData = new FormData();\n  const dispatch = useDispatch();\n  const IMG_WIDTH = 45;\n  const IMG_LENGTH = 50;\n\n  const onDrop = picture => {\n    setPictures([...pictures, picture]);\n  };\n\n  let history = useHistory();\n  let _uploadResult = '';\n  useEffect(() => {\n    if (message == UNAUTHORIZED) {\n      dispatch({\n        type: SET_MESSAGE,\n        payload: null\n      });\n      history.push('/login');\n    }\n  }, [message]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createBlog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"My Blog\"), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    enctype: \"multipart/form-data\" // send the images to Backend Node js express\n    ,\n    onSubmit: async function (e) {\n      e.preventDefault();\n      formData.append('writer', e.target.writer.value);\n      formData.append('title', e.target.title.value);\n      formData.append('desc', e.target.desc.value);\n      formData.append('mode', 'create');\n\n      if (pictures.length > 0) {\n        for (let i = 0; i < pictures[pictures.length - 1].length; i++) {\n          formData.append('images', pictures[pictures.length - 1][i]);\n        }\n      }\n\n      console.log(pictures);\n      const res = await axios.post(\"/blog/create\", formData).then(response => {\n        _uploadResult = response.data;\n        if (_uploadResult === 'Upload success') history.push('/bloglist');else history.push('/errorpage');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }, \"Writer\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    src: user.profileImg,\n    width: IMG_WIDTH,\n    height: IMG_LENGTH,\n    alt: \"171x180\",\n    roundedCircle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"writer\",\n    value: user.userID,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  })) : /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, \"Writer\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"writer\",\n    placeholder: \"WRITER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"desc\",\n    placeholder: \"TEXT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(ImageUploader, Object.assign({\n    name: \"imageUploader\"\n  }, props, {\n    withIcon: true,\n    onChange: onDrop,\n    imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n    maxFileSize: 5242880,\n    withPreview: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, \"Submit\"))));\n}\n\nexport default CreateBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/CreateBlogList.jsx"],"names":["React","useState","useEffect","Button","FormGroup","Label","Input","Image","axios","useHistory","ImageUploader","useDispatch","useSelector","UNAUTHORIZED","SET_MESSAGE","CreateBlogList","props","isLoggedIn","user","state","auth","message","pictures","setPictures","formData","FormData","dispatch","IMG_WIDTH","IMG_LENGTH","onDrop","picture","history","_uploadResult","type","payload","push","e","preventDefault","append","target","writer","value","title","desc","length","i","console","log","res","post","then","response","data","catch","error","profileImg","userID"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page is the form to create the blog and to send the data to server(blogDataController.js)\r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\nimport { Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport '../../css/CreateBlogList.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n\tUNAUTHORIZED\r\n} from \"../type\";\r\nimport {\r\n\tSET_MESSAGE\r\n} from \"../../Actions/types\";\r\n\r\nfunction CreateBlogList(props) {\r\n\tconst { isLoggedIn, user } = useSelector(state => state.auth);\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst [pictures, setPictures] = useState([]);\r\n\tconst formData = new FormData();\r\n\tconst dispatch = useDispatch();\r\n\tconst IMG_WIDTH = 45;\r\n\tconst IMG_LENGTH = 50;\r\n\tconst onDrop = picture => {\r\n\t\tsetPictures([...pictures, picture]);\r\n\t};\r\n\tlet history = useHistory();\r\n\tlet _uploadResult = '';\r\n\tuseEffect(() => {\r\n\t\tif (message == UNAUTHORIZED) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: SET_MESSAGE,\r\n\t\t\t\tpayload: null,\r\n\t\t\t});\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t}, [message])\r\n\r\n\treturn (\r\n\t\t<div className=\"createBlog\">\r\n\t\t\t<article>\r\n\t\t\t\t<h2>My Blog</h2>\r\n\t\t\t\t<form action='' method=\"post\" enctype=\"multipart/form-data\"\r\n\t\t\t\t\t// send the images to Backend Node js express\r\n\t\t\t\t\tonSubmit={async function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tformData.append('writer', e.target.writer.value);\r\n\t\t\t\t\t\tformData.append('title', e.target.title.value);\r\n\t\t\t\t\t\tformData.append('desc', e.target.desc.value);\r\n\t\t\t\t\t\tformData.append('mode', 'create');\r\n\t\t\t\t\t\tif (pictures.length > 0) {\r\n\t\t\t\t\t\t\tfor (let i = 0; i < pictures[pictures.length - 1].length; i++) {\r\n\t\t\t\t\t\t\t\tformData.append('images', pictures[pictures.length - 1][i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(pictures);\r\n\t\t\t\t\t\tconst res = await axios.post(\"/blog/create\", formData)\r\n\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\t\t\t\t_uploadResult = response.data;\r\n\t\t\t\t\t\t\t\t\tif (_uploadResult === 'Upload success') history.push('/bloglist');\r\n\t\t\t\t\t\t\t\t\telse history.push('/errorpage');\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{isLoggedIn ?\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"writer\">Writer</Label>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<Image src={user.profileImg}\r\n\t\t\t\t\t\t\t\twidth={IMG_WIDTH}\r\n\t\t\t\t\t\t\t\theight={IMG_LENGTH}\r\n\t\t\t\t\t\t\t\talt=\"171x180\"\r\n\t\t\t\t\t\t\t\troundedCircle />\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"writer\" value={user.userID} hidden />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t: <FormGroup>\r\n\t\t\t\t\t\t\t<Label for=\"writer\">Writer</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"writer\" placeholder=\"WRITER\" />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"title\">Title</Label>\r\n\t\t\t\t\t\t<Input type=\"text\" name=\"title\" placeholder=\"TITLE\" />\r\n\t\t\t\t\t</FormGroup>\r\n\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"desc\">Text Area</Label>\r\n\t\t\t\t\t\t<Input type=\"textarea\" name=\"desc\" placeholder=\"TEXT\" />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<ImageUploader\r\n\t\t\t\t\t\tname=\"imageUploader\"\r\n\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\twithIcon={true}\r\n\t\t\t\t\t\tonChange={onDrop}\r\n\t\t\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n\t\t\t\t\t\tmaxFileSize={5242880}\r\n\t\t\t\t\t\twithPreview={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button color=\"primary\" type=\"submit\">Submit</Button>\r\n\t\t\t\t</form>\r\n\t\t\t</article>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CreateBlogList;"]},"metadata":{},"sourceType":"module"}