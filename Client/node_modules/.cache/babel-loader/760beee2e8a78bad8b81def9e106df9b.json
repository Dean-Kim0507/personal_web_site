{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/BlogList.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let splittedImagePaths;\n  let [allBlogs, setAllBlogs] = useState([]); // let show = null;\n\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState(null);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = (id, data) => {\n    setShow(true);\n    doing(id);\n    setData(data);\n  };\n\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(response => {\n      console.log(response.data);\n      setAllBlogs(response.data);\n    });\n  }, []); // function doing(id) {\n  // \tlet i = 0;\n  // \twhile (i < allBlogs.length) {\n  // \t\tlet blog_id = allBlogs.id;\n  // \t\tconsole.log(id)\n  // \t\tif (id === blog_id) {\n  // \t\t\tsplittedImagePaths = allBlogs.imagePaths.split(',');\n  // \t\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\n  // \t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n  // \t\t\t\tconsole.log(splittedImagePaths[a]);\n  // \t\t\t}\n  // \t\t\treturn (\n  // \t\t\t);\n  // \t\t}\n  // \t\ti = i + 1;\n  // \t}\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"blogList_addBlog_button\",\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogList_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, allBlogs.map(data => {\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => handleShow(data.id, data),\n      key: data.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Launch demo modal\"));\n  }), console.log(data)));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogList.js"],"names":["React","useState","useEffect","Modal","Carousel","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","ReadBlogList","BlogList","props","splittedImagePaths","allBlogs","setAllBlogs","show","setShow","data","setData","handleClose","handleShow","id","doing","res","post","then","response","console","log","map","imagePaths","split","a","length","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Modal, Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\r\nimport '../css/BlogList.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props) {\r\n\r\n\tlet splittedImagePaths\r\n\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\t// let show = null;\r\n\tconst [show, setShow] = useState(false);\r\n\tconst [data, setData] = useState(null);\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = (id, data) => {\r\n\t\tsetShow(true);\r\n\t\tdoing(id);\r\n\t\tsetData(data);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst res = axios.post(\"/blog/list\")\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\tsetAllBlogs(response.data);\r\n\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\r\n\t// function doing(id) {\r\n\t// \tlet i = 0;\r\n\t// \twhile (i < allBlogs.length) {\r\n\t// \t\tlet blog_id = allBlogs.id;\r\n\t// \t\tconsole.log(id)\r\n\t// \t\tif (id === blog_id) {\r\n\t// \t\t\tsplittedImagePaths = allBlogs.imagePaths.split(',');\r\n\r\n\t// \t\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t// \t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t// \t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t// \t\t\t}\r\n\t// \t\t\treturn (\r\n\r\n\r\n\r\n\t// \t\t\t);\r\n\t// \t\t}\r\n\t// \t\ti = i + 1;\r\n\t// \t}\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"blogList_whole\">\r\n\t\t\t<Button className=\"blogList_addBlog_button\" variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t\t<br></br>\r\n\t\t\t<div className=\"blogList_list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tallBlogs.map((data) => {\r\n\r\n\t\t\t\t\t\tsplittedImagePaths = data.imagePaths.split(',');\r\n\t\t\t\t\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => handleShow(data.id, data)} key={data.id}>\r\n\t\t\t\t\t\t\t\t\tLaunch demo modal\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t{/* {() => {if(data.id == showingKeyNumber) setShow(true);\r\n\t\t\t\t\t\telse setShow(false)}} */}\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\t\t\t\t{console.log(data)}\r\n\t\t\t\t{/* < Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t<ReadBlogList key={allBlogs.id}\r\n\t\t\t\t\t\twriter={allBlogs.writer}\r\n\t\t\t\t\t\ttitle={allBlogs.title}\r\n\t\t\t\t\t\tdesc={allBlogs.desc}\r\n\t\t\t\t\t\timagePathArray={splittedImagePaths}\r\n\t\t\t\t\t\tcreatedAt={allBlogs.createdAt}\r\n\t\t\t\t\t\tupdatedAt={allBlogs.updatedAt}>\r\n\t\t\t\t\t</ReadBlogList>\r\n\t\t\t\t</Modal> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}