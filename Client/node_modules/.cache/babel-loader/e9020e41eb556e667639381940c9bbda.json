{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\CommunityComponents\\\\Components\\\\TOC.jsx\";\nimport React, { Component } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport TableHeaderColumn from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport { Badge } from 'react-bootstrap';\nconst {\n  SearchBar\n} = Search;\n\nconst format = require('date-format');\n\nclass TOC extends Component {\n  /*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n  concat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\n  shouldComponentUpdate(newProps, newState) {\n    console.log('===>TOC render shouldComponentUpdate', newProps.data, this.props.data);\n\n    if (this.props.data === newProps.data) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    let lists = [];\n    let data = this.props.data;\n    let i = 0;\n    const columns = [{\n      dataField: \"id\",\n      text: \"NO\",\n      sort: true,\n      headerStyle: (colum, colIndex) => {\n        return {\n          width: '5%',\n          textAlign: 'center'\n        };\n      }\n    }, {\n      dataField: \"title\",\n      text: \"TITLE\",\n      headerStyle: (colum, colIndex) => {\n        return {\n          width: '55%',\n          textAlign: 'center'\n        };\n      }\n    }, {\n      dataField: \"writer\",\n      text: \"NAME\",\n      headerStyle: (colum, colIndex) => {\n        return {\n          textAlign: 'center'\n        };\n      }\n    }, {\n      dataField: \"date\",\n      text: \"DATE\",\n      headerStyle: (colum, colIndex) => {\n        return {\n          textAlign: 'center'\n        };\n      }\n    }];\n    let nowDate = format.asString('MM-dd-yyyy', new Date());\n\n    while (i < data.length) {\n      let createdAt = data[i].createdAt;\n      let updatedAt = data[i].updatedAt;\n      let date;\n\n      let _createdDate = format.asString('MM-dd-yyyy', new Date(createdAt));\n\n      let _updatedDate = format.asString('MM-dd-yyyy', new Date(updatedAt));\n\n      let _createdAt = format.asString('hh:mm', new Date(createdAt));\n\n      let _updatedAt = format.asString('hh:mm', new Date(updatedAt));\n\n      if (_createdDate === nowDate && createdAt === updatedAt) {\n        date = _createdAt;\n      } else if (_updatedDate === nowDate) {\n        date = _updatedAt + '(Edited)';\n      } else if (createdAt === updatedAt) {\n        date = _createdDate;\n      } else date = '(Updated) ' + _updatedDate;\n\n      let title = /*#__PURE__*/React.createElement(\"a\", {\n        key: data[i].id,\n        href: \"/contents/\" + data[i].id,\n        \"data-id\": data[i].id // e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\n        ,\n        onClick: function (id, e) {\n          e.preventDefault();\n          this.props.onChangePage(id);\n        }.bind(this, data[i].id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }\n      }, data[i].title);\n      lists.push({\n        id: data[i].id,\n        title: title,\n        writer: data[i].writer,\n        date: date\n      });\n      i = i + 1;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n      keyField: \"id\",\n      data: lists,\n      columns: columns,\n      search: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, props => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(SearchBar, Object.assign({\n      placeholder: \"Search Unser Name\"\n    }, props.searchProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      keyField: \"id\",\n      data: lists,\n      columns: columns,\n      pagination: paginationFactory(),\n      sort: {\n        dataField: 'id',\n        order: 'desc'\n      }\n    }, props.baseProps, {\n      hover: true,\n      rowStyle: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }\n    }))))) // <Table striped bordered hover size=\"sm\">\n    // \t<thead>\n    // \t\t<tr>\n    // \t\t\t<th>#</th>\n    // \t\t\t<th>Title</th>\n    // \t\t\t<th>Name</th>\n    // \t\t\t<th>Date</th>\n    // \t\t</tr>\n    // \t</thead>\n    // \t<tbody>\n    // \t\t{lists}\n    // \t</tbody>\t\n    // </Table>\n    // <nav>\n    //   <ul>\n    // \t{lists}\n    //   </ul>\n    // </nav>\n    ;\n  }\n\n}\n\nexport default TOC;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/CommunityComponents/Components/TOC.jsx"],"names":["React","Component","BootstrapTable","TableHeaderColumn","paginationFactory","ToolkitProvider","Search","Badge","SearchBar","format","require","TOC","shouldComponentUpdate","newProps","newState","console","log","data","props","render","lists","i","columns","dataField","text","sort","headerStyle","colum","colIndex","width","textAlign","nowDate","asString","Date","length","createdAt","updatedAt","date","_createdDate","_updatedDate","_createdAt","_updatedAt","title","id","e","preventDefault","onChangePage","bind","push","writer","searchProps","order","baseProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport TableHeaderColumn from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport { Badge } from 'react-bootstrap';\r\nconst { SearchBar } = Search;\r\nconst format = require('date-format');\r\n\r\n\r\nclass TOC extends Component {\r\n\t/*상위 컴포넌트(여기서는 App) 바뀌엇을때 그 전부 하위 컴포넌트 불러오지 않기 위해(효율성 때문),\r\n\tconcat을 썻을때만 newProps 값 바뀌는거 알수있다, push 쓰면 원본도 바뀌므로 모름*/\r\n\tshouldComponentUpdate(newProps, newState) {\r\n\t\tconsole.log('===>TOC render shouldComponentUpdate', newProps.data, this.props.data);\r\n\r\n\t\tif (this.props.data === newProps.data) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet lists = [];\r\n\t\tlet data = this.props.data;\r\n\t\tlet i = 0;\r\n\r\n\t\tconst columns = [\r\n\t\t\t{\r\n\t\t\t\tdataField: \"id\", text: \"NO\", sort: true, headerStyle: (colum, colIndex) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twidth: '5%', textAlign: 'center'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdataField: \"title\", text: \"TITLE\", headerStyle: (colum, colIndex) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\twidth: '55%', textAlign: 'center'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdataField: \"writer\", text: \"NAME\", headerStyle: (colum, colIndex) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttextAlign: 'center'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdataField: \"date\", text: \"DATE\", headerStyle: (colum, colIndex) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttextAlign: 'center'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\t\twhile (i < data.length) {\r\n\t\t\tlet createdAt = data[i].createdAt;\r\n\t\t\tlet updatedAt = data[i].updatedAt;\r\n\t\t\tlet date;\r\n\t\t\tlet _createdDate = format.asString('MM-dd-yyyy', new Date(createdAt));\r\n\t\t\tlet _updatedDate = format.asString('MM-dd-yyyy', new Date(updatedAt));\r\n\t\t\tlet _createdAt = format.asString('hh:mm', new Date(createdAt));\r\n\t\t\tlet _updatedAt = format.asString('hh:mm', new Date(updatedAt));\r\n\r\n\t\t\tif (_createdDate === nowDate && createdAt === updatedAt) {\r\n\t\t\t\tdate = _createdAt;\r\n\t\t\t}\r\n\t\t\telse if (_updatedDate === nowDate) {\r\n\t\t\t\tdate = _updatedAt + '(Edited)';\r\n\t\t\t}\r\n\t\t\telse if (createdAt === updatedAt) {\r\n\t\t\t\tdate = _createdDate;\r\n\t\t\t}\r\n\t\t\telse date = '(Updated) ' + _updatedDate;\r\n\t\t\tlet title = <a key={data[i].id}\r\n\t\t\t\thref={\"/contents/\" + data[i].id}\r\n\t\t\t\tdata-id={data[i].id}// e.target.dataset.id 에 여기 넣은값이 들어가서추출가능\r\n\t\t\t\tonClick={function (id, e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tthis.props.onChangePage(id);\r\n\t\t\t\t}.bind(this, data[i].id)}\r\n\t\t\t>{data[i].title}</a>\r\n\t\t\tlists.push({ id: data[i].id, title: title, writer: data[i].writer, date: date });\r\n\t\t\ti = i + 1;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Table\">\r\n\t\t\t\t<ToolkitProvider\r\n\t\t\t\t\tkeyField=\"id\"\r\n\t\t\t\t\tdata={lists}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\tsearch\r\n\t\t\t\t>\r\n\t\t\t\t\t{props => (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<SearchBar placeholder=\"Search Unser Name\" {...props.searchProps} />\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<BootstrapTable\r\n\t\t\t\t\t\t\t\tkeyField=\"id\"\r\n\t\t\t\t\t\t\t\tdata={lists}\r\n\t\t\t\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\t\t\t\tpagination={paginationFactory()}\r\n\t\t\t\t\t\t\t\tsort={{ dataField: 'id', order: 'desc' }}\r\n\t\t\t\t\t\t\t\t{...props.baseProps}\r\n\t\t\t\t\t\t\t\thover={true}\r\n\t\t\t\t\t\t\t\trowStyle={{ textAlign: 'center' }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ToolkitProvider>\r\n\t\t\t</div>\r\n\r\n\t\t\t// <Table striped bordered hover size=\"sm\">\r\n\t\t\t// \t<thead>\r\n\t\t\t// \t\t<tr>\r\n\t\t\t// \t\t\t<th>#</th>\r\n\t\t\t// \t\t\t<th>Title</th>\r\n\t\t\t// \t\t\t<th>Name</th>\r\n\t\t\t// \t\t\t<th>Date</th>\r\n\t\t\t// \t\t</tr>\r\n\t\t\t// \t</thead>\r\n\t\t\t// \t<tbody>\r\n\t\t\t// \t\t{lists}\r\n\t\t\t// \t</tbody>\t\r\n\t\t\t// </Table>\r\n\t\t\t// <nav>\r\n\t\t\t//   <ul>\r\n\t\t\t// \t{lists}\r\n\t\t\t//   </ul>\r\n\t\t\t// </nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TOC;"]},"metadata":{},"sourceType":"module"}