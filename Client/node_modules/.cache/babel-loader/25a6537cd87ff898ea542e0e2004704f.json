{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\Board.js\";\nimport React, { Component } from 'react';\nimport TOC from \"./BoardComponents/TOC\";\nimport ReadContent from \"./BoardComponents/ReadContent\";\nimport Subject from \"./BoardComponents/Subject\";\nimport Control from \"./BoardComponents/Control\";\nimport UpdateContent from \"./BoardComponents/UpdateContent\";\nimport CreateContent from './BoardComponents/CreateContent';\nimport axios from 'axios';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'welcome',\n      selected_content_id: 0,\n      welcome: {\n        title: 'Welcome',\n        desc: 'Hello, React!!'\n      },\n      subject: {\n        title: 'Welcome to My project1',\n        sub: \"Developing Board...\"\n      },\n      contents: []\n    };\n    this.max_content_id = this.max_content_id;\n  } // receive data by using fetch\n\n\n  componentWillMount() {\n    fetch('/board/senddata').then(res => res.json()).then(data => this.setState({\n      contents: data.rows\n    }));\n  } // receive data by using axios (don't need to convert)\n\n\n  setData(_writer, _title, _desc, _mode) {\n    let data = {\n      writer: _writer,\n      title: _title,\n      description: _desc,\n      mode: _mode\n    };\n    axios.post('/board/receivedata', data).then(response => this.setState({\n      contents: response.data.rows[1]\n    })).catch(function (error) {\n      console.log(error);\n    });\n    console.log(this.state.contents); // <TOC \n    // onChangePage = {\n    // \tfunction(id){ \n    // \t  this.setState({\n    // \t\tmode:'read',\n    // \t\tselected_content_id:Number(id)//문자를 숫자로 변경해주는 함수 Number\n    // \t  });\n    // \t}.bind(this)\n    //   } data={this.state.contents}></TOC>\n    // \tfetch('http://localhost:4000/board/giveresult'\n    // \t,{\n    // \tmethod: 'POST',\n    // \theaders:{\n    // \t\t'Content-Type': 'application/json',\n    // \t\t'Accept': 'application/json'\n    // \t},\n    // \tbody:JSON.stringify(data)\n    // \t})\n    // \t.then (console.log(data))\n    // \t.then (res => res.json())\n    // \t.then (data => console.log(data));\n  }\n\n  getReadContent() {\n    var i = 0;\n\n    while (i < this.state.contents.length) {\n      var data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n        break;\n      }\n\n      i = i + 1;\n    }\n  }\n\n  getContent() {\n    var _title,\n        _writer,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'welcome') {// console.log(this.state.contents)\n      // this. max_content_id = this.state.contents[this.state.contents.length].id\n      // console.log(this.max_content_id)\n    } //read\n    else if (this.state.mode === 'read') {\n        var _content = this.getReadContent();\n\n        console.log(_content);\n        _article = /*#__PURE__*/React.createElement(ReadContent, {\n          writer: _content.writer,\n          title: _content.title,\n          desc: _content.description,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 16\n          }\n        });\n      } // Update\n      else if (this.state.mode === 'update') {\n          _content = this.getReadContent();\n          _article = /*#__PURE__*/React.createElement(UpdateContent, {\n            data: _content,\n            onSubmit: function (_id, _writer, _title, _desc) {\n              //add content to this.state.cotnents\n              var _contents = Array.from(this.state.contents);\n\n              var i = 0;\n\n              while (i < _contents.length) {\n                if (_contents[i].id === _id) {\n                  _contents[i] = {\n                    id: _id,\n                    writer: _writer,\n                    title: _title,\n                    description: _desc\n                  };\n                  break;\n                }\n\n                i = i + 1;\n              }\n\n              this.setState({\n                contents: _contents,\n                mode: 'read'\n              });\n              this.setData();\n            }.bind(this),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 16\n            }\n          });\n        }\n\n    return _article;\n  }\n\n  creatArticle() {\n    var _create = null; // Create\n\n    _create = /*#__PURE__*/React.createElement(CreateContent, {\n      onSubmit: function (_writer, _title, _desc) {\n        //add content to this.state.cotnents\n        // this.max_content_id= this.state.contents[this.state.contents.length-1].id+1;\n        // var _contents = Array.from(this.state.contents);\n        // _contents.push({id:this.max_content_id, writer: _writer, title:_title, description:_desc});\n        this.setData(_writer, _title, _desc, 'create');\n        this.setState({\n          // contents:_contents,\n          mode: 'read',\n          selected_content_id: this.state.contents[this.state.contents.length].id\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 14\n      }\n    });\n\n    if (this.state.mode != 'update') {\n      return _create;\n    } else return null;\n  }\n\n  createController() {\n    var _button = /*#__PURE__*/React.createElement(Control, {\n      onChangeMode: function (_mode) {\n        if (_mode === 'delete') {\n          if (window.confirm('really?')) {\n            var _content = Array.from(this.state.contents);\n\n            var i = 0;\n\n            while (i < this.state.contents.length) {\n              if (_content[i].id === this.state.selected_content_id) {\n                _content.splice(i, 1);\n\n                break;\n              }\n\n              i = i + 1;\n            }\n\n            this.setState({\n              mode: 'welcome',\n              contents: _content\n            });\n            alert('deleted!'); // this.setData();\n          }\n        } else {\n          this.setState({\n            mode: _mode\n          });\n        }\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    });\n\n    if (this.state.mode != 'welcome') {\n      return _button;\n    } else return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        this.setState({\n          mode: 'welcome'\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 3\n      }\n    }), /*#__PURE__*/React.createElement(TOC, {\n      onChangePage: function (id) {\n        this.setState({\n          mode: 'read',\n          selected_content_id: Number(id) //문자를 숫자로 변경해주는 함수 Number\n\n        });\n      }.bind(this),\n      data: this.state.contents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 3\n      }\n    }), this.getContent(), this.createController(), this.creatArticle());\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/Board.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","UpdateContent","CreateContent","axios","Board","constructor","props","state","mode","selected_content_id","welcome","title","desc","subject","sub","contents","max_content_id","componentWillMount","fetch","then","res","json","data","setState","rows","setData","_writer","_title","_desc","_mode","writer","description","post","response","catch","error","console","log","getReadContent","i","length","id","getContent","_article","_content","_id","_contents","Array","from","bind","creatArticle","_create","createController","_button","window","confirm","splice","alert","render","Number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport TOC from \"./BoardComponents/TOC\"\r\nimport ReadContent from \"./BoardComponents/ReadContent\"\r\nimport Subject from \"./BoardComponents/Subject\"\r\nimport Control from \"./BoardComponents/Control\"\r\nimport UpdateContent from \"./BoardComponents/UpdateContent\"\r\nimport CreateContent from './BoardComponents/CreateContent';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Board extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state ={\r\n\t\tmode:'welcome',\r\n      \tselected_content_id:0,\r\n      \twelcome:{title:'Welcome', desc:'Hello, React!!'},\r\n      \tsubject:{title:'Welcome to My project1', sub:\"Developing Board...\"},\r\n\t\tcontents:[]\r\n\t}\r\n\tthis.max_content_id=this.max_content_id;\r\n\r\n}\t\r\n\t// receive data by using fetch\r\n\tcomponentWillMount() {\r\n\t\t\r\n\t\tfetch('/board/senddata')\r\n\t\t.then (res => res.json())\r\n\t\t.then (data => this.setState({contents: data.rows}));\r\n\t}\r\n\r\n\t// receive data by using axios (don't need to convert)\r\n\tsetData(_writer,_title,_desc,_mode) {\r\n\t\t\r\n\t\tlet data = {\r\n\t\t\twriter:_writer,\r\n\t\t\ttitle:_title,\r\n\t\t\tdescription:_desc,\r\n\t\t\tmode:_mode\r\n\t\t}\r\n\r\n\t\taxios.post('/board/receivedata',\r\n\t\t\tdata)\r\n\t\t.then(response => \r\n\t\t\tthis.setState({contents: response.data.rows[1]}))\r\n\t\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t\t});\r\n\t\tconsole.log(this.state.contents);\r\n\r\n\t\t// <TOC \r\n\t\t// onChangePage = {\r\n\t\t// \tfunction(id){ \r\n\t\t// \t  this.setState({\r\n\t\t// \t\tmode:'read',\r\n\t\t// \t\tselected_content_id:Number(id)//문자를 숫자로 변경해주는 함수 Number\r\n\t\t// \t  });\r\n\t\t// \t}.bind(this)\r\n\t\t//   } data={this.state.contents}></TOC>\r\n\t\t\r\n\t// \tfetch('http://localhost:4000/board/giveresult'\r\n\t// \t,{\r\n\t// \tmethod: 'POST',\r\n\t// \theaders:{\r\n\t// \t\t'Content-Type': 'application/json',\r\n    // \t\t'Accept': 'application/json'\r\n\t// \t},\r\n\t// \tbody:JSON.stringify(data)\r\n\t\t\r\n\t// \t})\r\n\t// \t.then (console.log(data))\r\n\t// \t.then (res => res.json())\r\n\t// \t.then (data => console.log(data));\r\n  \t}\r\n\t\r\n\r\n\tgetReadContent(){\r\n\t\tvar i =0;\r\n\t\t  while(i<this.state.contents.length){\r\n\t\t\tvar data = this.state.contents[i];\r\n\t\t\tif(data.id === this.state.selected_content_id){\r\n\t\t\t  return data;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t\ti=i+1;\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\tgetContent(){\r\n\t\tvar _title, _writer, _desc,_article = null;\r\n\t\tif(this.state.mode ==='welcome'){\r\n\t\t\t// console.log(this.state.contents)\r\n\t\t\t// this. max_content_id = this.state.contents[this.state.contents.length].id\r\n\t\t\t// console.log(this.max_content_id)\r\n\t\t}\r\n\r\n\t\t//read\r\n\t\telse if (this.state.mode ==='read'){\r\n\t\t  var _content = this.getReadContent();\r\n\t\t\tconsole.log(_content);\r\n\t\t  _article = <ReadContent writer={_content.writer} title= {_content.title} desc= {_content.description} ></ReadContent>\r\n\t\t}\r\n\r\n\t\t// Update\r\n\t\telse if(this.state.mode ==='update'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t  _article = <UpdateContent data = {_content} onSubmit={\r\n\t\t\tfunction(_id, _writer, _title, _desc){\r\n\t\t\t  //add content to this.state.cotnents\r\n\t\t\t  var _contents = Array.from(this.state.contents);\r\n\t\t\t  var i =0;\r\n\t\t\t  while(i<_contents.length){\r\n\t\t\t\tif(_contents[i].id ===_id){\r\n\t\t\t\t  _contents[i] = {id:_id, writer:_writer, title:_title, description:_desc};\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\ti=i+1;\r\n\t\t\t  }\r\n\t\t\t  this.setState({\r\n\t\t\t\tcontents:_contents,\r\n\t\t\t\tmode:'read'\r\n\t\t\t  });\r\n\t\t\tthis.setData();\r\n\t\t\t}.bind(this)\r\n\t\t  }></UpdateContent>\r\n\t\t \r\n\t\t}\r\n\t\treturn _article;\r\n\t  }\r\n\r\n\t  creatArticle(){\r\n\t\tvar _create = null;\r\n\t\t\t// Create\r\n\t\t\t_create = <CreateContent onSubmit={\r\n\t\t\t\tfunction(_writer,_title,_desc){\r\n\t\t\t\t//add content to this.state.cotnents\r\n\t\t\t\t// this.max_content_id= this.state.contents[this.state.contents.length-1].id+1;\r\n\t\t\t\t// var _contents = Array.from(this.state.contents);\r\n\t\t\t\t// _contents.push({id:this.max_content_id, writer: _writer, title:_title, description:_desc});\r\n\t\t\t\tthis.setData(_writer,_title,_desc,'create');\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t// contents:_contents,\r\n\t\t\t\t\tmode:'read',\r\n\t\t\t\t\tselected_content_id:this.state.contents[this.state.contents.length].id\r\n\t\t\t\t});\r\n\t\t\t\t}.bind(this)\r\n\t\t\t}></CreateContent>\r\n\t\t\tif(this.state.mode!='update'){\r\n\t\t\treturn _create;\r\n\t\t\t}\r\n\t\t\telse return null;\t\r\n\t  }\r\n\r\n\t  createController() {\r\n\t\tvar _button = <Control onChangeMode={function(_mode){\r\n\t\t\tif(_mode === 'delete'){\r\n\t\t\t  if(window.confirm('really?')){\r\n\t\t\t\tvar _content = Array.from(this.state.contents);\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\twhile(i<this.state.contents.length){\r\n\t\t\t\t  if(_content[i].id === this.state.selected_content_id){\r\n\t\t\t\t\t_content.splice(i,1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t  }\r\n\t\t\t\t  i =i+1\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  mode:'welcome',\r\n\t\t\t\t  contents:_content,\r\n\t\t\t\t});\r\n\t\t\t\talert('deleted!');\r\n\t\t\t\t// this.setData();\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\tthis.setState({\r\n\t\t\t  mode:_mode\r\n\t\t\t});\r\n\t\t\t\r\n\t\t  }\r\n\t\t  }.bind(this)}></Control>\r\n\t\tif(this.state.mode != 'welcome'){\r\n\t\t  return _button;\r\n\t\t}\r\n\t\telse return null;\r\n\t  }\r\n\r\n\t  render(){\r\n    \r\n\t\treturn(\r\n\t\t<div className=\"App\">\r\n\t\t<Subject title={this.state.subject.title} \r\n\t\tsub={this.state.subject.sub}\r\n\t\tonChangePage={function(){\r\n\t\t  this.setState({mode:'welcome'});\r\n\t\t  \r\n\t\t}.bind(this)}\r\n\t\t></Subject>\r\n\r\n\t\t<TOC onChangePage = {\r\n\t\t  function(id){ \r\n\t\t\tthis.setState({\r\n\t\t\t  mode:'read',\r\n\t\t\t  selected_content_id:Number(id)//문자를 숫자로 변경해주는 함수 Number\r\n\t\t\t});\r\n\t\t  }.bind(this)\r\n\t\t} data={this.state.contents}></TOC>\r\n\r\n\t\t{this.getContent()}\r\n\t\t\r\n\t\t{this.createController()}\r\n\t\r\n\t\t{this.creatArticle()}\r\n\t\t</div>\r\n\t\t);\r\n\t  }\r\n\t}\r\n\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}