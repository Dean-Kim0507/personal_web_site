{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\ReadBlogList.js\";\n\n/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Carousel, Image, Button, Accordion, InputGroup, FormControl } from 'react-bootstrap';\nimport BlogComments from './BlogComments';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst format = require('date-format');\n\nfunction ReadBlogList(props) {\n  let id = props.id;\n  let title = props.title;\n  let desc = props.desc;\n  let writer = props.writer;\n  let imagePathArray = props.imagePathArray;\n  let createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\n  let updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\n  let comments = props.comments;\n  let blog_date;\n  let nowDate = format.asString('MM-dd-yyyy', new Date());\n  let ReadBlogList_keyValue = -1;\n  let carousel_control_indicators = true;\n  let image_path;\n  let _uploadResult = '';\n  let history = useHistory();\n  let [seeMode, setSeeMode] = useState('See More');\n  let [seeMode_commentSubmitButton, setCommentButton] = useState(true);\n\n  const changeSeeMode = () => {\n    if (seeMode === 'See More') setSeeMode('See Less');else setSeeMode('See More');\n  };\n\n  const sendComment = async e => {\n    e.preventDefault();\n    let comment = {\n      body: e.target.comment_form_control.value,\n      id: id\n    };\n    await axios.post(\"/blog/comments\", comment).then(response => {\n      _uploadResult = response.data;\n      if (_uploadResult === 'Upload success') console.log(_uploadResult);else history.push('/errorpage');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const commentSubmitButton = e => {\n    let comment = e.target.value;\n    console.log(comment);\n    if (comment.length > 0) setCommentButton(false);else setCommentButton(true);\n  }; //Decision of showing arrow in the pictures\n\n\n  if (imagePathArray.length > 1) carousel_control_indicators = true;else carousel_control_indicators = false; // Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\n\n  if (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));else if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));else if (createdAt === updatedAt) blog_date = createdAt;else blog_date = '(updated) ' + updatedAt;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    key: id,\n    className: \"readBlogList_eachCard\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    controls: carousel_control_indicators,\n    indicators: carousel_control_indicators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, imagePathArray.map(data => {\n    ReadBlogList_keyValue = ReadBlogList_keyValue + 1; // If user doesn't add any image, show the No_Image.jpg\n\n    if (imagePathArray[0] === \"\") {\n      image_path = \"/uploadImages/No_Image.jpg\";\n    } else image_path = data;\n\n    return /*#__PURE__*/React.createElement(Carousel.Item, {\n      key: ReadBlogList_keyValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: \"readBlogList_blogImages\",\n      src: image_path,\n      alt: \"BlogImages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }\n  }, desc), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, \"Date: \", blog_date)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: sendComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, comments[0], /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    onClick: changeSeeMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, seeMode))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlogComments, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"comment_input_group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Comment\",\n    \"aria-label\": \"Comment\",\n    \"aria-describedby\": \"blog_comment\",\n    name: \"comment_form_control\",\n    onChange: commentSubmitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    type: \"submit\",\n    disabled: seeMode_commentSubmitButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Submit\")))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_delete_button\",\n    variant: \"light\",\n    href: `/bloglist/delete/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ReadBlogList_update_button\",\n    variant: \"light\",\n    href: `/bloglist/update/${id}/${writer}`,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 6\n    }\n  }, \"Edit\"))));\n}\n\nexport default ReadBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/ReadBlogList.js"],"names":["React","useState","useEffect","Card","Carousel","Image","Button","Accordion","InputGroup","FormControl","BlogComments","axios","useHistory","format","require","ReadBlogList","props","id","title","desc","writer","imagePathArray","createdAt","asString","Date","updatedAt","comments","blog_date","nowDate","ReadBlogList_keyValue","carousel_control_indicators","image_path","_uploadResult","history","seeMode","setSeeMode","seeMode_commentSubmitButton","setCommentButton","changeSeeMode","sendComment","e","preventDefault","comment","body","target","comment_form_control","value","post","then","response","data","console","log","push","catch","error","commentSubmitButton","length","width","map"],"mappings":"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","sourcesContent":["/**\r\n * last updated: Nov 26 2020\r\n * Author: Dean Kim (dean.kim0507@gmail.com)\r\n *\r\n * This page return the selected blog images and information to Modal in blogList page.\r\n * Props get the information and images from blogList and put in to the card(bootstrap) and carousel, then returned to modal in BlogList.\r\n * About date, if created date is today, it shows with time and date, if not, it shows just date. \r\n * \r\n * Map: RedBlogList, CreateBlogList - > BlogList.js -> Body.js -> index.js - > index.html\r\n * (Storing to Database) Http: CreateBlogList (Client) -> blogDataController (server)\r\n * (Retrieving from Database) Http: ReadBlogList (server) - > BlogList.js (Client)\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Carousel, Image, Button, Accordion, InputGroup, FormControl } from 'react-bootstrap';\r\nimport BlogComments from './BlogComments'\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst format = require('date-format');\r\n\r\nfunction ReadBlogList(props) {\r\n\tlet id = props.id;\r\n\tlet title = props.title;\r\n\tlet desc = props.desc;\r\n\tlet writer = props.writer;\r\n\tlet imagePathArray = props.imagePathArray;\r\n\tlet createdAt = format.asString('MM-dd-yyyy', new Date(props.createdAt));\r\n\tlet updatedAt = format.asString('MM-dd-yyyy', new Date(props.updatedAt));\r\n\tlet comments = props.comments;\r\n\tlet blog_date;\r\n\tlet nowDate = format.asString('MM-dd-yyyy', new Date());\r\n\tlet ReadBlogList_keyValue = -1;\r\n\tlet carousel_control_indicators = true\r\n\tlet image_path;\r\n\tlet _uploadResult = '';\r\n\tlet history = useHistory();\r\n\r\n\tlet [seeMode, setSeeMode] = useState('See More');\r\n\tlet [seeMode_commentSubmitButton, setCommentButton] = useState(true);\r\n\r\n\tconst changeSeeMode = () => {\r\n\t\tif (seeMode === 'See More') setSeeMode('See Less');\r\n\t\telse setSeeMode('See More');\r\n\t}\r\n\r\n\tconst sendComment = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet comment =\r\n\t\t{\r\n\t\t\tbody: e.target.comment_form_control.value,\r\n\t\t\tid: id\r\n\t\t}\r\n\t\tawait axios.post(\"/blog/comments\", comment)\r\n\t\t\t.then(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\t_uploadResult = response.data;\r\n\t\t\t\t\tif (_uploadResult === 'Upload success') console.log(_uploadResult);\r\n\t\t\t\t\telse history.push('/errorpage');\r\n\t\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst commentSubmitButton = (e) => {\r\n\t\tlet comment = e.target.value;\r\n\t\tconsole.log(comment)\r\n\t\tif (comment.length > 0) setCommentButton(false);\r\n\t\telse setCommentButton(true);\r\n\t}\r\n\t//Decision of showing arrow in the pictures\r\n\tif (imagePathArray.length > 1) carousel_control_indicators = true;\r\n\telse carousel_control_indicators = false;\r\n\r\n\t// Showing the time, blog was added or editted. If blog is added on today, the footer show the time and date.\r\n\tif (createdAt === nowDate) blog_date = format.asString('hh:mm MM-dd-yyyy', new Date(props.createdAt));\r\n\telse if (updatedAt === nowDate) blog_date = format.asString('(updated) hh:mm MM-dd-yyyy', new Date(props.updatedAt));\r\n\telse if (createdAt === updatedAt) blog_date = createdAt;\r\n\telse blog_date = '(updated) ' + updatedAt;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card key={id} className=\"readBlogList_eachCard\" style={{ width: '100%' }}>\r\n\t\t\t\t<Carousel interval={null} controls={carousel_control_indicators} indicators={carousel_control_indicators}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timagePathArray.map((data) => {\r\n\t\t\t\t\t\t\tReadBlogList_keyValue = ReadBlogList_keyValue + 1;\r\n\t\t\t\t\t\t\t// If user doesn't add any image, show the No_Image.jpg\r\n\t\t\t\t\t\t\tif (imagePathArray[0] === \"\") {\r\n\t\t\t\t\t\t\t\timage_path = \"/uploadImages/No_Image.jpg\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse image_path = data;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Carousel.Item key={ReadBlogList_keyValue}>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"readBlogList_blogImages\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={image_path}\r\n\t\t\t\t\t\t\t\t\t\talt='BlogImages'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Carousel.Item>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</Carousel>\r\n\t\t\t\t<Card.Body >\r\n\t\t\t\t\t<Card.Title>{title}</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t<small className=\"text-muted\">Date: {blog_date}</small>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t<form action='' method=\"post\" onSubmit={sendComment}>\r\n\t\t\t\t\t\t<Accordion >\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t\t{comments[0]}\r\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\t\t<small onClick={changeSeeMode}>{seeMode}</small>\r\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\t<BlogComments comments={comments} />\r\n\t\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"comment_input_group\">\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Comment\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Comment\"\r\n\t\t\t\t\t\t\t\t\t\taria-describedby=\"blog_comment\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"comment_form_control\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={commentSubmitButton}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Append>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" type=\"submit\" disabled={seeMode_commentSubmitButton}>Submit</Button>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Append>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<Button className=\"ReadBlogList_delete_button\" variant=\"light\" href={`/bloglist/delete/${id}/${writer}`} key={id}>Delete</Button>\r\n\t\t\t\t\t<Button className=\"ReadBlogList_update_button\" variant=\"light\" href={`/bloglist/update/${id}/${writer}`} key={id}>Edit</Button>\r\n\t\t\t\t</Card.Footer>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ReadBlogList;"]},"metadata":{},"sourceType":"module"}