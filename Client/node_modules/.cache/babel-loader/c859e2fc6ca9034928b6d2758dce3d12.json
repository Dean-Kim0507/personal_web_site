{"ast":null,"code":"import axios from \"axios\"; // import { user } from \"../../../server/mysql\";\n\nimport authHeader from \"./Auth.header\";\nimport { RESET_PASSWORD, USER_UPDATE, WRONG_PASSWORD, USER_UPDATE_SUCCESS, DELETE_ACCOUNT, DELETE_ACCOUNT_SUCCESS, UNAUTHORIZED } from \"../Components/type\";\nimport \"../Components/type\";\nimport { useDispatch, useSelector } from \"react-redux\";\nlet formData; //if registration success, return \"Registration success\"\n\nconst register = async (user_data, imgFile) => {\n  console.log(user_data, imgFile);\n  formData = new FormData();\n  formData.append('userID', user_data.userID);\n  formData.append('password', user_data.password);\n  formData.append('firstName', user_data.firstName);\n  formData.append('lastName', user_data.lastName);\n  formData.append('email', user_data.email);\n  formData.append('imgFile', imgFile); // for (var pair of formData.entries()) { console.log(pair[0] + ', ' + pair[1]); }\n\n  return await axios.post(\"/registration\", formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\nconst login = (userID, password) => {\n  const login_Data = {\n    userID: userID,\n    password: password\n  };\n  return axios.post(\"/login\", login_Data).then(response => {\n    console.log(response.data);\n\n    if (response.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst userUpdate = async (user_data, imgFile) => {\n  formData = new FormData();\n\n  if (user_data.type === USER_UPDATE) {\n    formData.append('userID', user_data.userID);\n    formData.append('firstName', user_data.firstName);\n    formData.append('lastName', user_data.lastName);\n    formData.append('email', user_data.email);\n    formData.append('type', user_data.type);\n    formData.append('imgFile', imgFile);\n  } else if (user_data.type === RESET_PASSWORD) {\n    formData.append('userID', user_data.userID);\n    formData.append('currentPassword', user_data.currentPassword);\n    formData.append('newPassword', user_data.newPassword);\n    formData.append('type', user_data.type);\n  } else if (user_data.type === DELETE_ACCOUNT) {\n    formData.append('userID', user_data.userID);\n    formData.append('password', user_data.password);\n    formData.append('type', user_data.type);\n  }\n\n  for (var pair of formData.entries()) {\n    console.log(pair[0] + ', ' + pair[1]);\n  }\n\n  return await axios.post(\"/userupdate\", formData, {\n    headers: authHeader()\n  }).then(response => {\n    if (response.message == USER_UPDATE_SUCCESS) {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    } // else if (response.message == DELETE_ACCOUNT_SUCCESS) {\n    // \tlogout();\n    // \treturn response.data;\n    // }\n    else return response.data;\n  });\n};\n\nconst loginValid = () => {\n  return axios.get(\"/islogedin\", {\n    headers: authHeader()\n  });\n};\n\nconst invalid_movePage = () => {\n  const {\n    message\n  } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n  dispatch({\n    type: SET_MESSAGE,\n    payload: null\n  });\n};\n\nexport default {\n  register,\n  login,\n  logout,\n  userUpdate,\n  loginValid\n};","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Services/Auth.service.jsx"],"names":["axios","authHeader","RESET_PASSWORD","USER_UPDATE","WRONG_PASSWORD","USER_UPDATE_SUCCESS","DELETE_ACCOUNT","DELETE_ACCOUNT_SUCCESS","UNAUTHORIZED","useDispatch","useSelector","formData","register","user_data","imgFile","console","log","FormData","append","userID","password","firstName","lastName","email","post","headers","login","login_Data","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","userUpdate","type","currentPassword","newPassword","pair","entries","message","loginValid","get","invalid_movePage","state","dispatch","SET_MESSAGE","payload"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n// import { user } from \"../../../server/mysql\";\r\nimport authHeader from \"./Auth.header\";\r\nimport {\r\n\tRESET_PASSWORD,\r\n\tUSER_UPDATE,\r\n\tWRONG_PASSWORD,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tDELETE_ACCOUNT,\r\n\tDELETE_ACCOUNT_SUCCESS,\r\n\tUNAUTHORIZED\r\n} from \"../Components/type\";\r\nimport {\r\n\r\n} from \"../Components/type\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nlet formData;\r\n//if registration success, return \"Registration success\"\r\nconst register = async (user_data, imgFile) => {\r\n\tconsole.log(user_data, imgFile)\r\n\tformData = new FormData();\r\n\tformData.append('userID', user_data.userID);\r\n\tformData.append('password', user_data.password);\r\n\tformData.append('firstName', user_data.firstName);\r\n\tformData.append('lastName', user_data.lastName);\r\n\tformData.append('email', user_data.email);\r\n\tformData.append('imgFile', imgFile);\r\n\t// for (var pair of formData.entries()) { console.log(pair[0] + ', ' + pair[1]); }\r\n\treturn await axios.post(\"/registration\", formData\r\n\t\t, {\r\n\t\t\theaders: { 'Content-Type': 'multipart/form-data' }\r\n\t\t}\r\n\t)\r\n}\r\n\r\nconst login = (userID, password) => {\r\n\tconst login_Data = {\r\n\t\tuserID: userID,\r\n\t\tpassword: password\r\n\t}\r\n\treturn axios.post(\"/login\", login_Data)\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response.data)\r\n\t\t\tif (response.data.accessToken) {\r\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\t\t\t}\r\n\t\t\treturn response.data;\r\n\t\t});\r\n};\r\n\r\nconst logout = () => {\r\n\tlocalStorage.removeItem(\"user\");\r\n};\r\n\r\nconst userUpdate = async (user_data, imgFile) => {\r\n\tformData = new FormData();\r\n\tif (user_data.type === USER_UPDATE) {\r\n\t\tformData.append('userID', user_data.userID);\r\n\t\tformData.append('firstName', user_data.firstName);\r\n\t\tformData.append('lastName', user_data.lastName);\r\n\t\tformData.append('email', user_data.email);\r\n\t\tformData.append('type', user_data.type);\r\n\t\tformData.append('imgFile', imgFile);\r\n\t}\r\n\telse if (user_data.type === RESET_PASSWORD) {\r\n\t\tformData.append('userID', user_data.userID);\r\n\t\tformData.append('currentPassword', user_data.currentPassword);\r\n\t\tformData.append('newPassword', user_data.newPassword);\r\n\t\tformData.append('type', user_data.type);\r\n\t}\r\n\telse if (user_data.type === DELETE_ACCOUNT) {\r\n\t\tformData.append('userID', user_data.userID);\r\n\t\tformData.append('password', user_data.password);\r\n\t\tformData.append('type', user_data.type);\r\n\t}\r\n\tfor (var pair of formData.entries()) { console.log(pair[0] + ', ' + pair[1]); }\r\n\treturn await axios.post(\"/userupdate\", formData\r\n\t\t, {\r\n\t\t\theaders: authHeader()\r\n\t\t}\r\n\t)\r\n\t\t.then((response) => {\r\n\t\t\tif (response.message == USER_UPDATE_SUCCESS) {\r\n\t\t\t\tif (response.data.accessToken) {\r\n\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\t\t\t\t}\r\n\t\t\t\treturn response.data;\r\n\t\t\t}\r\n\t\t\t// else if (response.message == DELETE_ACCOUNT_SUCCESS) {\r\n\t\t\t// \tlogout();\r\n\t\t\t// \treturn response.data;\r\n\t\t\t// }\r\n\t\t\telse return response.data;\r\n\t\t})\r\n}\r\n\r\nconst loginValid = () => {\r\n\treturn axios.get(\"/islogedin\", { headers: authHeader() })\r\n}\r\n\r\nconst invalid_movePage = () => {\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst dispatch = useDispatch();\r\n\tdispatch({\r\n\t\ttype: SET_MESSAGE,\r\n\t\tpayload: null,\r\n\t});\r\n}\r\nexport default {\r\n\tregister,\r\n\tlogin,\r\n\tlogout,\r\n\tuserUpdate,\r\n\tloginValid\r\n};"]},"metadata":{},"sourceType":"module"}