{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\Register.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap'; // import { Formik } from 'formik';\n// let yup = require('yup');\n// const { Formik } = formik;\n\nfunction Register(props) {\n  const [validated, setValidated] = useState(false);\n  const [userID, setUserId] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword_invalid, setConfirmPassword_invalid] = useState(false);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [userIdFeedBack, setUserIdFeedBack] = useState(null);\n  const [userIdInvalid, setUserIdInvalid] = useState(false);\n  const [passwordInvalid, setPasswordInvalid] = useState(false);\n  const [buttonInvalid, setButtonInvalid] = useState(false);\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    } else {}\n  };\n\n  const onChangeUserID = e => {\n    const userID = e.target.value;\n\n    if (userID.length < 9 || userID.length > 20) {\n      setUserIdInvalid(true);\n      setUserIdFeedBack(\"Please choose a user ID with 8 to 20 characters.\");\n    } else {\n      setUserIdInvalid(false);\n      setUserId(userID);\n    }\n\n    if (userIdInvalid && confirmPassword_invalid && passwordInvalid) {\n      setButtonInvalid(true);\n    }\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n\n    if (password.length < 9 || password.length > 20) {\n      setPasswordInvalid(true);\n    } else {\n      setPasswordInvalid(false);\n      setPassword(password);\n    }\n\n    if (userIdInvalid && confirmPassword_invalid && passwordInvalid) {\n      setButtonInvalid(true);\n    }\n  };\n\n  const onChangeConfirmPassword = e => {\n    const confirm_password = e.target.value;\n\n    if (confirm_password === password) {\n      setConfirmPassword_invalid(false);\n      setPassword(confirm_password);\n    } else setConfirmPassword_invalid(true);\n\n    if (!userIdInvalid && !confirmPassword_invalid && !passwordInvalid) {\n      setButtonInvalid(true);\n      console.log('what');\n    }\n  };\n\n  const onChangeFirstName = e => {\n    const first_Name = e.target.value;\n    setFirstName(firstName);\n  };\n\n  const onChangeLastName = e => {\n    const last_Name = e.target.value;\n    setLastName(last_Name);\n  };\n\n  const onChangeEmail = e => {\n    const e_mail = e.target.value;\n    setEmail(e_mail);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"userId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"User ID\",\n    onChange: onChangeUserID,\n    isInvalid: userIdInvalid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, userIdFeedBack)), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: onChangePassword,\n    isInvalid: passwordInvalid,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, \"Please choose a new password with at least 8 characters\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"confirm_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    required: true,\n    isInvalid: confirmPassword_invalid,\n    onChange: onChangeConfirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, \"Please make sure this matches your password..\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name\",\n    onChange: onChangeFirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid First Name.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Last name\",\n    onChange: onChangeLastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid Last Name.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email address\",\n    onChange: onChangeEmail,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, \"Please provide a valid Email.\")), userIdInvalid && passwordInvalid && confirmPassword_invalid ? /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, \"Submit\") : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/Register.jsx"],"names":["React","useState","Button","Form","Col","InputGroup","Register","props","validated","setValidated","userID","setUserId","password","setPassword","confirmPassword_invalid","setConfirmPassword_invalid","firstName","setFirstName","lastName","setLastName","email","setEmail","userIdFeedBack","setUserIdFeedBack","userIdInvalid","setUserIdInvalid","passwordInvalid","setPasswordInvalid","buttonInvalid","setButtonInvalid","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","onChangeUserID","e","target","value","length","onChangePassword","onChangeConfirmPassword","confirm_password","console","log","onChangeFirstName","first_Name","onChangeLastName","last_Name","onChangeEmail","e_mail"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\r\n// import { Formik } from 'formik';\r\n// let yup = require('yup');\r\n// const { Formik } = formik;\r\n\r\n\r\nfunction Register(props) {\r\n\tconst [validated, setValidated] = useState(false);\r\n\tconst [userID, setUserId] = useState(null);\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [confirmPassword_invalid, setConfirmPassword_invalid] = useState(false);\r\n\tconst [firstName, setFirstName] = useState(null);\r\n\tconst [lastName, setLastName] = useState(null);\r\n\tconst [email, setEmail] = useState(null);\r\n\tconst [userIdFeedBack, setUserIdFeedBack] = useState(null);\r\n\tconst [userIdInvalid, setUserIdInvalid] = useState(false);\r\n\tconst [passwordInvalid, setPasswordInvalid] = useState(false);\r\n\tconst [buttonInvalid, setButtonInvalid] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tconst form = event.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tconst onChangeUserID = (e) => {\r\n\t\tconst userID = e.target.value;\r\n\t\tif (userID.length < 9 || userID.length > 20) {\r\n\t\t\tsetUserIdInvalid(true);\r\n\t\t\tsetUserIdFeedBack(\"Please choose a user ID with 8 to 20 characters.\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetUserIdInvalid(false);\r\n\t\t\tsetUserId(userID);\r\n\t\t}\r\n\r\n\t\tif (userIdInvalid && confirmPassword_invalid && passwordInvalid) {\r\n\t\t\tsetButtonInvalid(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangePassword = (e) => {\r\n\t\tconst password = e.target.value;\r\n\t\tif (password.length < 9 || password.length > 20) {\r\n\t\t\tsetPasswordInvalid(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetPassword(password);\r\n\t\t}\r\n\r\n\t\tif (userIdInvalid && confirmPassword_invalid && passwordInvalid) {\r\n\t\t\tsetButtonInvalid(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangeConfirmPassword = (e) => {\r\n\t\tconst confirm_password = e.target.value;\r\n\t\tif (confirm_password === password) {\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetPassword(confirm_password);\r\n\t\t}\r\n\t\telse setConfirmPassword_invalid(true);\r\n\r\n\t\tif (!userIdInvalid && !confirmPassword_invalid && !passwordInvalid) {\r\n\t\t\tsetButtonInvalid(true);\r\n\t\t\tconsole.log('what')\r\n\t\t}\r\n\t};\r\n\r\n\tconst onChangeFirstName = (e) => {\r\n\t\tconst first_Name = e.target.value;\r\n\t\tsetFirstName(firstName);\r\n\t};\r\n\r\n\tconst onChangeLastName = (e) => {\r\n\t\tconst last_Name = e.target.value;\r\n\t\tsetLastName(last_Name);\r\n\t};\r\n\r\n\tconst onChangeEmail = (e) => {\r\n\t\tconst e_mail = e.target.value;\r\n\t\tsetEmail(e_mail);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form validated={validated} onSubmit={handleSubmit}>\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"userId\">\r\n\t\t\t\t<Form.Label>User ID</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" placeholder=\"User ID\" onChange={onChangeUserID} isInvalid={userIdInvalid} />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t{userIdFeedBack}\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"password\">\r\n\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" onChange={onChangePassword} isInvalid={passwordInvalid} required />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease choose a new password with at least 8 characters\r\n          \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"confirm_password\">\r\n\t\t\t\t<Form.Label>Confirm Password</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tisInvalid={confirmPassword_invalid}\r\n\t\t\t\t\tonChange={onChangeConfirmPassword}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease make sure this matches your password..\r\n          \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"firstName\">\r\n\t\t\t\t<Form.Label>First name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\trequired\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"First name\"\r\n\t\t\t\t\tonChange={onChangeFirstName}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid First Name.\r\n\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"lastName\">\r\n\t\t\t\t<Form.Label>Last name</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\trequired\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Last name\"\r\n\t\t\t\t\tonChange={onChangeLastName}\r\n\t\t\t\t/>\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid Last Name.\r\n\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\r\n\r\n\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"email\">\r\n\t\t\t\t<Form.Label>Email address</Form.Label>\r\n\t\t\t\t<Form.Control type=\"email\" placeholder=\"Email address\" onChange={onChangeEmail} required />\r\n\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\tPlease provide a valid Email.\r\n         \t\t</Form.Control.Feedback>\r\n\t\t\t</Form.Group>\r\n\t\t\t{ userIdInvalid && passwordInvalid && confirmPassword_invalid ?\r\n\t\t\t\t<Button type=\"submit\">Submit</Button>\r\n\t\t\t\t: <Button type=\"submit\" disabled>Submit</Button>\r\n\r\n\t\t\t}\r\n\t\t</Form>\r\n\t);\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}