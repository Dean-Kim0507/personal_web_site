{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\LoginPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { login } from \"../Actions/auth\";\nimport { l_wrongPassword, l_wrongUser } from './message';\nimport { WRONG_PASSWORD, USER_NOT_FOUND, LOGIN_SUCCESS } from './type';\nimport '../css/Login.css';\n\nfunction LoginPage(props) {\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(null);\n  const [password, setPassword] = useState(null);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const [validated, setValidated] = useState(false);\n  const [userID, setUserID] = useState(null);\n  const dispatch = useDispatch(); // let _uploadResult;\n  // let history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(isLoggedIn);\n    setLoading(true);\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      setLoading(false);\n      e.preventDefault();\n      e.stopPropagation();\n      setValidated(true);\n    } else {\n      const userID = e.target.login_userID.value; // const password = password;\n\n      dispatch(login(userID, password)).catch(() => {\n        setLoading(false);\n      });\n    }\n\n    console.log(errorCount);\n\n    if (message == WRONG_PASSWORD) {\n      setLoading(false);\n      setPassword('');\n    } else if (message == USER_NOT_FOUND) {}\n  };\n\n  useEffect(() => {\n    if (message == LOGIN_SUCCESS) {\n      props.history.push(\"/home\");\n      window.location.reload();\n    } else if (message == WRONG_PASSWORD) {\n      setLoading(false);\n      setAlert(true);\n      setAlertMessage({\n        body: l_wrongPassword,\n        forgot: /*#__PURE__*/React.createElement(Link, {\n          to: \"/forgot/password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, \"Forgot ID or Password?\")\n      });\n      setPassword('');\n    } else if (message == USER_NOT_FOUND) {\n      setLoading(false);\n      setAlert(true);\n      setAlertMessage({\n        body: l_wrongUser,\n        forgot: /*#__PURE__*/React.createElement(Link, {\n          to: \"/forgot/id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        }, \"Forgot ID or Password?\")\n      });\n    }\n  }, [message]);\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    });\n  }\n\n  const onChangePassword = e => {\n    const _password = e.target.value;\n    setPassword(_password);\n  };\n\n  const onChangeUserID = e => {\n    const _userID = e.target.value;\n    setUserID(_userID);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"LoginPage_login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, \"User ID\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"login_userID\",\n    type: \"text\",\n    placeholder: \"Enter User ID\",\n    value: userID,\n    onChange: onChangeUserID,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"login_password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }\n  })), alert && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    onClose: () => setAlert(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, alertMessage.body), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, alertMessage.forgot)), loading ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"border\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 8\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, \"Do you need a new account? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, \"Register\"), \" here\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/LoginPage.jsx"],"names":["React","useState","useEffect","Button","Form","Spinner","Alert","useHistory","Link","useDispatch","useSelector","Redirect","login","l_wrongPassword","l_wrongUser","WRONG_PASSWORD","USER_NOT_FOUND","LOGIN_SUCCESS","LoginPage","props","loading","setLoading","alert","setAlert","alertMessage","setAlertMessage","password","setPassword","isLoggedIn","state","auth","message","validated","setValidated","userID","setUserID","dispatch","handleSubmit","e","preventDefault","console","log","form","currentTarget","checkValidity","stopPropagation","target","login_userID","value","catch","errorCount","history","push","window","location","reload","body","forgot","onChangePassword","_password","onChangeUserID","_userID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Spinner, Alert } from 'react-bootstrap';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from \"../Actions/auth\";\r\nimport { l_wrongPassword, l_wrongUser } from './message';\r\nimport { WRONG_PASSWORD, USER_NOT_FOUND, LOGIN_SUCCESS } from './type';\r\nimport '../css/Login.css';\r\n\r\nfunction LoginPage(props) {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [alert, setAlert] = useState(false);\r\n\tconst [alertMessage, setAlertMessage] = useState(null);\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst { isLoggedIn } = useSelector(state => state.auth);\r\n\tconst { message } = useSelector(state => state.message);\r\n\tconst [validated, setValidated] = useState(false);\r\n\tconst [userID, setUserID] = useState(null);\r\n\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// let _uploadResult;\r\n\t// let history = useHistory();\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(isLoggedIn)\r\n\t\tsetLoading(true);\r\n\r\n\t\tconst form = e.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tsetLoading(false);\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopPropagation();\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst userID = e.target.login_userID.value;\r\n\t\t\t// const password = password;\r\n\t\t\tdispatch(login(userID, password))\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tconsole.log(errorCount)\r\n\t\tif (message == WRONG_PASSWORD) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetPassword('');\r\n\t\t} else if (message == USER_NOT_FOUND) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (message == LOGIN_SUCCESS) {\r\n\t\t\tprops.history.push(\"/home\");\r\n\t\t\twindow.location.reload();\r\n\t\t}\r\n\t\telse if (message == WRONG_PASSWORD) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetAlert(true);\r\n\t\t\tsetAlertMessage({\r\n\t\t\t\tbody: l_wrongPassword,\r\n\t\t\t\tforgot: <Link to='/forgot/password'>Forgot ID or Password?</Link>\r\n\t\t\t})\r\n\t\t\tsetPassword('');\r\n\t\t}\r\n\t\telse if (message == USER_NOT_FOUND) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetAlert(true);\r\n\t\t\tsetAlertMessage({\r\n\t\t\t\tbody: l_wrongUser,\r\n\t\t\t\tforgot: <Link to='/forgot/id'>Forgot ID or Password?</Link>\r\n\t\t\t})\r\n\t\t}\r\n\t}, [message])\r\n\tif (isLoggedIn) {\r\n\t\treturn <Redirect to=\"/home\" />;\r\n\t}\r\n\r\n\tconst onChangePassword = (e) => {\r\n\t\tconst _password = e.target.value;\r\n\t\tsetPassword(_password);\r\n\t};\r\n\r\n\tconst onChangeUserID = (e) => {\r\n\t\tconst _userID = e.target.value;\r\n\t\tsetUserID(_userID);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"login_whole\">\r\n\t\t\t<h1 className=\"LoginPage_login\">Login</h1>\r\n\t\t\t<Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n\t\t\t\t<Form.Group >\r\n\t\t\t\t\t<Form.Label>User ID</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"login_userID\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Enter User ID\"\r\n\t\t\t\t\t\tvalue={userID}\r\n\t\t\t\t\t\tonChange={onChangeUserID}\r\n\t\t\t\t\t\trequired />\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"login_password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={onChangePassword}\r\n\t\t\t\t\t\trequired />\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t{alert &&\r\n\t\t\t\t\t<Alert variant=\"danger\" onClose={() => setAlert(false)} dismissible>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{alertMessage.body}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{alertMessage.forgot}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t}\r\n\t\t\t\t{loading ?\r\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\tas=\"span\"\r\n\t\t\t\t\t\t\tanimation=\"border\"\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\trole=\"status\"\r\n\t\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t: <Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDo you need a new account? <a href=\"/registration\">Register</a> here\r\n\t\t\t\t</p>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}