{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\Client\\\\src\\\\Components\\\\BlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns } from 'react-bootstrap';\nimport '../css/Blog.css';\nimport axios from 'axios';\nimport ReadBlogList from './BlogComponents/ReadBlogList';\n\nfunction BlogList(props) {\n  let [data, setData] = useState(null);\n  let donwloadedData = '';\n  let imagePaths;\n  let writer;\n  let title;\n  let desc;\n  let splittedImagePaths;\n  let [allBlogs, setAllBlogs] = useState([]);\n  useEffect(() => {\n    const res = axios.post(\"/blog/list\").then(async response => {\n      await console.log(response.data);\n      await setAllBlogs(response.data); // for(let i = 0; i<donwloadedData.length; i++){\n      // writer = donwloadedData[i].writer;\n      // title = donwloadedData[i].title;\n      // desc = donwloadedData[i].desc;\n      // imagePaths = donwloadedData[i].imagePaths;\n      // if(imagePaths != null){\n      // \t  splittedImagePaths = imagePaths.split(',');\n      // \tfor(let a= 0; a < splittedImagePaths.length; a++){\n      // \t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length);\n      // \t\tsplittedImagePaths[a] = '../..'+splittedImagePaths[a];\n      // \t\tconsole.log(splittedImagePaths[a]);\n      // \t}\n      // \t}\n      // }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blog_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, allBlogs.map(data => {\n    let readBloglistKeyValue = 0;\n    splittedImagePaths = data.imagePaths.split(',');\n\n    for (let a = 0; a < splittedImagePaths.length; a++) {\n      splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n      console.log(splittedImagePaths[a]);\n    }\n\n    readBloglistKeyValue = readBloglistKeyValue + 1;\n    return /*#__PURE__*/React.createElement(ReadBlogList, {\n      key: readBloglistKeyValue,\n      writer: data.writer,\n      title: data.title,\n      desc: data.desc,\n      imagePathArray: splittedImagePaths,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }\n    });\n  }), console.log(allBlogs), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    href: \"/bloglist/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, \"Add Blog\"));\n}\n\nexport default BlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/Client/src/Components/BlogList.js"],"names":["React","useState","useEffect","Carousel","Button","Image","Card","CardDeck","ListGroup","CardColumns","axios","ReadBlogList","BlogList","props","data","setData","donwloadedData","imagePaths","writer","title","desc","splittedImagePaths","allBlogs","setAllBlogs","res","post","then","response","console","log","map","readBloglistKeyValue","split","a","length","substring"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,WAA5D,QAA8E,iBAA9E;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACvB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAmBd,QAAQ,CAAC,IAAD,CAA/B;AAEA,MAAIe,cAAc,GAAC,EAAnB;AACA,MAAIC,UAAJ;AACA,MAAIC,MAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,kBAAJ;AAEA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMsB,GAAG,GAAId,KAAK,CAACe,IAAN,CAAW,YAAX,EACZC,IADY,CACN,MAAMC,QAAN,IAAkB;AACxB,YAAMC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACb,IAArB,CAAN;AACA,YAAMS,WAAW,CAACI,QAAQ,CAACb,IAAV,CAAjB,CAFwB,CAIxB;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAtBY,CAAb;AAuBA,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEQ,QAAQ,CAACQ,GAAT,CAAchB,IAAD,IAAU;AACtB,QAAIiB,oBAAoB,GAAG,CAA3B;AACAV,IAAAA,kBAAkB,GAAGP,IAAI,CAACG,UAAL,CAAgBe,KAAhB,CAAsB,GAAtB,CAArB;;AACA,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAGZ,kBAAkB,CAACa,MAArC,EAA6CD,CAAC,EAA9C,EAAiD;AAChDZ,MAAAA,kBAAkB,CAACY,CAAD,CAAlB,GAAwBZ,kBAAkB,CAACY,CAAD,CAAlB,CAAsBE,SAAtB,CAAgC,EAAhC,EAAoCd,kBAAkB,CAACY,CAAD,CAAlB,CAAsBC,MAA1D,CAAxB;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYR,kBAAkB,CAACY,CAAD,CAA9B;AACA;;AACDF,IAAAA,oBAAoB,GAAGA,oBAAoB,GAAC,CAA5C;AACA,wBACA,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,oBAAnB;AAAyC,MAAA,MAAM,EAAEjB,IAAI,CAACI,MAAtD;AAA8D,MAAA,KAAK,EAAEJ,IAAI,CAACK,KAA1E;AAAiF,MAAA,IAAI,EAAEL,IAAI,CAACM,IAA5F;AAAkG,MAAA,cAAc,EAAEC,kBAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAIA,GAbD,CAFF,EAkBEO,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAlBF,eAmBC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBD,CADD;AAyBA;;AAED,eAAeV,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Carousel, Button, Image, Card, CardDeck, ListGroup, CardColumns} from 'react-bootstrap';\r\nimport '../css/Blog.css'\r\nimport axios from 'axios';\r\nimport ReadBlogList from './BlogComponents/ReadBlogList';\r\n\r\nfunction BlogList(props){\r\n\tlet [data, setData] =  useState(null);\r\n\r\n\tlet donwloadedData='';\r\n\tlet imagePaths;\r\n\tlet writer;\r\n\tlet title;\r\n\tlet desc;\r\n\tlet splittedImagePaths\r\n\r\n\tlet [allBlogs, setAllBlogs] = useState([]);\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst res =  axios.post(\"/blog/list\")\r\n\t\t.then (async response => {\r\n\t\t\tawait console.log(response.data);\r\n\t\t\tawait setAllBlogs(response.data);\r\n\t\t\t\r\n\t\t\t// for(let i = 0; i<donwloadedData.length; i++){\r\n\t\t\t\r\n\t\t\t// writer = donwloadedData[i].writer;\r\n\t\t\t// title = donwloadedData[i].title;\r\n\t\t\t// desc = donwloadedData[i].desc;\r\n\t\t\t// imagePaths = donwloadedData[i].imagePaths;\r\n\r\n\t\t\t// if(imagePaths != null){\r\n\t\t\t// \t  splittedImagePaths = imagePaths.split(',');\r\n\t\t\t// \tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t// \t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(1, splittedImagePaths[a].length);\r\n\t\t\t// \t\tsplittedImagePaths[a] = '../..'+splittedImagePaths[a];\r\n\t\t\t// \t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t// \t}\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t\t\r\n\t\t})\r\n\t}, []);\r\n\r\n\treturn(\r\n\t\t<div className=\"blog_list\">\r\n\t\t\t{\r\n\t\t\t\tallBlogs.map((data) => {\r\n\t\t\t\t\tlet readBloglistKeyValue = 0;\r\n\t\t\t\t\tsplittedImagePaths = data.imagePaths.split(',');\r\n\t\t\t\t\tfor(let a= 0; a < splittedImagePaths.length; a++){\r\n\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\r\n\t\t\t\t\t\tconsole.log(splittedImagePaths[a]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadBloglistKeyValue = readBloglistKeyValue+1;\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t<ReadBlogList key={readBloglistKeyValue} writer={data.writer} title={data.title} desc={data.desc} imagePathArray={splittedImagePaths}></ReadBlogList>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t{console.log(allBlogs)}\r\n\t\t\t<Button variant=\"primary\" href='/bloglist/create'>Add Blog</Button>\r\n\t\t</div>\r\n\r\n\t)\r\n\r\n}\r\n\r\nexport default BlogList;"]},"metadata":{},"sourceType":"module"}