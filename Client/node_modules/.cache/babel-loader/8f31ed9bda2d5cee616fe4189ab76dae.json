{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\client\\\\src\\\\Components\\\\BlogComponents\\\\UpdateBlogList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\nimport ImageUploader from \"react-images-upload\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction UpdateBlogList(props) {\n  let info = {\n    id: props.match.params.id,\n    writer: props.match.params.author\n  };\n  let history = useHistory();\n  let retrievedData = {};\n  let splittedImagePaths = [];\n  let [data, setData] = useState(null);\n  useEffect(() => {\n    const res = axios.post(\"/blog/retrieveblog\", info).then(response => {\n      retrievedData = response.data;\n      console.log(retrievedData);\n\n      if (retrievedData.id != null) {\n        splittedImagePaths = retrievedData.imagespath.split(',');\n\n        for (let a = 0; a < splittedImagePaths.length; a++) {\n          splittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\n        }\n      } else history.push('/errorpage');\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"updateBlogList_whole\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"writer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"writer\",\n    placeholder: \"NAME\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Text Area\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"desc\",\n    placeholder: \"TEXT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(ImageUploader, Object.assign({\n    name: \"imageUploader\"\n  }, props, {\n    withIcon: true,\n    onChange: onDrop,\n    imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n    maxFileSize: 5242880,\n    withPreview: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, \"Submit\"));\n}\n\nexport default UpdateBlogList;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/BlogComponents/UpdateBlogList.js"],"names":["React","useState","useEffect","axios","Button","FormGroup","Label","Input","ImageUploader","useHistory","UpdateBlogList","props","info","id","match","params","writer","author","history","retrievedData","splittedImagePaths","data","setData","res","post","then","response","console","log","imagespath","split","a","length","substring","push","onDrop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,KAAnC,QAAgD,YAAhD;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC9B,MAAIC,IAAI,GACR;AACCC,IAAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EADxB;AAECG,IAAAA,MAAM,EAAEL,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBE;AAF5B,GADA;AAKA,MAAIC,OAAO,GAAGT,UAAU,EAAxB;AACA,MAAIU,aAAa,GAAG,EAApB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMqB,GAAG,GAAGpB,KAAK,CAACqB,IAAN,CAAW,oBAAX,EAAiCZ,IAAjC,EACVa,IADU,CACLC,QAAQ,IAAI;AACjBP,MAAAA,aAAa,GAAGO,QAAQ,CAACL,IAAzB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;;AACA,UAAIA,aAAa,CAACN,EAAd,IAAoB,IAAxB,EAA8B;AAC7BO,QAAAA,kBAAkB,GAAGD,aAAa,CAACU,UAAd,CAAyBC,KAAzB,CAA+B,GAA/B,CAArB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,kBAAkB,CAACY,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnDX,UAAAA,kBAAkB,CAACW,CAAD,CAAlB,GAAwBX,kBAAkB,CAACW,CAAD,CAAlB,CAAsBE,SAAtB,CAAgC,EAAhC,EAAoCb,kBAAkB,CAACW,CAAD,CAAlB,CAAsBC,MAA1D,CAAxB;AACA;AACD,OALD,MAMKd,OAAO,CAACgB,IAAR,CAAa,YAAb;AAEL,KAZU,CAAZ;AAcA,GAfQ,CAAT;AAiBA,sBACC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,WAAW,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAKC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,WAAW,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CALD,eASC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,WAAW,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CATD,eAaC,oBAAC,aAAD;AACC,IAAA,IAAI,EAAC;AADN,KAEKvB,KAFL;AAGC,IAAA,QAAQ,EAAE,IAHX;AAIC,IAAA,QAAQ,EAAEwB,MAJX;AAKC,IAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CALf;AAMC,IAAA,WAAW,EAAE,OANd;AAOC,IAAA,WAAW,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbD,eAsBC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBD,CADD;AA2BA;;AAID,eAAezB,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UpdateBlogList(props) {\r\n\tlet info =\r\n\t{\r\n\t\tid: props.match.params.id,\r\n\t\twriter: props.match.params.author\r\n\t}\r\n\tlet history = useHistory();\r\n\tlet retrievedData = {};\r\n\tlet splittedImagePaths = [];\r\n\tlet [data, setData] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tconst res = axios.post(\"/blog/retrieveblog\", info)\r\n\t\t\t.then(response => {\r\n\t\t\t\tretrievedData = response.data;\r\n\t\t\t\tconsole.log(retrievedData);\r\n\t\t\t\tif (retrievedData.id != null) {\r\n\t\t\t\t\tsplittedImagePaths = retrievedData.imagespath.split(',');\r\n\t\t\t\t\tfor (let a = 0; a < splittedImagePaths.length; a++) {\r\n\t\t\t\t\t\tsplittedImagePaths[a] = splittedImagePaths[a].substring(16, splittedImagePaths[a].length);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse history.push('/errorpage');\r\n\r\n\t\t\t})\r\n\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='updateBlogList_whole'>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"title\">Name</Label>\r\n\t\t\t\t<Input type=\"text\" name=\"title\" placeholder=\"TITLE\" />\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"writer\">Title</Label>\r\n\t\t\t\t<Input type=\"text\" name=\"writer\" placeholder=\"NAME\" />\r\n\t\t\t</FormGroup>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<Label for=\"desc\">Text Area</Label>\r\n\t\t\t\t<Input type=\"textarea\" name=\"desc\" placeholder=\"TEXT\" />\r\n\t\t\t</FormGroup>\r\n\t\t\t<ImageUploader\r\n\t\t\t\tname=\"imageUploader\"\r\n\t\t\t\t{...props}\r\n\t\t\t\twithIcon={true}\r\n\t\t\t\tonChange={onDrop}\r\n\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n\t\t\t\tmaxFileSize={5242880}\r\n\t\t\t\twithPreview={true}\r\n\t\t\t/>\r\n\t\t\t<Button color=\"primary\" type=\"submit\">Submit</Button>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\n\r\n\r\nexport default UpdateBlogList;"]},"metadata":{},"sourceType":"module"}