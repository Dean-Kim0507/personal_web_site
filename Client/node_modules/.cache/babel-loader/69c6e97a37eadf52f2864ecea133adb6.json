{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Personal_Web_Site\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{Form,Col,Button}from'react-bootstrap';import{useDispatch,useSelector}from\"react-redux\";import{useHistory,Link}from'react-router-dom';import ForgotService from'../Services/Forgot.service';import'../css/ResetAccount.css';import{v_passwordMessage,v_confirmPasswordMessage,e_reset_password_token_expired,e_reset_password_token_notfound,reset_password_success}from\"./message\";import{RESET_PASSWORD,RESET_PASSWORD_VERIFY_TOKEN,TOKEN_EXPIRED,TOKEN_NOTFOUND,RESET_PASSWORD_SUCCESS}from\"./type\";function ResetAccount(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),validated=_useState2[0],setValidated=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),confirmPassword_invalid=_useState8[0],setConfirmPassword_invalid=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),passwordInvalid=_useState10[0],setPasswordInvalid=_useState10[1];var token=props.match.params.token;var email=props.match.params.email;var _password;var _confirm_password;var history=useHistory();var handleSubmit=function handleSubmit(event){var form=event.currentTarget;if(form.checkValidity()===false){event.preventDefault();event.stopPropagation();setValidated(true);}else{event.preventDefault();ForgotService.reset_password({token:token,email:email,password:password,type:RESET_PASSWORD}).then(function(response){console.log(response.data.message);if(response.data.message===RESET_PASSWORD_SUCCESS){alert(reset_password_success);history.push('/login');}});}};useEffect(function(){ForgotService.reset_password({token:token,type:RESET_PASSWORD_VERIFY_TOKEN}).then(function(response){if(response.data.message===TOKEN_EXPIRED){alert(e_reset_password_token_expired);history.push('/home');}else if(response.data.message===TOKEN_NOTFOUND){alert(e_reset_password_token_notfound);history.push('/home');}});//token 유효하지않으면 팅기게 하기, 로그인하면 팅기게하기\n},[]);//validating password, password must be between 8 and 20 letter.\nvar onChangePassword=function onChangePassword(e){_password=e.target.value;if(_password===undefined||_password.length<8||_password.length>20){setPasswordInvalid(true);setPassword(_password);}else if(confirmPassword!=null&&_password!=confirmPassword){setPasswordInvalid(false);setConfirmPassword_invalid(true);setPassword(_password);}else if(confirmPassword!=null&&_password===confirmPassword){setPasswordInvalid(false);setConfirmPassword_invalid(false);setPassword(_password);}else{setPasswordInvalid(function(){return false;});setPassword(_password);if(_password!=confirmPassword){setConfirmPassword_invalid(true);}}};//validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\nvar onChangeConfirmPassword=function onChangeConfirmPassword(e){_confirm_password=e.target.value;if(_confirm_password===undefined||_confirm_password.length<8||_confirm_password.length>20){setConfirmPassword_invalid(true);setConfirmPassword(_confirm_password);}else if(password!=null&&_confirm_password!=password){setConfirmPassword_invalid(true);setConfirmPassword(_confirm_password);}else if(password!=null&&_confirm_password===password){setConfirmPassword_invalid(false);setConfirmPassword(_confirm_password);}else{setConfirmPassword_invalid(true);setConfirmPassword(_confirm_password);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"resetAccount_whole\"},/*#__PURE__*/React.createElement(Form,{noValidate:true,validated:validated,onSubmit:handleSubmit,className:\"resetAccount_form\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Reset Password\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Col,{md:{offset:4}},/*#__PURE__*/React.createElement(Form.Group,{as:Col,md:\"4\",className:\"resetAccount_password\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"resetAccount_label\"},\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Password\",onChange:onChangePassword,isInvalid:passwordInvalid,minLength:\"8\",maxLength:\"20\",required:true}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},v_passwordMessage)),/*#__PURE__*/React.createElement(Form.Group,{as:Col,md:\"4\",className:\"registration_form_group\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"registration_form_label\"},\"Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",required:true,isInvalid:confirmPassword_invalid,onChange:onChangeConfirmPassword,minLength:\"8\",maxLength:\"20\"}),/*#__PURE__*/React.createElement(Form.Control.Feedback,{type:\"invalid\"},v_confirmPasswordMessage)),/*#__PURE__*/React.createElement(Button,{className:\"resetAccount_button\",type:\"submit\"},\"Set Password\"))));}export default ResetAccount;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Personal_Web_Site/client/src/Components/ResetAccount.jsx"],"names":["React","useState","useRef","useEffect","Form","Col","Button","useDispatch","useSelector","useHistory","Link","ForgotService","v_passwordMessage","v_confirmPasswordMessage","e_reset_password_token_expired","e_reset_password_token_notfound","reset_password_success","RESET_PASSWORD","RESET_PASSWORD_VERIFY_TOKEN","TOKEN_EXPIRED","TOKEN_NOTFOUND","RESET_PASSWORD_SUCCESS","ResetAccount","props","validated","setValidated","password","setPassword","confirmPassword","setConfirmPassword","confirmPassword_invalid","setConfirmPassword_invalid","passwordInvalid","setPasswordInvalid","token","match","params","email","_password","_confirm_password","history","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","reset_password","type","then","response","console","log","data","message","alert","push","onChangePassword","e","target","value","undefined","length","onChangeConfirmPassword","offset"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport ForgotService from '../Services/Forgot.service';\r\nimport '../css/ResetAccount.css';\r\nimport {\r\n\tv_passwordMessage,\r\n\tv_confirmPasswordMessage,\r\n\te_reset_password_token_expired,\r\n\te_reset_password_token_notfound,\r\n\treset_password_success\r\n} from \"./message\";\r\nimport {\r\n\tRESET_PASSWORD,\r\n\tRESET_PASSWORD_VERIFY_TOKEN,\r\n\tTOKEN_EXPIRED,\r\n\tTOKEN_NOTFOUND,\r\n\tRESET_PASSWORD_SUCCESS\r\n} from \"./type\";\r\n\r\nfunction ResetAccount(props) {\r\n\r\n\tconst [validated, setValidated] = useState(false);\r\n\tconst [password, setPassword] = useState(null);\r\n\tconst [confirmPassword, setConfirmPassword] = useState(null);\r\n\tconst [confirmPassword_invalid, setConfirmPassword_invalid] = useState();\r\n\tconst [passwordInvalid, setPasswordInvalid] = useState();\r\n\tconst token = props.match.params.token;\r\n\tconst email = props.match.params.email;\r\n\tlet _password;\r\n\tlet _confirm_password;\r\n\tlet history = useHistory();\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tconst form = event.currentTarget;\r\n\t\tif (form.checkValidity() === false) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tsetValidated(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tForgotService.reset_password({\r\n\t\t\t\ttoken: token,\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t\ttype: RESET_PASSWORD\r\n\t\t\t})\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tconsole.log(response.data.message);\r\n\t\t\t\t\tif (response.data.message === RESET_PASSWORD_SUCCESS) {\r\n\t\t\t\t\t\talert(reset_password_success);\r\n\t\t\t\t\t\thistory.push('/login');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tForgotService.reset_password({\r\n\t\t\ttoken: token,\r\n\t\t\ttype: RESET_PASSWORD_VERIFY_TOKEN\r\n\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.message === TOKEN_EXPIRED) {\r\n\t\t\t\t\talert(e_reset_password_token_expired);\r\n\t\t\t\t\thistory.push('/home');\r\n\t\t\t\t}\r\n\t\t\t\telse if (response.data.message === TOKEN_NOTFOUND) {\r\n\t\t\t\t\talert(e_reset_password_token_notfound);\r\n\t\t\t\t\thistory.push('/home');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t//token 유효하지않으면 팅기게 하기, 로그인하면 팅기게하기\r\n\t}, [])\r\n\r\n\t//validating password, password must be between 8 and 20 letter.\r\n\tconst onChangePassword = (e) => {\r\n\t\t_password = e.target.value;\r\n\t\tif (_password === undefined || _password.length < 8 || _password.length > 20) {\r\n\t\t\tsetPasswordInvalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password != confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse if (confirmPassword != null && _password === confirmPassword) {\r\n\t\t\tsetPasswordInvalid(false);\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetPassword(_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPasswordInvalid(() => false);\r\n\t\t\tsetPassword(_password);\r\n\t\t\tif (_password != confirmPassword) {\r\n\t\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t//validating confirm password, confirm password must be between 8 and 20 letter and the same as password.\r\n\tconst onChangeConfirmPassword = (e) => {\r\n\r\n\t\t_confirm_password = e.target.value;\r\n\t\tif (_confirm_password === undefined || _confirm_password.length < 8 || _confirm_password.length > 20) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password != password) {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse if (password != null && _confirm_password === password) {\r\n\t\t\tsetConfirmPassword_invalid(false);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetConfirmPassword_invalid(true);\r\n\t\t\tsetConfirmPassword(_confirm_password);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"resetAccount_whole\">\r\n\t\t\t< Form\r\n\t\t\t\tnoValidate validated={validated}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\tclassName=\"resetAccount_form\"\r\n\t\t\t>\r\n\t\t\t\t<h1>Reset Password</h1>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<Col md={{ offset: 4 }}>\r\n\t\t\t\t\t<Form.Group as={Col} md=\"4\" className=\"resetAccount_password\">\r\n\t\t\t\t\t\t<Form.Label className=\"resetAccount_label\">Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control type=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tonChange={onChangePassword}\r\n\t\t\t\t\t\t\tisInvalid={passwordInvalid}\r\n\t\t\t\t\t\t\tminLength=\"8\"\r\n\t\t\t\t\t\t\tmaxLength=\"20\"\r\n\t\t\t\t\t\t\trequired />\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t{v_passwordMessage}\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group as={Col} md=\"4\" className=\"registration_form_group\">\r\n\t\t\t\t\t\t<Form.Label className=\"registration_form_label\">Confirm Password</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tisInvalid={confirmPassword_invalid}\r\n\t\t\t\t\t\t\tonChange={onChangeConfirmPassword}\r\n\t\t\t\t\t\t\tminLength=\"8\" maxLength=\"20\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t{v_confirmPasswordMessage}\r\n\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<Button className=\"resetAccount_button\" type=\"submit\">Set Password</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Form >\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResetAccount;"]},"metadata":{},"sourceType":"module"}