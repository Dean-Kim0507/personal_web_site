{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\834043\\\\Desktop\\\\study\\\\Project1\\\\src\\\\Components\\\\CommunityComponents\\\\CommunityBoard.js\";\nimport React, { Component } from 'react';\nimport TOC from \"./Components/TOC\";\nimport ReadContent from \"./Components/ReadContent\";\nimport Subject from \"./Components/Subject\";\nimport Control from \"./Components/Control\";\nimport UpdateContent from \"./Components/UpdateContent\";\nimport CreateContent from './Components/CreateContent';\nimport axios from 'axios';\nimport { Button } from 'reactstrap'; // Use class\n\nclass CommunityBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'list',\n      selected_content_id: 0,\n      subject: {\n        title: 'Community Post',\n        sub: \"If you have anything to say to me, please leave it.\"\n      },\n      contents: [],\n      type: this.props.type\n    };\n  } // receive data by using fetch\n\n\n  async componentDidMount() {\n    console.log('componentDidMount()');\n    await axios.post('/communitypost/senddata', this.state.type).then(response => console.log(response)) // this.setState(() => ({contents: response.data.rows[1]})))\n    .then(console.log(this.state.contents));\n  } // receive data by using axios (don't need to convert)\n\n\n  async setData(_id, _writer, _title, _desc, _mode) {\n    console.log('setData()');\n    let data = {\n      id: _id,\n      writer: _writer,\n      title: _title,\n      description: _desc,\n      mode: _mode\n    };\n    await axios.post('/communitypost/receivedata', data).then(response => this.setState(() => ({\n      contents: response.data.rows[1]\n    }))) // {this.setState({contents: response.data.rows[1]})})\n    .then(console.log(this.state.contents)).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getReadContent() {\n    console.log('getReadContent()');\n    let i = 0;\n\n    while (i < this.state.contents.length) {\n      let data = this.state.contents[i];\n\n      if (data.id === this.state.selected_content_id) {\n        return data;\n      }\n\n      i = i + 1;\n    }\n  }\n\n  getContent() {\n    console.log('getContent()');\n\n    let _article,\n        _content = null;\n\n    if (this.state.mode === 'list') {\n      _article = /*#__PURE__*/React.createElement(TOC, {\n        onChangePage: async function (id) {\n          await this.setState({\n            mode: 'read',\n            selected_content_id: Number(id)\n          });\n        }.bind(this),\n        data: this.state.contents,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      });\n      return _article;\n    } //read\n    else if (this.state.mode === 'read') {\n        _content = this.getReadContent();\n        console.log(_content);\n        _article = /*#__PURE__*/React.createElement(ReadContent, {\n          id: _content.id,\n          writer: _content.writer,\n          title: _content.title,\n          desc: _content.description,\n          date: _content.date,\n          time: _content.time,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }\n        });\n      } // Update\n      else if (this.state.mode === 'update') {\n          _content = this.getReadContent();\n          _article = /*#__PURE__*/React.createElement(UpdateContent, {\n            data: _content,\n            onSubmit: function (_id, _writer, _title, _desc) {\n              //add content to this.state.cotnents\n              this.setData(_id, _writer, _title, _desc, 'update');\n              this.setState({\n                mode: 'read'\n              });\n            }.bind(this),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 16\n            }\n          });\n        } //create\n        else if (this.state.mode === 'create') {\n            _article = /*#__PURE__*/React.createElement(CreateContent, {\n              onSubmit: async function (_writer, _title, _desc) {\n                //add content to this.state.cotnents\n                await this.setData(0, _writer, _title, _desc, 'create');\n                await this.setState({\n                  selected_content_id: this.state.contents[this.state.contents.length - 1].id,\n                  mode: 'read'\n                });\n              }.bind(this),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 15\n              }\n            });\n          }\n\n    return _article;\n  }\n\n  createController() {\n    let _button;\n\n    if (this.state.mode === 'read') {\n      console.log('createController()');\n      _button = /*#__PURE__*/React.createElement(Control, {\n        onChangeMode: function (_mode) {\n          //delete\n          if (_mode === 'delete') {\n            if (window.confirm('really?')) {\n              console.log(this.state.selected_content_id);\n              this.setData(this.state.selected_content_id, '', '', '', 'delete');\n              this.setState({\n                mode: 'list',\n                selected_content_id: 0\n              });\n              alert('deleted!');\n            }\n          } else {\n            this.setState({\n              mode: _mode\n            });\n          }\n        }.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 14\n        }\n      });\n      return _button;\n    } else {\n      return null;\n    }\n  }\n\n  createPost() {\n    let _post;\n\n    if (this.state.mode !== 'create') {\n      console.log('createPost()');\n      _post = /*#__PURE__*/React.createElement(Button, {\n        onClick: function (e) {\n          e.preventDefault();\n          this.setState({\n            mode: 'create'\n          });\n        }.bind(this),\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }\n      }, \"Add New Post\");\n      return _post;\n    } else return null;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"CommunityBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        this.setState({\n          mode: 'list'\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 4\n      }\n    }), this.getContent(), this.createController(), this.createPost());\n  }\n\n}\n\nexport default CommunityBoard;","map":{"version":3,"sources":["C:/Users/834043/Desktop/study/Project1/src/Components/CommunityComponents/CommunityBoard.js"],"names":["React","Component","TOC","ReadContent","Subject","Control","UpdateContent","CreateContent","axios","Button","CommunityBoard","constructor","props","state","mode","selected_content_id","subject","title","sub","contents","type","componentDidMount","console","log","post","then","response","setData","_id","_writer","_title","_desc","_mode","data","id","writer","description","setState","rows","catch","error","getReadContent","i","length","getContent","_article","_content","Number","bind","date","time","createController","_button","window","confirm","alert","createPost","_post","e","preventDefault","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport TOC from \"./Components/TOC\";\r\nimport ReadContent from \"./Components/ReadContent\";\r\nimport Subject from \"./Components/Subject\";\r\nimport Control from \"./Components/Control\";\r\nimport UpdateContent from \"./Components/UpdateContent\";\r\nimport CreateContent from './Components/CreateContent';\r\nimport axios from 'axios';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n// Use class\r\nclass CommunityBoard extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\t\r\n\t\tthis.state ={\r\n\t\tmode:'list',\r\n      \tselected_content_id:0,\r\n      \tsubject:{title:'Community Post', sub:\"If you have anything to say to me, please leave it.\"},\r\n\t\tcontents:[],\r\n\t\ttype:this.props.type\r\n\t}\r\n}\t\r\n\t// receive data by using fetch\r\n\tasync componentDidMount() {\r\n\t\tconsole.log('componentDidMount()');\r\n\t\t\r\n\t\tawait axios.post('/communitypost/senddata', this.state.type)\r\n\t\t.then(response => console.log(response))\r\n\t\t\t// this.setState(() => ({contents: response.data.rows[1]})))\r\n\t\t.then(console.log(this.state.contents))\r\n\t}\r\n\r\n\t// receive data by using axios (don't need to convert)\r\n\tasync setData(_id, _writer,_title,_desc,_mode) {\r\n\t\tconsole.log('setData()');\r\n\t\tlet data = {\r\n\t\t\tid:_id,\r\n\t\t\twriter:_writer,\r\n\t\t\ttitle:_title,\r\n\t\t\tdescription:_desc,\r\n\t\t\tmode:_mode\r\n\t\t}\r\n\r\n\t\tawait axios.post('/communitypost/receivedata',data)\r\n\t\t.then(response => \r\n\t\t\tthis.setState(() => ({contents: response.data.rows[1]})))\r\n\t\t\t// {this.setState({contents: response.data.rows[1]})})\r\n\t\t.then(console.log(this.state.contents))\r\n\t\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t\t});\r\n  \t}\r\n\t\r\n\tgetReadContent(){\r\n\t\tconsole.log('getReadContent()');\r\n\t\tlet i =0;\r\n\t\t  while(i<this.state.contents.length){\r\n\t\t\tlet data = this.state.contents[i];\r\n\t\t\tif(data.id === this.state.selected_content_id){\r\n\t\t\t  return data;\r\n\t\t\t}\r\n\t\t\ti=i+1;\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\tgetContent(){\r\n\t\tconsole.log('getContent()');\r\n\t\tlet _article,_content = null;\r\n\t\tif(this.state.mode ==='list'){\r\n\t\t\t_article = <TOC onChangePage = {\r\n\t\t\t\tasync function(id){ \r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tmode:'read',\r\n\t\t\t\t\tselected_content_id:Number(id)\r\n\t\t\t\t});\r\n\t\t\t\t}.bind(this)\r\n\t\t\t} data={this.state.contents}></TOC>\r\n\t\t\treturn _article\r\n\t\t}\r\n\r\n\t\t//read\r\n\t\telse if (this.state.mode ==='read'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t\tconsole.log(_content);\r\n\t\t  _article = <ReadContent id={_content.id} writer={_content.writer} title= {_content.title} desc= {_content.description} date={_content.date} time={_content.time} ></ReadContent>\r\n\t\t}\r\n\r\n\t\t// Update\r\n\t\telse if(this.state.mode ==='update'){\r\n\t\t  _content = this.getReadContent();\r\n\t\t  _article = <UpdateContent data = {_content} onSubmit={\r\n\t\t\tfunction(_id, _writer, _title, _desc){\r\n\t\t\t  //add content to this.state.cotnents\r\n\t\t\t  this.setData(_id, _writer, _title, _desc,'update');\r\n\t\t\t  this.setState({\r\n\t\t\t\tmode:'read'\r\n\t\t\t  });\r\n\t\t\t}.bind(this)\r\n\t\t  }></UpdateContent>\r\n\t\t \r\n\t\t}\r\n\r\n\t\t//create\r\n\t\telse if (this.state.mode ==='create'){\r\n\t\t\t_article = <CreateContent onSubmit={\r\n\t\t\t\t async function(_writer,_title,_desc){\r\n\t\t\t\t//add content to this.state.cotnents\r\n\t\t\t\tawait this.setData(0,_writer,_title,_desc,'create');\r\n\t\t\t\tawait this.setState({\r\n\t\t\t\t\tselected_content_id:this.state.contents[this.state.contents.length-1].id,\r\n\t\t\t\t\tmode:'read'\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this)\r\n\t\t\t}></CreateContent>\r\n\t\t}\r\n\t\treturn _article;\r\n\t  }\r\n\r\n\t  createController() {\r\n\t\t  let _button;\r\n\t\tif(this.state.mode ==='read'){\r\n\t\t\tconsole.log('createController()');\r\n\t\t\t_button = <Control onChangeMode={function(_mode){\r\n\t\t\t\t//delete\r\n\t\t\t\tif(_mode === 'delete'){\r\n\t\t\t\t\tif(window.confirm('really?')){\r\n\t\t\t\t\t\tconsole.log(this.state.selected_content_id);\r\n\t\t\t\t\t\tthis.setData(this.state.selected_content_id,'','','','delete');\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tmode:'list',\r\n\t\t\t\t\t\tselected_content_id:0\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\talert('deleted!');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tmode:_mode\r\n\t\t\t\t});\t\t\t\r\n\t\t\t}\r\n\t\t\t}.bind(this)}></Control>\r\n\t\t\treturn _button;\r\n\t\t} \t\r\n\t\telse {return null;}\r\n\t  }\r\n\r\n\t  createPost() {\r\n\t\t  let _post;\r\n\t\tif (this.state.mode !=='create') {\r\n\t\t\tconsole.log('createPost()');\r\n\t\t\t_post = <Button onClick = {function(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.setState({mode: 'create'})\r\n\t\t\t}.bind(this)}type=\"button\">Add New Post</Button>\r\n\r\n\t\t\treturn _post;\r\n\t\t}\r\n\t\telse return null;\r\n\t  }\r\n\r\n\t  render(){\r\n    \r\n\t\treturn(\r\n\t\t<div className=\"CommunityBoard\">\r\n\t\t\t<Subject title={this.state.subject.title} \r\n\t\t\tsub={this.state.subject.sub}\r\n\t\t\tonChangePage={function(){\r\n\t\t\tthis.setState({mode:'list'});\r\n\t\t\t\r\n\t\t\t}.bind(this)}\r\n\t\t\t></Subject>\r\n\r\n\t\t\t{this.getContent()}\r\n\t\t\t\r\n\t\t\t{this.createController()}\r\n\r\n\t\t\t{this.createPost()}\t\t\t\r\n\r\n\t\t</div>\r\n\t\t);\r\n\t  }\r\n\t}\r\n\r\n\r\nexport default CommunityBoard;"]},"metadata":{},"sourceType":"module"}